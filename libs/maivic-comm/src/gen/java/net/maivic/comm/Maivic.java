// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: maivic.proto

package net.maivic.comm;

public final class Maivic {
  private Maivic() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code net.maivic.comm.Namespace}
   */
  public enum Namespace
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MESSAGE = 1;</code>
     */
    MESSAGE(0, 1),
    /**
     * <code>ENTITY = 2;</code>
     */
    ENTITY(1, 2),
    /**
     * <code>SERVICE = 3;</code>
     */
    SERVICE(2, 3),
    /**
     * <code>THREAD = 4;</code>
     */
    THREAD(3, 4),
    ;

    /**
     * <code>MESSAGE = 1;</code>
     */
    public static final int MESSAGE_VALUE = 1;
    /**
     * <code>ENTITY = 2;</code>
     */
    public static final int ENTITY_VALUE = 2;
    /**
     * <code>SERVICE = 3;</code>
     */
    public static final int SERVICE_VALUE = 3;
    /**
     * <code>THREAD = 4;</code>
     */
    public static final int THREAD_VALUE = 4;


    public final int getNumber() { return value; }

    public static Namespace valueOf(int value) {
      switch (value) {
        case 1: return MESSAGE;
        case 2: return ENTITY;
        case 3: return SERVICE;
        case 4: return THREAD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Namespace>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Namespace>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Namespace>() {
            public Namespace findValueByNumber(int number) {
              return Namespace.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.getDescriptor().getEnumTypes().get(0);
    }

    private static final Namespace[] VALUES = values();

    public static Namespace valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Namespace(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:net.maivic.comm.Namespace)
  }

  public interface ThreadControlOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 thread_id = 1;
    /**
     * <code>required int32 thread_id = 1;</code>
     */
    boolean hasThreadId();
    /**
     * <code>required int32 thread_id = 1;</code>
     */
    int getThreadId();

    // required .net.maivic.comm.ThreadControl.Operation operation = 2 [default = DEFAULT];
    /**
     * <code>required .net.maivic.comm.ThreadControl.Operation operation = 2 [default = DEFAULT];</code>
     */
    boolean hasOperation();
    /**
     * <code>required .net.maivic.comm.ThreadControl.Operation operation = 2 [default = DEFAULT];</code>
     */
    net.maivic.comm.Maivic.ThreadControl.Operation getOperation();

    // optional int32 in_thread_seq = 3 [default = 0];
    /**
     * <code>optional int32 in_thread_seq = 3 [default = 0];</code>
     */
    boolean hasInThreadSeq();
    /**
     * <code>optional int32 in_thread_seq = 3 [default = 0];</code>
     */
    int getInThreadSeq();
  }
  /**
   * Protobuf type {@code net.maivic.comm.ThreadControl}
   */
  public static final class ThreadControl extends
      com.google.protobuf.GeneratedMessage
      implements ThreadControlOrBuilder {
    // Use ThreadControl.newBuilder() to construct.
    private ThreadControl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ThreadControl(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ThreadControl defaultInstance;
    public static ThreadControl getDefaultInstance() {
      return defaultInstance;
    }

    public ThreadControl getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ThreadControl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              threadId_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              net.maivic.comm.Maivic.ThreadControl.Operation value = net.maivic.comm.Maivic.ThreadControl.Operation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                operation_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              inThreadSeq_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_ThreadControl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_ThreadControl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.ThreadControl.class, net.maivic.comm.Maivic.ThreadControl.Builder.class);
    }

    public static com.google.protobuf.Parser<ThreadControl> PARSER =
        new com.google.protobuf.AbstractParser<ThreadControl>() {
      public ThreadControl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ThreadControl(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ThreadControl> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code net.maivic.comm.ThreadControl.Operation}
     */
    public enum Operation
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CLOSE_REQ = 1;</code>
       */
      CLOSE_REQ(0, 1),
      /**
       * <code>CLOSE_ACK = 2;</code>
       */
      CLOSE_ACK(1, 2),
      /**
       * <code>FORCE_CLOSE = 3;</code>
       */
      FORCE_CLOSE(2, 3),
      /**
       * <code>PAUSE = 4;</code>
       */
      PAUSE(3, 4),
      /**
       * <code>RESUME = 5;</code>
       */
      RESUME(4, 5),
      /**
       * <code>OPEN = 6;</code>
       */
      OPEN(5, 6),
      /**
       * <code>DEFAULT = 255;</code>
       */
      DEFAULT(6, 255),
      ;

      /**
       * <code>CLOSE_REQ = 1;</code>
       */
      public static final int CLOSE_REQ_VALUE = 1;
      /**
       * <code>CLOSE_ACK = 2;</code>
       */
      public static final int CLOSE_ACK_VALUE = 2;
      /**
       * <code>FORCE_CLOSE = 3;</code>
       */
      public static final int FORCE_CLOSE_VALUE = 3;
      /**
       * <code>PAUSE = 4;</code>
       */
      public static final int PAUSE_VALUE = 4;
      /**
       * <code>RESUME = 5;</code>
       */
      public static final int RESUME_VALUE = 5;
      /**
       * <code>OPEN = 6;</code>
       */
      public static final int OPEN_VALUE = 6;
      /**
       * <code>DEFAULT = 255;</code>
       */
      public static final int DEFAULT_VALUE = 255;


      public final int getNumber() { return value; }

      public static Operation valueOf(int value) {
        switch (value) {
          case 1: return CLOSE_REQ;
          case 2: return CLOSE_ACK;
          case 3: return FORCE_CLOSE;
          case 4: return PAUSE;
          case 5: return RESUME;
          case 6: return OPEN;
          case 255: return DEFAULT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Operation>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Operation>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Operation>() {
              public Operation findValueByNumber(int number) {
                return Operation.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.ThreadControl.getDescriptor().getEnumTypes().get(0);
      }

      private static final Operation[] VALUES = values();

      public static Operation valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Operation(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:net.maivic.comm.ThreadControl.Operation)
    }

    private int bitField0_;
    // required int32 thread_id = 1;
    public static final int THREAD_ID_FIELD_NUMBER = 1;
    private int threadId_;
    /**
     * <code>required int32 thread_id = 1;</code>
     */
    public boolean hasThreadId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 thread_id = 1;</code>
     */
    public int getThreadId() {
      return threadId_;
    }

    // required .net.maivic.comm.ThreadControl.Operation operation = 2 [default = DEFAULT];
    public static final int OPERATION_FIELD_NUMBER = 2;
    private net.maivic.comm.Maivic.ThreadControl.Operation operation_;
    /**
     * <code>required .net.maivic.comm.ThreadControl.Operation operation = 2 [default = DEFAULT];</code>
     */
    public boolean hasOperation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .net.maivic.comm.ThreadControl.Operation operation = 2 [default = DEFAULT];</code>
     */
    public net.maivic.comm.Maivic.ThreadControl.Operation getOperation() {
      return operation_;
    }

    // optional int32 in_thread_seq = 3 [default = 0];
    public static final int IN_THREAD_SEQ_FIELD_NUMBER = 3;
    private int inThreadSeq_;
    /**
     * <code>optional int32 in_thread_seq = 3 [default = 0];</code>
     */
    public boolean hasInThreadSeq() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 in_thread_seq = 3 [default = 0];</code>
     */
    public int getInThreadSeq() {
      return inThreadSeq_;
    }

    private void initFields() {
      threadId_ = 0;
      operation_ = net.maivic.comm.Maivic.ThreadControl.Operation.DEFAULT;
      inThreadSeq_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasThreadId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOperation()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, threadId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, operation_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, inThreadSeq_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, threadId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, operation_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, inThreadSeq_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.ThreadControl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.ThreadControl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.ThreadControl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.ThreadControl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.ThreadControl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.ThreadControl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.ThreadControl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.ThreadControl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.ThreadControl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.ThreadControl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.ThreadControl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.ThreadControl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.maivic.comm.Maivic.ThreadControlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_ThreadControl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_ThreadControl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.ThreadControl.class, net.maivic.comm.Maivic.ThreadControl.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.ThreadControl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        threadId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        operation_ = net.maivic.comm.Maivic.ThreadControl.Operation.DEFAULT;
        bitField0_ = (bitField0_ & ~0x00000002);
        inThreadSeq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_ThreadControl_descriptor;
      }

      public net.maivic.comm.Maivic.ThreadControl getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.ThreadControl.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.ThreadControl build() {
        net.maivic.comm.Maivic.ThreadControl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.ThreadControl buildPartial() {
        net.maivic.comm.Maivic.ThreadControl result = new net.maivic.comm.Maivic.ThreadControl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.threadId_ = threadId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.operation_ = operation_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.inThreadSeq_ = inThreadSeq_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.ThreadControl) {
          return mergeFrom((net.maivic.comm.Maivic.ThreadControl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.ThreadControl other) {
        if (other == net.maivic.comm.Maivic.ThreadControl.getDefaultInstance()) return this;
        if (other.hasThreadId()) {
          setThreadId(other.getThreadId());
        }
        if (other.hasOperation()) {
          setOperation(other.getOperation());
        }
        if (other.hasInThreadSeq()) {
          setInThreadSeq(other.getInThreadSeq());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasThreadId()) {
          
          return false;
        }
        if (!hasOperation()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.ThreadControl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.ThreadControl) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 thread_id = 1;
      private int threadId_ ;
      /**
       * <code>required int32 thread_id = 1;</code>
       */
      public boolean hasThreadId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 thread_id = 1;</code>
       */
      public int getThreadId() {
        return threadId_;
      }
      /**
       * <code>required int32 thread_id = 1;</code>
       */
      public Builder setThreadId(int value) {
        bitField0_ |= 0x00000001;
        threadId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 thread_id = 1;</code>
       */
      public Builder clearThreadId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        threadId_ = 0;
        onChanged();
        return this;
      }

      // required .net.maivic.comm.ThreadControl.Operation operation = 2 [default = DEFAULT];
      private net.maivic.comm.Maivic.ThreadControl.Operation operation_ = net.maivic.comm.Maivic.ThreadControl.Operation.DEFAULT;
      /**
       * <code>required .net.maivic.comm.ThreadControl.Operation operation = 2 [default = DEFAULT];</code>
       */
      public boolean hasOperation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .net.maivic.comm.ThreadControl.Operation operation = 2 [default = DEFAULT];</code>
       */
      public net.maivic.comm.Maivic.ThreadControl.Operation getOperation() {
        return operation_;
      }
      /**
       * <code>required .net.maivic.comm.ThreadControl.Operation operation = 2 [default = DEFAULT];</code>
       */
      public Builder setOperation(net.maivic.comm.Maivic.ThreadControl.Operation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        operation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .net.maivic.comm.ThreadControl.Operation operation = 2 [default = DEFAULT];</code>
       */
      public Builder clearOperation() {
        bitField0_ = (bitField0_ & ~0x00000002);
        operation_ = net.maivic.comm.Maivic.ThreadControl.Operation.DEFAULT;
        onChanged();
        return this;
      }

      // optional int32 in_thread_seq = 3 [default = 0];
      private int inThreadSeq_ ;
      /**
       * <code>optional int32 in_thread_seq = 3 [default = 0];</code>
       */
      public boolean hasInThreadSeq() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 in_thread_seq = 3 [default = 0];</code>
       */
      public int getInThreadSeq() {
        return inThreadSeq_;
      }
      /**
       * <code>optional int32 in_thread_seq = 3 [default = 0];</code>
       */
      public Builder setInThreadSeq(int value) {
        bitField0_ |= 0x00000004;
        inThreadSeq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 in_thread_seq = 3 [default = 0];</code>
       */
      public Builder clearInThreadSeq() {
        bitField0_ = (bitField0_ & ~0x00000004);
        inThreadSeq_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.ThreadControl)
    }

    static {
      defaultInstance = new ThreadControl(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.ThreadControl)
  }

  public interface MessageContainerOrBuilder extends
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<MessageContainer> {

    // required int32 service_id = 1;
    /**
     * <code>required int32 service_id = 1;</code>
     */
    boolean hasServiceId();
    /**
     * <code>required int32 service_id = 1;</code>
     */
    int getServiceId();

    // required bytes content = 2;
    /**
     * <code>required bytes content = 2;</code>
     */
    boolean hasContent();
    /**
     * <code>required bytes content = 2;</code>
     */
    com.google.protobuf.ByteString getContent();

    // optional .net.maivic.comm.Identity identity_token = 3;
    /**
     * <code>optional .net.maivic.comm.Identity identity_token = 3;</code>
     */
    boolean hasIdentityToken();
    /**
     * <code>optional .net.maivic.comm.Identity identity_token = 3;</code>
     */
    net.maivic.comm.Maivic.Identity getIdentityToken();
    /**
     * <code>optional .net.maivic.comm.Identity identity_token = 3;</code>
     */
    net.maivic.comm.Maivic.IdentityOrBuilder getIdentityTokenOrBuilder();

    // optional int64 auth_token = 4;
    /**
     * <code>optional int64 auth_token = 4;</code>
     */
    boolean hasAuthToken();
    /**
     * <code>optional int64 auth_token = 4;</code>
     */
    long getAuthToken();

    // optional .net.maivic.comm.ThreadControl thread_control = 5;
    /**
     * <code>optional .net.maivic.comm.ThreadControl thread_control = 5;</code>
     */
    boolean hasThreadControl();
    /**
     * <code>optional .net.maivic.comm.ThreadControl thread_control = 5;</code>
     */
    net.maivic.comm.Maivic.ThreadControl getThreadControl();
    /**
     * <code>optional .net.maivic.comm.ThreadControl thread_control = 5;</code>
     */
    net.maivic.comm.Maivic.ThreadControlOrBuilder getThreadControlOrBuilder();
  }
  /**
   * Protobuf type {@code net.maivic.comm.MessageContainer}
   */
  public static final class MessageContainer extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        MessageContainer> implements MessageContainerOrBuilder {
    // Use MessageContainer.newBuilder() to construct.
    private MessageContainer(com.google.protobuf.GeneratedMessage.ExtendableBuilder<net.maivic.comm.Maivic.MessageContainer, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MessageContainer(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MessageContainer defaultInstance;
    public static MessageContainer getDefaultInstance() {
      return defaultInstance;
    }

    public MessageContainer getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MessageContainer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              serviceId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              content_ = input.readBytes();
              break;
            }
            case 26: {
              net.maivic.comm.Maivic.Identity.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = identityToken_.toBuilder();
              }
              identityToken_ = input.readMessage(net.maivic.comm.Maivic.Identity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(identityToken_);
                identityToken_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              authToken_ = input.readInt64();
              break;
            }
            case 42: {
              net.maivic.comm.Maivic.ThreadControl.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = threadControl_.toBuilder();
              }
              threadControl_ = input.readMessage(net.maivic.comm.Maivic.ThreadControl.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(threadControl_);
                threadControl_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_MessageContainer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_MessageContainer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.MessageContainer.class, net.maivic.comm.Maivic.MessageContainer.Builder.class);
    }

    public static com.google.protobuf.Parser<MessageContainer> PARSER =
        new com.google.protobuf.AbstractParser<MessageContainer>() {
      public MessageContainer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MessageContainer(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MessageContainer> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 service_id = 1;
    public static final int SERVICE_ID_FIELD_NUMBER = 1;
    private int serviceId_;
    /**
     * <code>required int32 service_id = 1;</code>
     */
    public boolean hasServiceId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 service_id = 1;</code>
     */
    public int getServiceId() {
      return serviceId_;
    }

    // required bytes content = 2;
    public static final int CONTENT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString content_;
    /**
     * <code>required bytes content = 2;</code>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes content = 2;</code>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    // optional .net.maivic.comm.Identity identity_token = 3;
    public static final int IDENTITY_TOKEN_FIELD_NUMBER = 3;
    private net.maivic.comm.Maivic.Identity identityToken_;
    /**
     * <code>optional .net.maivic.comm.Identity identity_token = 3;</code>
     */
    public boolean hasIdentityToken() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .net.maivic.comm.Identity identity_token = 3;</code>
     */
    public net.maivic.comm.Maivic.Identity getIdentityToken() {
      return identityToken_;
    }
    /**
     * <code>optional .net.maivic.comm.Identity identity_token = 3;</code>
     */
    public net.maivic.comm.Maivic.IdentityOrBuilder getIdentityTokenOrBuilder() {
      return identityToken_;
    }

    // optional int64 auth_token = 4;
    public static final int AUTH_TOKEN_FIELD_NUMBER = 4;
    private long authToken_;
    /**
     * <code>optional int64 auth_token = 4;</code>
     */
    public boolean hasAuthToken() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 auth_token = 4;</code>
     */
    public long getAuthToken() {
      return authToken_;
    }

    // optional .net.maivic.comm.ThreadControl thread_control = 5;
    public static final int THREAD_CONTROL_FIELD_NUMBER = 5;
    private net.maivic.comm.Maivic.ThreadControl threadControl_;
    /**
     * <code>optional .net.maivic.comm.ThreadControl thread_control = 5;</code>
     */
    public boolean hasThreadControl() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .net.maivic.comm.ThreadControl thread_control = 5;</code>
     */
    public net.maivic.comm.Maivic.ThreadControl getThreadControl() {
      return threadControl_;
    }
    /**
     * <code>optional .net.maivic.comm.ThreadControl thread_control = 5;</code>
     */
    public net.maivic.comm.Maivic.ThreadControlOrBuilder getThreadControlOrBuilder() {
      return threadControl_;
    }

    private void initFields() {
      serviceId_ = 0;
      content_ = com.google.protobuf.ByteString.EMPTY;
      identityToken_ = net.maivic.comm.Maivic.Identity.getDefaultInstance();
      authToken_ = 0L;
      threadControl_ = net.maivic.comm.Maivic.ThreadControl.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasServiceId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasContent()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasIdentityToken()) {
        if (!getIdentityToken().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasThreadControl()) {
        if (!getThreadControl().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<net.maivic.comm.Maivic.MessageContainer>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, serviceId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, content_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, identityToken_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, authToken_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, threadControl_);
      }
      extensionWriter.writeUntil(256, output);
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, serviceId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, content_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, identityToken_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, authToken_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, threadControl_);
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.MessageContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.MessageContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.MessageContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.MessageContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.MessageContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.MessageContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.MessageContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.MessageContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.MessageContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.MessageContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.MessageContainer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.MessageContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          net.maivic.comm.Maivic.MessageContainer, Builder> implements net.maivic.comm.Maivic.MessageContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_MessageContainer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_MessageContainer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.MessageContainer.class, net.maivic.comm.Maivic.MessageContainer.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.MessageContainer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdentityTokenFieldBuilder();
          getThreadControlFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        serviceId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        content_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (identityTokenBuilder_ == null) {
          identityToken_ = net.maivic.comm.Maivic.Identity.getDefaultInstance();
        } else {
          identityTokenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        authToken_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (threadControlBuilder_ == null) {
          threadControl_ = net.maivic.comm.Maivic.ThreadControl.getDefaultInstance();
        } else {
          threadControlBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_MessageContainer_descriptor;
      }

      public net.maivic.comm.Maivic.MessageContainer getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.MessageContainer.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.MessageContainer build() {
        net.maivic.comm.Maivic.MessageContainer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.MessageContainer buildPartial() {
        net.maivic.comm.Maivic.MessageContainer result = new net.maivic.comm.Maivic.MessageContainer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serviceId_ = serviceId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.content_ = content_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (identityTokenBuilder_ == null) {
          result.identityToken_ = identityToken_;
        } else {
          result.identityToken_ = identityTokenBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.authToken_ = authToken_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (threadControlBuilder_ == null) {
          result.threadControl_ = threadControl_;
        } else {
          result.threadControl_ = threadControlBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.MessageContainer) {
          return mergeFrom((net.maivic.comm.Maivic.MessageContainer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.MessageContainer other) {
        if (other == net.maivic.comm.Maivic.MessageContainer.getDefaultInstance()) return this;
        if (other.hasServiceId()) {
          setServiceId(other.getServiceId());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        if (other.hasIdentityToken()) {
          mergeIdentityToken(other.getIdentityToken());
        }
        if (other.hasAuthToken()) {
          setAuthToken(other.getAuthToken());
        }
        if (other.hasThreadControl()) {
          mergeThreadControl(other.getThreadControl());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasServiceId()) {
          
          return false;
        }
        if (!hasContent()) {
          
          return false;
        }
        if (hasIdentityToken()) {
          if (!getIdentityToken().isInitialized()) {
            
            return false;
          }
        }
        if (hasThreadControl()) {
          if (!getThreadControl().isInitialized()) {
            
            return false;
          }
        }
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.MessageContainer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.MessageContainer) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 service_id = 1;
      private int serviceId_ ;
      /**
       * <code>required int32 service_id = 1;</code>
       */
      public boolean hasServiceId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 service_id = 1;</code>
       */
      public int getServiceId() {
        return serviceId_;
      }
      /**
       * <code>required int32 service_id = 1;</code>
       */
      public Builder setServiceId(int value) {
        bitField0_ |= 0x00000001;
        serviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 service_id = 1;</code>
       */
      public Builder clearServiceId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serviceId_ = 0;
        onChanged();
        return this;
      }

      // required bytes content = 2;
      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes content = 2;</code>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes content = 2;</code>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <code>required bytes content = 2;</code>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes content = 2;</code>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }

      // optional .net.maivic.comm.Identity identity_token = 3;
      private net.maivic.comm.Maivic.Identity identityToken_ = net.maivic.comm.Maivic.Identity.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.maivic.comm.Maivic.Identity, net.maivic.comm.Maivic.Identity.Builder, net.maivic.comm.Maivic.IdentityOrBuilder> identityTokenBuilder_;
      /**
       * <code>optional .net.maivic.comm.Identity identity_token = 3;</code>
       */
      public boolean hasIdentityToken() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .net.maivic.comm.Identity identity_token = 3;</code>
       */
      public net.maivic.comm.Maivic.Identity getIdentityToken() {
        if (identityTokenBuilder_ == null) {
          return identityToken_;
        } else {
          return identityTokenBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .net.maivic.comm.Identity identity_token = 3;</code>
       */
      public Builder setIdentityToken(net.maivic.comm.Maivic.Identity value) {
        if (identityTokenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          identityToken_ = value;
          onChanged();
        } else {
          identityTokenBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.Identity identity_token = 3;</code>
       */
      public Builder setIdentityToken(
          net.maivic.comm.Maivic.Identity.Builder builderForValue) {
        if (identityTokenBuilder_ == null) {
          identityToken_ = builderForValue.build();
          onChanged();
        } else {
          identityTokenBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.Identity identity_token = 3;</code>
       */
      public Builder mergeIdentityToken(net.maivic.comm.Maivic.Identity value) {
        if (identityTokenBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              identityToken_ != net.maivic.comm.Maivic.Identity.getDefaultInstance()) {
            identityToken_ =
              net.maivic.comm.Maivic.Identity.newBuilder(identityToken_).mergeFrom(value).buildPartial();
          } else {
            identityToken_ = value;
          }
          onChanged();
        } else {
          identityTokenBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.Identity identity_token = 3;</code>
       */
      public Builder clearIdentityToken() {
        if (identityTokenBuilder_ == null) {
          identityToken_ = net.maivic.comm.Maivic.Identity.getDefaultInstance();
          onChanged();
        } else {
          identityTokenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.Identity identity_token = 3;</code>
       */
      public net.maivic.comm.Maivic.Identity.Builder getIdentityTokenBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getIdentityTokenFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .net.maivic.comm.Identity identity_token = 3;</code>
       */
      public net.maivic.comm.Maivic.IdentityOrBuilder getIdentityTokenOrBuilder() {
        if (identityTokenBuilder_ != null) {
          return identityTokenBuilder_.getMessageOrBuilder();
        } else {
          return identityToken_;
        }
      }
      /**
       * <code>optional .net.maivic.comm.Identity identity_token = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          net.maivic.comm.Maivic.Identity, net.maivic.comm.Maivic.Identity.Builder, net.maivic.comm.Maivic.IdentityOrBuilder> 
          getIdentityTokenFieldBuilder() {
        if (identityTokenBuilder_ == null) {
          identityTokenBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.maivic.comm.Maivic.Identity, net.maivic.comm.Maivic.Identity.Builder, net.maivic.comm.Maivic.IdentityOrBuilder>(
                  identityToken_,
                  getParentForChildren(),
                  isClean());
          identityToken_ = null;
        }
        return identityTokenBuilder_;
      }

      // optional int64 auth_token = 4;
      private long authToken_ ;
      /**
       * <code>optional int64 auth_token = 4;</code>
       */
      public boolean hasAuthToken() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 auth_token = 4;</code>
       */
      public long getAuthToken() {
        return authToken_;
      }
      /**
       * <code>optional int64 auth_token = 4;</code>
       */
      public Builder setAuthToken(long value) {
        bitField0_ |= 0x00000008;
        authToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 auth_token = 4;</code>
       */
      public Builder clearAuthToken() {
        bitField0_ = (bitField0_ & ~0x00000008);
        authToken_ = 0L;
        onChanged();
        return this;
      }

      // optional .net.maivic.comm.ThreadControl thread_control = 5;
      private net.maivic.comm.Maivic.ThreadControl threadControl_ = net.maivic.comm.Maivic.ThreadControl.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.maivic.comm.Maivic.ThreadControl, net.maivic.comm.Maivic.ThreadControl.Builder, net.maivic.comm.Maivic.ThreadControlOrBuilder> threadControlBuilder_;
      /**
       * <code>optional .net.maivic.comm.ThreadControl thread_control = 5;</code>
       */
      public boolean hasThreadControl() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .net.maivic.comm.ThreadControl thread_control = 5;</code>
       */
      public net.maivic.comm.Maivic.ThreadControl getThreadControl() {
        if (threadControlBuilder_ == null) {
          return threadControl_;
        } else {
          return threadControlBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .net.maivic.comm.ThreadControl thread_control = 5;</code>
       */
      public Builder setThreadControl(net.maivic.comm.Maivic.ThreadControl value) {
        if (threadControlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          threadControl_ = value;
          onChanged();
        } else {
          threadControlBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.ThreadControl thread_control = 5;</code>
       */
      public Builder setThreadControl(
          net.maivic.comm.Maivic.ThreadControl.Builder builderForValue) {
        if (threadControlBuilder_ == null) {
          threadControl_ = builderForValue.build();
          onChanged();
        } else {
          threadControlBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.ThreadControl thread_control = 5;</code>
       */
      public Builder mergeThreadControl(net.maivic.comm.Maivic.ThreadControl value) {
        if (threadControlBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              threadControl_ != net.maivic.comm.Maivic.ThreadControl.getDefaultInstance()) {
            threadControl_ =
              net.maivic.comm.Maivic.ThreadControl.newBuilder(threadControl_).mergeFrom(value).buildPartial();
          } else {
            threadControl_ = value;
          }
          onChanged();
        } else {
          threadControlBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.ThreadControl thread_control = 5;</code>
       */
      public Builder clearThreadControl() {
        if (threadControlBuilder_ == null) {
          threadControl_ = net.maivic.comm.Maivic.ThreadControl.getDefaultInstance();
          onChanged();
        } else {
          threadControlBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.ThreadControl thread_control = 5;</code>
       */
      public net.maivic.comm.Maivic.ThreadControl.Builder getThreadControlBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getThreadControlFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .net.maivic.comm.ThreadControl thread_control = 5;</code>
       */
      public net.maivic.comm.Maivic.ThreadControlOrBuilder getThreadControlOrBuilder() {
        if (threadControlBuilder_ != null) {
          return threadControlBuilder_.getMessageOrBuilder();
        } else {
          return threadControl_;
        }
      }
      /**
       * <code>optional .net.maivic.comm.ThreadControl thread_control = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          net.maivic.comm.Maivic.ThreadControl, net.maivic.comm.Maivic.ThreadControl.Builder, net.maivic.comm.Maivic.ThreadControlOrBuilder> 
          getThreadControlFieldBuilder() {
        if (threadControlBuilder_ == null) {
          threadControlBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.maivic.comm.Maivic.ThreadControl, net.maivic.comm.Maivic.ThreadControl.Builder, net.maivic.comm.Maivic.ThreadControlOrBuilder>(
                  threadControl_,
                  getParentForChildren(),
                  isClean());
          threadControl_ = null;
        }
        return threadControlBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.MessageContainer)
    }

    static {
      defaultInstance = new MessageContainer(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.MessageContainer)
  }

  public interface MaivicServicesOrBuilder extends
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<MaivicServices> {

    // repeated int32 service_ids = 1;
    /**
     * <code>repeated int32 service_ids = 1;</code>
     */
    java.util.List<java.lang.Integer> getServiceIdsList();
    /**
     * <code>repeated int32 service_ids = 1;</code>
     */
    int getServiceIdsCount();
    /**
     * <code>repeated int32 service_ids = 1;</code>
     */
    int getServiceIds(int index);

    // repeated string service_names = 2;
    /**
     * <code>repeated string service_names = 2;</code>
     */
    java.util.List<java.lang.String>
    getServiceNamesList();
    /**
     * <code>repeated string service_names = 2;</code>
     */
    int getServiceNamesCount();
    /**
     * <code>repeated string service_names = 2;</code>
     */
    java.lang.String getServiceNames(int index);
    /**
     * <code>repeated string service_names = 2;</code>
     */
    com.google.protobuf.ByteString
        getServiceNamesBytes(int index);
  }
  /**
   * Protobuf type {@code net.maivic.comm.MaivicServices}
   */
  public static final class MaivicServices extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        MaivicServices> implements MaivicServicesOrBuilder {
    // Use MaivicServices.newBuilder() to construct.
    private MaivicServices(com.google.protobuf.GeneratedMessage.ExtendableBuilder<net.maivic.comm.Maivic.MaivicServices, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MaivicServices(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MaivicServices defaultInstance;
    public static MaivicServices getDefaultInstance() {
      return defaultInstance;
    }

    public MaivicServices getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MaivicServices(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                serviceIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              serviceIds_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                serviceIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                serviceIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                serviceNames_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              serviceNames_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          serviceIds_ = java.util.Collections.unmodifiableList(serviceIds_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          serviceNames_ = new com.google.protobuf.UnmodifiableLazyStringList(serviceNames_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_MaivicServices_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_MaivicServices_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.MaivicServices.class, net.maivic.comm.Maivic.MaivicServices.Builder.class);
    }

    public static com.google.protobuf.Parser<MaivicServices> PARSER =
        new com.google.protobuf.AbstractParser<MaivicServices>() {
      public MaivicServices parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MaivicServices(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MaivicServices> getParserForType() {
      return PARSER;
    }

    // repeated int32 service_ids = 1;
    public static final int SERVICE_IDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> serviceIds_;
    /**
     * <code>repeated int32 service_ids = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getServiceIdsList() {
      return serviceIds_;
    }
    /**
     * <code>repeated int32 service_ids = 1;</code>
     */
    public int getServiceIdsCount() {
      return serviceIds_.size();
    }
    /**
     * <code>repeated int32 service_ids = 1;</code>
     */
    public int getServiceIds(int index) {
      return serviceIds_.get(index);
    }

    // repeated string service_names = 2;
    public static final int SERVICE_NAMES_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList serviceNames_;
    /**
     * <code>repeated string service_names = 2;</code>
     */
    public java.util.List<java.lang.String>
        getServiceNamesList() {
      return serviceNames_;
    }
    /**
     * <code>repeated string service_names = 2;</code>
     */
    public int getServiceNamesCount() {
      return serviceNames_.size();
    }
    /**
     * <code>repeated string service_names = 2;</code>
     */
    public java.lang.String getServiceNames(int index) {
      return serviceNames_.get(index);
    }
    /**
     * <code>repeated string service_names = 2;</code>
     */
    public com.google.protobuf.ByteString
        getServiceNamesBytes(int index) {
      return serviceNames_.getByteString(index);
    }

    private void initFields() {
      serviceIds_ = java.util.Collections.emptyList();
      serviceNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<net.maivic.comm.Maivic.MaivicServices>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      for (int i = 0; i < serviceIds_.size(); i++) {
        output.writeInt32(1, serviceIds_.get(i));
      }
      for (int i = 0; i < serviceNames_.size(); i++) {
        output.writeBytes(2, serviceNames_.getByteString(i));
      }
      extensionWriter.writeUntil(256, output);
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < serviceIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(serviceIds_.get(i));
        }
        size += dataSize;
        size += 1 * getServiceIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < serviceNames_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(serviceNames_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getServiceNamesList().size();
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.MaivicServices parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.MaivicServices parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.MaivicServices parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.MaivicServices parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.MaivicServices parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.MaivicServices parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.MaivicServices parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.MaivicServices parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.MaivicServices parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.MaivicServices parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.MaivicServices prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.MaivicServices}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          net.maivic.comm.Maivic.MaivicServices, Builder> implements net.maivic.comm.Maivic.MaivicServicesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_MaivicServices_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_MaivicServices_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.MaivicServices.class, net.maivic.comm.Maivic.MaivicServices.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.MaivicServices.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        serviceIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        serviceNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_MaivicServices_descriptor;
      }

      public net.maivic.comm.Maivic.MaivicServices getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.MaivicServices.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.MaivicServices build() {
        net.maivic.comm.Maivic.MaivicServices result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.MaivicServices buildPartial() {
        net.maivic.comm.Maivic.MaivicServices result = new net.maivic.comm.Maivic.MaivicServices(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          serviceIds_ = java.util.Collections.unmodifiableList(serviceIds_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.serviceIds_ = serviceIds_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          serviceNames_ = new com.google.protobuf.UnmodifiableLazyStringList(
              serviceNames_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.serviceNames_ = serviceNames_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.MaivicServices) {
          return mergeFrom((net.maivic.comm.Maivic.MaivicServices)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.MaivicServices other) {
        if (other == net.maivic.comm.Maivic.MaivicServices.getDefaultInstance()) return this;
        if (!other.serviceIds_.isEmpty()) {
          if (serviceIds_.isEmpty()) {
            serviceIds_ = other.serviceIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureServiceIdsIsMutable();
            serviceIds_.addAll(other.serviceIds_);
          }
          onChanged();
        }
        if (!other.serviceNames_.isEmpty()) {
          if (serviceNames_.isEmpty()) {
            serviceNames_ = other.serviceNames_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureServiceNamesIsMutable();
            serviceNames_.addAll(other.serviceNames_);
          }
          onChanged();
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.MaivicServices parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.MaivicServices) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 service_ids = 1;
      private java.util.List<java.lang.Integer> serviceIds_ = java.util.Collections.emptyList();
      private void ensureServiceIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          serviceIds_ = new java.util.ArrayList<java.lang.Integer>(serviceIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 service_ids = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getServiceIdsList() {
        return java.util.Collections.unmodifiableList(serviceIds_);
      }
      /**
       * <code>repeated int32 service_ids = 1;</code>
       */
      public int getServiceIdsCount() {
        return serviceIds_.size();
      }
      /**
       * <code>repeated int32 service_ids = 1;</code>
       */
      public int getServiceIds(int index) {
        return serviceIds_.get(index);
      }
      /**
       * <code>repeated int32 service_ids = 1;</code>
       */
      public Builder setServiceIds(
          int index, int value) {
        ensureServiceIdsIsMutable();
        serviceIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 service_ids = 1;</code>
       */
      public Builder addServiceIds(int value) {
        ensureServiceIdsIsMutable();
        serviceIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 service_ids = 1;</code>
       */
      public Builder addAllServiceIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureServiceIdsIsMutable();
        super.addAll(values, serviceIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 service_ids = 1;</code>
       */
      public Builder clearServiceIds() {
        serviceIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated string service_names = 2;
      private com.google.protobuf.LazyStringList serviceNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureServiceNamesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          serviceNames_ = new com.google.protobuf.LazyStringArrayList(serviceNames_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string service_names = 2;</code>
       */
      public java.util.List<java.lang.String>
          getServiceNamesList() {
        return java.util.Collections.unmodifiableList(serviceNames_);
      }
      /**
       * <code>repeated string service_names = 2;</code>
       */
      public int getServiceNamesCount() {
        return serviceNames_.size();
      }
      /**
       * <code>repeated string service_names = 2;</code>
       */
      public java.lang.String getServiceNames(int index) {
        return serviceNames_.get(index);
      }
      /**
       * <code>repeated string service_names = 2;</code>
       */
      public com.google.protobuf.ByteString
          getServiceNamesBytes(int index) {
        return serviceNames_.getByteString(index);
      }
      /**
       * <code>repeated string service_names = 2;</code>
       */
      public Builder setServiceNames(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureServiceNamesIsMutable();
        serviceNames_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string service_names = 2;</code>
       */
      public Builder addServiceNames(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureServiceNamesIsMutable();
        serviceNames_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string service_names = 2;</code>
       */
      public Builder addAllServiceNames(
          java.lang.Iterable<java.lang.String> values) {
        ensureServiceNamesIsMutable();
        super.addAll(values, serviceNames_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string service_names = 2;</code>
       */
      public Builder clearServiceNames() {
        serviceNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string service_names = 2;</code>
       */
      public Builder addServiceNamesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureServiceNamesIsMutable();
        serviceNames_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.MaivicServices)
    }

    static {
      defaultInstance = new MaivicServices(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.MaivicServices)
  }

  public interface SelfDescribingMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string type_name = 1;
    /**
     * <code>required string type_name = 1;</code>
     */
    boolean hasTypeName();
    /**
     * <code>required string type_name = 1;</code>
     */
    java.lang.String getTypeName();
    /**
     * <code>required string type_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getTypeNameBytes();

    // required bytes content = 2;
    /**
     * <code>required bytes content = 2;</code>
     */
    boolean hasContent();
    /**
     * <code>required bytes content = 2;</code>
     */
    com.google.protobuf.ByteString getContent();
  }
  /**
   * Protobuf type {@code net.maivic.comm.SelfDescribingMessage}
   */
  public static final class SelfDescribingMessage extends
      com.google.protobuf.GeneratedMessage
      implements SelfDescribingMessageOrBuilder {
    // Use SelfDescribingMessage.newBuilder() to construct.
    private SelfDescribingMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SelfDescribingMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SelfDescribingMessage defaultInstance;
    public static SelfDescribingMessage getDefaultInstance() {
      return defaultInstance;
    }

    public SelfDescribingMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SelfDescribingMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              typeName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              content_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_SelfDescribingMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_SelfDescribingMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.SelfDescribingMessage.class, net.maivic.comm.Maivic.SelfDescribingMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<SelfDescribingMessage> PARSER =
        new com.google.protobuf.AbstractParser<SelfDescribingMessage>() {
      public SelfDescribingMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SelfDescribingMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SelfDescribingMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string type_name = 1;
    public static final int TYPE_NAME_FIELD_NUMBER = 1;
    private java.lang.Object typeName_;
    /**
     * <code>required string type_name = 1;</code>
     */
    public boolean hasTypeName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string type_name = 1;</code>
     */
    public java.lang.String getTypeName() {
      java.lang.Object ref = typeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          typeName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string type_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTypeNameBytes() {
      java.lang.Object ref = typeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        typeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required bytes content = 2;
    public static final int CONTENT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString content_;
    /**
     * <code>required bytes content = 2;</code>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes content = 2;</code>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    private void initFields() {
      typeName_ = "";
      content_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTypeName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasContent()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTypeNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, content_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTypeNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, content_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.SelfDescribingMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.SelfDescribingMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.SelfDescribingMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.SelfDescribingMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.SelfDescribingMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.SelfDescribingMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.SelfDescribingMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.SelfDescribingMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.SelfDescribingMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.SelfDescribingMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.SelfDescribingMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.SelfDescribingMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.maivic.comm.Maivic.SelfDescribingMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_SelfDescribingMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_SelfDescribingMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.SelfDescribingMessage.class, net.maivic.comm.Maivic.SelfDescribingMessage.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.SelfDescribingMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        typeName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        content_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_SelfDescribingMessage_descriptor;
      }

      public net.maivic.comm.Maivic.SelfDescribingMessage getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.SelfDescribingMessage.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.SelfDescribingMessage build() {
        net.maivic.comm.Maivic.SelfDescribingMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.SelfDescribingMessage buildPartial() {
        net.maivic.comm.Maivic.SelfDescribingMessage result = new net.maivic.comm.Maivic.SelfDescribingMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.typeName_ = typeName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.content_ = content_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.SelfDescribingMessage) {
          return mergeFrom((net.maivic.comm.Maivic.SelfDescribingMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.SelfDescribingMessage other) {
        if (other == net.maivic.comm.Maivic.SelfDescribingMessage.getDefaultInstance()) return this;
        if (other.hasTypeName()) {
          bitField0_ |= 0x00000001;
          typeName_ = other.typeName_;
          onChanged();
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTypeName()) {
          
          return false;
        }
        if (!hasContent()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.SelfDescribingMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.SelfDescribingMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string type_name = 1;
      private java.lang.Object typeName_ = "";
      /**
       * <code>required string type_name = 1;</code>
       */
      public boolean hasTypeName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string type_name = 1;</code>
       */
      public java.lang.String getTypeName() {
        java.lang.Object ref = typeName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          typeName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string type_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTypeNameBytes() {
        java.lang.Object ref = typeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          typeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string type_name = 1;</code>
       */
      public Builder setTypeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        typeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string type_name = 1;</code>
       */
      public Builder clearTypeName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        typeName_ = getDefaultInstance().getTypeName();
        onChanged();
        return this;
      }
      /**
       * <code>required string type_name = 1;</code>
       */
      public Builder setTypeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        typeName_ = value;
        onChanged();
        return this;
      }

      // required bytes content = 2;
      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes content = 2;</code>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes content = 2;</code>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <code>required bytes content = 2;</code>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes content = 2;</code>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.SelfDescribingMessage)
    }

    static {
      defaultInstance = new SelfDescribingMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.SelfDescribingMessage)
  }

  public interface BaseTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated bytes bytes = 1;
    /**
     * <code>repeated bytes bytes = 1;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getBytesList();
    /**
     * <code>repeated bytes bytes = 1;</code>
     */
    int getBytesCount();
    /**
     * <code>repeated bytes bytes = 1;</code>
     */
    com.google.protobuf.ByteString getBytes(int index);

    // repeated string string = 2;
    /**
     * <code>repeated string string = 2;</code>
     */
    java.util.List<java.lang.String>
    getStringList();
    /**
     * <code>repeated string string = 2;</code>
     */
    int getStringCount();
    /**
     * <code>repeated string string = 2;</code>
     */
    java.lang.String getString(int index);
    /**
     * <code>repeated string string = 2;</code>
     */
    com.google.protobuf.ByteString
        getStringBytes(int index);

    // repeated int32 i32 = 3 [packed = true];
    /**
     * <code>repeated int32 i32 = 3 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getI32List();
    /**
     * <code>repeated int32 i32 = 3 [packed = true];</code>
     */
    int getI32Count();
    /**
     * <code>repeated int32 i32 = 3 [packed = true];</code>
     */
    int getI32(int index);

    // repeated int64 i64 = 4 [packed = true];
    /**
     * <code>repeated int64 i64 = 4 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getI64List();
    /**
     * <code>repeated int64 i64 = 4 [packed = true];</code>
     */
    int getI64Count();
    /**
     * <code>repeated int64 i64 = 4 [packed = true];</code>
     */
    long getI64(int index);

    // repeated uint32 uint32 = 5 [packed = true];
    /**
     * <code>repeated uint32 uint32 = 5 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getUint32List();
    /**
     * <code>repeated uint32 uint32 = 5 [packed = true];</code>
     */
    int getUint32Count();
    /**
     * <code>repeated uint32 uint32 = 5 [packed = true];</code>
     */
    int getUint32(int index);

    // repeated uint64 uint64 = 6 [packed = true];
    /**
     * <code>repeated uint64 uint64 = 6 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getUint64List();
    /**
     * <code>repeated uint64 uint64 = 6 [packed = true];</code>
     */
    int getUint64Count();
    /**
     * <code>repeated uint64 uint64 = 6 [packed = true];</code>
     */
    long getUint64(int index);

    // repeated sint32 sint32 = 7 [packed = true];
    /**
     * <code>repeated sint32 sint32 = 7 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getSint32List();
    /**
     * <code>repeated sint32 sint32 = 7 [packed = true];</code>
     */
    int getSint32Count();
    /**
     * <code>repeated sint32 sint32 = 7 [packed = true];</code>
     */
    int getSint32(int index);

    // repeated sint64 sint64 = 8 [packed = true];
    /**
     * <code>repeated sint64 sint64 = 8 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getSint64List();
    /**
     * <code>repeated sint64 sint64 = 8 [packed = true];</code>
     */
    int getSint64Count();
    /**
     * <code>repeated sint64 sint64 = 8 [packed = true];</code>
     */
    long getSint64(int index);

    // repeated fixed32 fixed32 = 9 [packed = true];
    /**
     * <code>repeated fixed32 fixed32 = 9 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getFixed32List();
    /**
     * <code>repeated fixed32 fixed32 = 9 [packed = true];</code>
     */
    int getFixed32Count();
    /**
     * <code>repeated fixed32 fixed32 = 9 [packed = true];</code>
     */
    int getFixed32(int index);

    // repeated fixed64 fixed64 = 10 [packed = true];
    /**
     * <code>repeated fixed64 fixed64 = 10 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getFixed64List();
    /**
     * <code>repeated fixed64 fixed64 = 10 [packed = true];</code>
     */
    int getFixed64Count();
    /**
     * <code>repeated fixed64 fixed64 = 10 [packed = true];</code>
     */
    long getFixed64(int index);

    // repeated sfixed32 sfixed32 = 11 [packed = true];
    /**
     * <code>repeated sfixed32 sfixed32 = 11 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getSfixed32List();
    /**
     * <code>repeated sfixed32 sfixed32 = 11 [packed = true];</code>
     */
    int getSfixed32Count();
    /**
     * <code>repeated sfixed32 sfixed32 = 11 [packed = true];</code>
     */
    int getSfixed32(int index);

    // repeated sfixed64 sfixed64 = 12 [packed = true];
    /**
     * <code>repeated sfixed64 sfixed64 = 12 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getSfixed64List();
    /**
     * <code>repeated sfixed64 sfixed64 = 12 [packed = true];</code>
     */
    int getSfixed64Count();
    /**
     * <code>repeated sfixed64 sfixed64 = 12 [packed = true];</code>
     */
    long getSfixed64(int index);

    // repeated bool bool = 13 [packed = true];
    /**
     * <code>repeated bool bool = 13 [packed = true];</code>
     */
    java.util.List<java.lang.Boolean> getBoolList();
    /**
     * <code>repeated bool bool = 13 [packed = true];</code>
     */
    int getBoolCount();
    /**
     * <code>repeated bool bool = 13 [packed = true];</code>
     */
    boolean getBool(int index);

    // repeated double double = 14 [packed = true];
    /**
     * <code>repeated double double = 14 [packed = true];</code>
     */
    java.util.List<java.lang.Double> getDoubleList();
    /**
     * <code>repeated double double = 14 [packed = true];</code>
     */
    int getDoubleCount();
    /**
     * <code>repeated double double = 14 [packed = true];</code>
     */
    double getDouble(int index);

    // repeated float float = 15 [packed = true];
    /**
     * <code>repeated float float = 15 [packed = true];</code>
     */
    java.util.List<java.lang.Float> getFloatList();
    /**
     * <code>repeated float float = 15 [packed = true];</code>
     */
    int getFloatCount();
    /**
     * <code>repeated float float = 15 [packed = true];</code>
     */
    float getFloat(int index);

    // optional bool list_type = 16 [default = false];
    /**
     * <code>optional bool list_type = 16 [default = false];</code>
     */
    boolean hasListType();
    /**
     * <code>optional bool list_type = 16 [default = false];</code>
     */
    boolean getListType();

    // repeated .net.maivic.comm.SelfDescribingMessage message = 17;
    /**
     * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
     */
    java.util.List<net.maivic.comm.Maivic.SelfDescribingMessage> 
        getMessageList();
    /**
     * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
     */
    net.maivic.comm.Maivic.SelfDescribingMessage getMessage(int index);
    /**
     * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
     */
    java.util.List<? extends net.maivic.comm.Maivic.SelfDescribingMessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
     */
    net.maivic.comm.Maivic.SelfDescribingMessageOrBuilder getMessageOrBuilder(
        int index);

    // repeated .net.maivic.comm.BaseType base_type = 18;
    /**
     * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
     */
    java.util.List<net.maivic.comm.Maivic.BaseType> 
        getBaseTypeList();
    /**
     * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
     */
    net.maivic.comm.Maivic.BaseType getBaseType(int index);
    /**
     * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
     */
    int getBaseTypeCount();
    /**
     * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
     */
    java.util.List<? extends net.maivic.comm.Maivic.BaseTypeOrBuilder> 
        getBaseTypeOrBuilderList();
    /**
     * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
     */
    net.maivic.comm.Maivic.BaseTypeOrBuilder getBaseTypeOrBuilder(
        int index);

    // optional .net.maivic.comm.BaseType.ENCODED_TYPE encoded_type = 19;
    /**
     * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE encoded_type = 19;</code>
     */
    boolean hasEncodedType();
    /**
     * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE encoded_type = 19;</code>
     */
    net.maivic.comm.Maivic.BaseType.ENCODED_TYPE getEncodedType();

    // optional .net.maivic.comm.BaseType.ENCODED_TYPE component_type = 20;
    /**
     * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE component_type = 20;</code>
     */
    boolean hasComponentType();
    /**
     * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE component_type = 20;</code>
     */
    net.maivic.comm.Maivic.BaseType.ENCODED_TYPE getComponentType();
  }
  /**
   * Protobuf type {@code net.maivic.comm.BaseType}
   */
  public static final class BaseType extends
      com.google.protobuf.GeneratedMessage
      implements BaseTypeOrBuilder {
    // Use BaseType.newBuilder() to construct.
    private BaseType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BaseType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BaseType defaultInstance;
    public static BaseType getDefaultInstance() {
      return defaultInstance;
    }

    public BaseType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BaseType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                bytes_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000001;
              }
              bytes_.add(input.readBytes());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                string_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              string_.add(input.readBytes());
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                i32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              i32_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                i32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                i32_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                i64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              i64_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                i64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                i64_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                uint32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              uint32_.add(input.readUInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                uint32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                uint32_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                uint64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              uint64_.add(input.readUInt64());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                uint64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                uint64_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                sint32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              sint32_.add(input.readSInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                sint32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                sint32_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                sint64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              sint64_.add(input.readSInt64());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                sint64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                sint64_.add(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 77: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                fixed32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              fixed32_.add(input.readFixed32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                fixed32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                fixed32_.add(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 81: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                fixed64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              fixed64_.add(input.readFixed64());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                fixed64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                fixed64_.add(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 93: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                sfixed32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              sfixed32_.add(input.readSFixed32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                sfixed32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                sfixed32_.add(input.readSFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 97: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                sfixed64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000800;
              }
              sfixed64_.add(input.readSFixed64());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                sfixed64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                sfixed64_.add(input.readSFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                bool_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00001000;
              }
              bool_.add(input.readBool());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                bool_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                bool_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 113: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                double_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00002000;
              }
              double_.add(input.readDouble());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                double_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                double_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 125: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                float_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00004000;
              }
              float_.add(input.readFloat());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                float_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                float_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              bitField0_ |= 0x00000001;
              listType_ = input.readBool();
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                message_ = new java.util.ArrayList<net.maivic.comm.Maivic.SelfDescribingMessage>();
                mutable_bitField0_ |= 0x00010000;
              }
              message_.add(input.readMessage(net.maivic.comm.Maivic.SelfDescribingMessage.PARSER, extensionRegistry));
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                baseType_ = new java.util.ArrayList<net.maivic.comm.Maivic.BaseType>();
                mutable_bitField0_ |= 0x00020000;
              }
              baseType_.add(input.readMessage(net.maivic.comm.Maivic.BaseType.PARSER, extensionRegistry));
              break;
            }
            case 152: {
              int rawValue = input.readEnum();
              net.maivic.comm.Maivic.BaseType.ENCODED_TYPE value = net.maivic.comm.Maivic.BaseType.ENCODED_TYPE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(19, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                encodedType_ = value;
              }
              break;
            }
            case 160: {
              int rawValue = input.readEnum();
              net.maivic.comm.Maivic.BaseType.ENCODED_TYPE value = net.maivic.comm.Maivic.BaseType.ENCODED_TYPE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(20, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                componentType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          bytes_ = java.util.Collections.unmodifiableList(bytes_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          string_ = new com.google.protobuf.UnmodifiableLazyStringList(string_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          i32_ = java.util.Collections.unmodifiableList(i32_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          i64_ = java.util.Collections.unmodifiableList(i64_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          uint32_ = java.util.Collections.unmodifiableList(uint32_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          uint64_ = java.util.Collections.unmodifiableList(uint64_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          sint32_ = java.util.Collections.unmodifiableList(sint32_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          sint64_ = java.util.Collections.unmodifiableList(sint64_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32_ = java.util.Collections.unmodifiableList(fixed32_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64_ = java.util.Collections.unmodifiableList(fixed64_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32_ = java.util.Collections.unmodifiableList(sfixed32_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64_ = java.util.Collections.unmodifiableList(sfixed64_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          bool_ = java.util.Collections.unmodifiableList(bool_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          double_ = java.util.Collections.unmodifiableList(double_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          float_ = java.util.Collections.unmodifiableList(float_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          baseType_ = java.util.Collections.unmodifiableList(baseType_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_BaseType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_BaseType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.BaseType.class, net.maivic.comm.Maivic.BaseType.Builder.class);
    }

    public static com.google.protobuf.Parser<BaseType> PARSER =
        new com.google.protobuf.AbstractParser<BaseType>() {
      public BaseType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BaseType(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BaseType> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code net.maivic.comm.BaseType.ENCODED_TYPE}
     */
    public enum ENCODED_TYPE
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>BYTES = 1;</code>
       */
      BYTES(0, 1),
      /**
       * <code>STRING = 2;</code>
       */
      STRING(1, 2),
      /**
       * <code>INT32 = 3;</code>
       */
      INT32(2, 3),
      /**
       * <code>INT64 = 4;</code>
       */
      INT64(3, 4),
      /**
       * <code>UINT32 = 5;</code>
       */
      UINT32(4, 5),
      /**
       * <code>UINT64 = 6;</code>
       */
      UINT64(5, 6),
      /**
       * <code>SINT32 = 7;</code>
       */
      SINT32(6, 7),
      /**
       * <code>SINT64 = 8;</code>
       */
      SINT64(7, 8),
      /**
       * <code>FIXED32 = 9;</code>
       */
      FIXED32(8, 9),
      /**
       * <code>FIXED64 = 10;</code>
       */
      FIXED64(9, 10),
      /**
       * <code>SFIXED32 = 11;</code>
       */
      SFIXED32(10, 11),
      /**
       * <code>SFIXED64 = 12;</code>
       */
      SFIXED64(11, 12),
      /**
       * <code>BOOL = 13;</code>
       */
      BOOL(12, 13),
      /**
       * <code>DOUBLE = 14;</code>
       */
      DOUBLE(13, 14),
      /**
       * <code>FLOAT = 15;</code>
       */
      FLOAT(14, 15),
      /**
       * <code>LIST_TYPE = 16;</code>
       */
      LIST_TYPE(15, 16),
      /**
       * <code>UNKNOWN = 17;</code>
       */
      UNKNOWN(16, 17),
      /**
       * <code>MESSAGE = 18;</code>
       */
      MESSAGE(17, 18),
      /**
       * <code>COMPONENT_BASE_TYPE = 19;</code>
       */
      COMPONENT_BASE_TYPE(18, 19),
      /**
       * <code>NONE = 20;</code>
       */
      NONE(19, 20),
      ;

      /**
       * <code>BYTES = 1;</code>
       */
      public static final int BYTES_VALUE = 1;
      /**
       * <code>STRING = 2;</code>
       */
      public static final int STRING_VALUE = 2;
      /**
       * <code>INT32 = 3;</code>
       */
      public static final int INT32_VALUE = 3;
      /**
       * <code>INT64 = 4;</code>
       */
      public static final int INT64_VALUE = 4;
      /**
       * <code>UINT32 = 5;</code>
       */
      public static final int UINT32_VALUE = 5;
      /**
       * <code>UINT64 = 6;</code>
       */
      public static final int UINT64_VALUE = 6;
      /**
       * <code>SINT32 = 7;</code>
       */
      public static final int SINT32_VALUE = 7;
      /**
       * <code>SINT64 = 8;</code>
       */
      public static final int SINT64_VALUE = 8;
      /**
       * <code>FIXED32 = 9;</code>
       */
      public static final int FIXED32_VALUE = 9;
      /**
       * <code>FIXED64 = 10;</code>
       */
      public static final int FIXED64_VALUE = 10;
      /**
       * <code>SFIXED32 = 11;</code>
       */
      public static final int SFIXED32_VALUE = 11;
      /**
       * <code>SFIXED64 = 12;</code>
       */
      public static final int SFIXED64_VALUE = 12;
      /**
       * <code>BOOL = 13;</code>
       */
      public static final int BOOL_VALUE = 13;
      /**
       * <code>DOUBLE = 14;</code>
       */
      public static final int DOUBLE_VALUE = 14;
      /**
       * <code>FLOAT = 15;</code>
       */
      public static final int FLOAT_VALUE = 15;
      /**
       * <code>LIST_TYPE = 16;</code>
       */
      public static final int LIST_TYPE_VALUE = 16;
      /**
       * <code>UNKNOWN = 17;</code>
       */
      public static final int UNKNOWN_VALUE = 17;
      /**
       * <code>MESSAGE = 18;</code>
       */
      public static final int MESSAGE_VALUE = 18;
      /**
       * <code>COMPONENT_BASE_TYPE = 19;</code>
       */
      public static final int COMPONENT_BASE_TYPE_VALUE = 19;
      /**
       * <code>NONE = 20;</code>
       */
      public static final int NONE_VALUE = 20;


      public final int getNumber() { return value; }

      public static ENCODED_TYPE valueOf(int value) {
        switch (value) {
          case 1: return BYTES;
          case 2: return STRING;
          case 3: return INT32;
          case 4: return INT64;
          case 5: return UINT32;
          case 6: return UINT64;
          case 7: return SINT32;
          case 8: return SINT64;
          case 9: return FIXED32;
          case 10: return FIXED64;
          case 11: return SFIXED32;
          case 12: return SFIXED64;
          case 13: return BOOL;
          case 14: return DOUBLE;
          case 15: return FLOAT;
          case 16: return LIST_TYPE;
          case 17: return UNKNOWN;
          case 18: return MESSAGE;
          case 19: return COMPONENT_BASE_TYPE;
          case 20: return NONE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ENCODED_TYPE>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ENCODED_TYPE>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ENCODED_TYPE>() {
              public ENCODED_TYPE findValueByNumber(int number) {
                return ENCODED_TYPE.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.BaseType.getDescriptor().getEnumTypes().get(0);
      }

      private static final ENCODED_TYPE[] VALUES = values();

      public static ENCODED_TYPE valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ENCODED_TYPE(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:net.maivic.comm.BaseType.ENCODED_TYPE)
    }

    private int bitField0_;
    // repeated bytes bytes = 1;
    public static final int BYTES_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> bytes_;
    /**
     * <code>repeated bytes bytes = 1;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getBytesList() {
      return bytes_;
    }
    /**
     * <code>repeated bytes bytes = 1;</code>
     */
    public int getBytesCount() {
      return bytes_.size();
    }
    /**
     * <code>repeated bytes bytes = 1;</code>
     */
    public com.google.protobuf.ByteString getBytes(int index) {
      return bytes_.get(index);
    }

    // repeated string string = 2;
    public static final int STRING_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList string_;
    /**
     * <code>repeated string string = 2;</code>
     */
    public java.util.List<java.lang.String>
        getStringList() {
      return string_;
    }
    /**
     * <code>repeated string string = 2;</code>
     */
    public int getStringCount() {
      return string_.size();
    }
    /**
     * <code>repeated string string = 2;</code>
     */
    public java.lang.String getString(int index) {
      return string_.get(index);
    }
    /**
     * <code>repeated string string = 2;</code>
     */
    public com.google.protobuf.ByteString
        getStringBytes(int index) {
      return string_.getByteString(index);
    }

    // repeated int32 i32 = 3 [packed = true];
    public static final int I32_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> i32_;
    /**
     * <code>repeated int32 i32 = 3 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getI32List() {
      return i32_;
    }
    /**
     * <code>repeated int32 i32 = 3 [packed = true];</code>
     */
    public int getI32Count() {
      return i32_.size();
    }
    /**
     * <code>repeated int32 i32 = 3 [packed = true];</code>
     */
    public int getI32(int index) {
      return i32_.get(index);
    }
    private int i32MemoizedSerializedSize = -1;

    // repeated int64 i64 = 4 [packed = true];
    public static final int I64_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> i64_;
    /**
     * <code>repeated int64 i64 = 4 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getI64List() {
      return i64_;
    }
    /**
     * <code>repeated int64 i64 = 4 [packed = true];</code>
     */
    public int getI64Count() {
      return i64_.size();
    }
    /**
     * <code>repeated int64 i64 = 4 [packed = true];</code>
     */
    public long getI64(int index) {
      return i64_.get(index);
    }
    private int i64MemoizedSerializedSize = -1;

    // repeated uint32 uint32 = 5 [packed = true];
    public static final int UINT32_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> uint32_;
    /**
     * <code>repeated uint32 uint32 = 5 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getUint32List() {
      return uint32_;
    }
    /**
     * <code>repeated uint32 uint32 = 5 [packed = true];</code>
     */
    public int getUint32Count() {
      return uint32_.size();
    }
    /**
     * <code>repeated uint32 uint32 = 5 [packed = true];</code>
     */
    public int getUint32(int index) {
      return uint32_.get(index);
    }
    private int uint32MemoizedSerializedSize = -1;

    // repeated uint64 uint64 = 6 [packed = true];
    public static final int UINT64_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Long> uint64_;
    /**
     * <code>repeated uint64 uint64 = 6 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getUint64List() {
      return uint64_;
    }
    /**
     * <code>repeated uint64 uint64 = 6 [packed = true];</code>
     */
    public int getUint64Count() {
      return uint64_.size();
    }
    /**
     * <code>repeated uint64 uint64 = 6 [packed = true];</code>
     */
    public long getUint64(int index) {
      return uint64_.get(index);
    }
    private int uint64MemoizedSerializedSize = -1;

    // repeated sint32 sint32 = 7 [packed = true];
    public static final int SINT32_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> sint32_;
    /**
     * <code>repeated sint32 sint32 = 7 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getSint32List() {
      return sint32_;
    }
    /**
     * <code>repeated sint32 sint32 = 7 [packed = true];</code>
     */
    public int getSint32Count() {
      return sint32_.size();
    }
    /**
     * <code>repeated sint32 sint32 = 7 [packed = true];</code>
     */
    public int getSint32(int index) {
      return sint32_.get(index);
    }
    private int sint32MemoizedSerializedSize = -1;

    // repeated sint64 sint64 = 8 [packed = true];
    public static final int SINT64_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Long> sint64_;
    /**
     * <code>repeated sint64 sint64 = 8 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getSint64List() {
      return sint64_;
    }
    /**
     * <code>repeated sint64 sint64 = 8 [packed = true];</code>
     */
    public int getSint64Count() {
      return sint64_.size();
    }
    /**
     * <code>repeated sint64 sint64 = 8 [packed = true];</code>
     */
    public long getSint64(int index) {
      return sint64_.get(index);
    }
    private int sint64MemoizedSerializedSize = -1;

    // repeated fixed32 fixed32 = 9 [packed = true];
    public static final int FIXED32_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> fixed32_;
    /**
     * <code>repeated fixed32 fixed32 = 9 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getFixed32List() {
      return fixed32_;
    }
    /**
     * <code>repeated fixed32 fixed32 = 9 [packed = true];</code>
     */
    public int getFixed32Count() {
      return fixed32_.size();
    }
    /**
     * <code>repeated fixed32 fixed32 = 9 [packed = true];</code>
     */
    public int getFixed32(int index) {
      return fixed32_.get(index);
    }
    private int fixed32MemoizedSerializedSize = -1;

    // repeated fixed64 fixed64 = 10 [packed = true];
    public static final int FIXED64_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Long> fixed64_;
    /**
     * <code>repeated fixed64 fixed64 = 10 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getFixed64List() {
      return fixed64_;
    }
    /**
     * <code>repeated fixed64 fixed64 = 10 [packed = true];</code>
     */
    public int getFixed64Count() {
      return fixed64_.size();
    }
    /**
     * <code>repeated fixed64 fixed64 = 10 [packed = true];</code>
     */
    public long getFixed64(int index) {
      return fixed64_.get(index);
    }
    private int fixed64MemoizedSerializedSize = -1;

    // repeated sfixed32 sfixed32 = 11 [packed = true];
    public static final int SFIXED32_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> sfixed32_;
    /**
     * <code>repeated sfixed32 sfixed32 = 11 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getSfixed32List() {
      return sfixed32_;
    }
    /**
     * <code>repeated sfixed32 sfixed32 = 11 [packed = true];</code>
     */
    public int getSfixed32Count() {
      return sfixed32_.size();
    }
    /**
     * <code>repeated sfixed32 sfixed32 = 11 [packed = true];</code>
     */
    public int getSfixed32(int index) {
      return sfixed32_.get(index);
    }
    private int sfixed32MemoizedSerializedSize = -1;

    // repeated sfixed64 sfixed64 = 12 [packed = true];
    public static final int SFIXED64_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Long> sfixed64_;
    /**
     * <code>repeated sfixed64 sfixed64 = 12 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getSfixed64List() {
      return sfixed64_;
    }
    /**
     * <code>repeated sfixed64 sfixed64 = 12 [packed = true];</code>
     */
    public int getSfixed64Count() {
      return sfixed64_.size();
    }
    /**
     * <code>repeated sfixed64 sfixed64 = 12 [packed = true];</code>
     */
    public long getSfixed64(int index) {
      return sfixed64_.get(index);
    }
    private int sfixed64MemoizedSerializedSize = -1;

    // repeated bool bool = 13 [packed = true];
    public static final int BOOL_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Boolean> bool_;
    /**
     * <code>repeated bool bool = 13 [packed = true];</code>
     */
    public java.util.List<java.lang.Boolean>
        getBoolList() {
      return bool_;
    }
    /**
     * <code>repeated bool bool = 13 [packed = true];</code>
     */
    public int getBoolCount() {
      return bool_.size();
    }
    /**
     * <code>repeated bool bool = 13 [packed = true];</code>
     */
    public boolean getBool(int index) {
      return bool_.get(index);
    }
    private int boolMemoizedSerializedSize = -1;

    // repeated double double = 14 [packed = true];
    public static final int DOUBLE_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Double> double_;
    /**
     * <code>repeated double double = 14 [packed = true];</code>
     */
    public java.util.List<java.lang.Double>
        getDoubleList() {
      return double_;
    }
    /**
     * <code>repeated double double = 14 [packed = true];</code>
     */
    public int getDoubleCount() {
      return double_.size();
    }
    /**
     * <code>repeated double double = 14 [packed = true];</code>
     */
    public double getDouble(int index) {
      return double_.get(index);
    }
    private int doubleMemoizedSerializedSize = -1;

    // repeated float float = 15 [packed = true];
    public static final int FLOAT_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Float> float_;
    /**
     * <code>repeated float float = 15 [packed = true];</code>
     */
    public java.util.List<java.lang.Float>
        getFloatList() {
      return float_;
    }
    /**
     * <code>repeated float float = 15 [packed = true];</code>
     */
    public int getFloatCount() {
      return float_.size();
    }
    /**
     * <code>repeated float float = 15 [packed = true];</code>
     */
    public float getFloat(int index) {
      return float_.get(index);
    }
    private int floatMemoizedSerializedSize = -1;

    // optional bool list_type = 16 [default = false];
    public static final int LIST_TYPE_FIELD_NUMBER = 16;
    private boolean listType_;
    /**
     * <code>optional bool list_type = 16 [default = false];</code>
     */
    public boolean hasListType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool list_type = 16 [default = false];</code>
     */
    public boolean getListType() {
      return listType_;
    }

    // repeated .net.maivic.comm.SelfDescribingMessage message = 17;
    public static final int MESSAGE_FIELD_NUMBER = 17;
    private java.util.List<net.maivic.comm.Maivic.SelfDescribingMessage> message_;
    /**
     * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
     */
    public java.util.List<net.maivic.comm.Maivic.SelfDescribingMessage> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
     */
    public java.util.List<? extends net.maivic.comm.Maivic.SelfDescribingMessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
     */
    public net.maivic.comm.Maivic.SelfDescribingMessage getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
     */
    public net.maivic.comm.Maivic.SelfDescribingMessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    // repeated .net.maivic.comm.BaseType base_type = 18;
    public static final int BASE_TYPE_FIELD_NUMBER = 18;
    private java.util.List<net.maivic.comm.Maivic.BaseType> baseType_;
    /**
     * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
     */
    public java.util.List<net.maivic.comm.Maivic.BaseType> getBaseTypeList() {
      return baseType_;
    }
    /**
     * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
     */
    public java.util.List<? extends net.maivic.comm.Maivic.BaseTypeOrBuilder> 
        getBaseTypeOrBuilderList() {
      return baseType_;
    }
    /**
     * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
     */
    public int getBaseTypeCount() {
      return baseType_.size();
    }
    /**
     * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
     */
    public net.maivic.comm.Maivic.BaseType getBaseType(int index) {
      return baseType_.get(index);
    }
    /**
     * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
     */
    public net.maivic.comm.Maivic.BaseTypeOrBuilder getBaseTypeOrBuilder(
        int index) {
      return baseType_.get(index);
    }

    // optional .net.maivic.comm.BaseType.ENCODED_TYPE encoded_type = 19;
    public static final int ENCODED_TYPE_FIELD_NUMBER = 19;
    private net.maivic.comm.Maivic.BaseType.ENCODED_TYPE encodedType_;
    /**
     * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE encoded_type = 19;</code>
     */
    public boolean hasEncodedType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE encoded_type = 19;</code>
     */
    public net.maivic.comm.Maivic.BaseType.ENCODED_TYPE getEncodedType() {
      return encodedType_;
    }

    // optional .net.maivic.comm.BaseType.ENCODED_TYPE component_type = 20;
    public static final int COMPONENT_TYPE_FIELD_NUMBER = 20;
    private net.maivic.comm.Maivic.BaseType.ENCODED_TYPE componentType_;
    /**
     * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE component_type = 20;</code>
     */
    public boolean hasComponentType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE component_type = 20;</code>
     */
    public net.maivic.comm.Maivic.BaseType.ENCODED_TYPE getComponentType() {
      return componentType_;
    }

    private void initFields() {
      bytes_ = java.util.Collections.emptyList();
      string_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      i32_ = java.util.Collections.emptyList();
      i64_ = java.util.Collections.emptyList();
      uint32_ = java.util.Collections.emptyList();
      uint64_ = java.util.Collections.emptyList();
      sint32_ = java.util.Collections.emptyList();
      sint64_ = java.util.Collections.emptyList();
      fixed32_ = java.util.Collections.emptyList();
      fixed64_ = java.util.Collections.emptyList();
      sfixed32_ = java.util.Collections.emptyList();
      sfixed64_ = java.util.Collections.emptyList();
      bool_ = java.util.Collections.emptyList();
      double_ = java.util.Collections.emptyList();
      float_ = java.util.Collections.emptyList();
      listType_ = false;
      message_ = java.util.Collections.emptyList();
      baseType_ = java.util.Collections.emptyList();
      encodedType_ = net.maivic.comm.Maivic.BaseType.ENCODED_TYPE.BYTES;
      componentType_ = net.maivic.comm.Maivic.BaseType.ENCODED_TYPE.BYTES;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getMessageCount(); i++) {
        if (!getMessage(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getBaseTypeCount(); i++) {
        if (!getBaseType(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < bytes_.size(); i++) {
        output.writeBytes(1, bytes_.get(i));
      }
      for (int i = 0; i < string_.size(); i++) {
        output.writeBytes(2, string_.getByteString(i));
      }
      if (getI32List().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(i32MemoizedSerializedSize);
      }
      for (int i = 0; i < i32_.size(); i++) {
        output.writeInt32NoTag(i32_.get(i));
      }
      if (getI64List().size() > 0) {
        output.writeRawVarint32(34);
        output.writeRawVarint32(i64MemoizedSerializedSize);
      }
      for (int i = 0; i < i64_.size(); i++) {
        output.writeInt64NoTag(i64_.get(i));
      }
      if (getUint32List().size() > 0) {
        output.writeRawVarint32(42);
        output.writeRawVarint32(uint32MemoizedSerializedSize);
      }
      for (int i = 0; i < uint32_.size(); i++) {
        output.writeUInt32NoTag(uint32_.get(i));
      }
      if (getUint64List().size() > 0) {
        output.writeRawVarint32(50);
        output.writeRawVarint32(uint64MemoizedSerializedSize);
      }
      for (int i = 0; i < uint64_.size(); i++) {
        output.writeUInt64NoTag(uint64_.get(i));
      }
      if (getSint32List().size() > 0) {
        output.writeRawVarint32(58);
        output.writeRawVarint32(sint32MemoizedSerializedSize);
      }
      for (int i = 0; i < sint32_.size(); i++) {
        output.writeSInt32NoTag(sint32_.get(i));
      }
      if (getSint64List().size() > 0) {
        output.writeRawVarint32(66);
        output.writeRawVarint32(sint64MemoizedSerializedSize);
      }
      for (int i = 0; i < sint64_.size(); i++) {
        output.writeSInt64NoTag(sint64_.get(i));
      }
      if (getFixed32List().size() > 0) {
        output.writeRawVarint32(74);
        output.writeRawVarint32(fixed32MemoizedSerializedSize);
      }
      for (int i = 0; i < fixed32_.size(); i++) {
        output.writeFixed32NoTag(fixed32_.get(i));
      }
      if (getFixed64List().size() > 0) {
        output.writeRawVarint32(82);
        output.writeRawVarint32(fixed64MemoizedSerializedSize);
      }
      for (int i = 0; i < fixed64_.size(); i++) {
        output.writeFixed64NoTag(fixed64_.get(i));
      }
      if (getSfixed32List().size() > 0) {
        output.writeRawVarint32(90);
        output.writeRawVarint32(sfixed32MemoizedSerializedSize);
      }
      for (int i = 0; i < sfixed32_.size(); i++) {
        output.writeSFixed32NoTag(sfixed32_.get(i));
      }
      if (getSfixed64List().size() > 0) {
        output.writeRawVarint32(98);
        output.writeRawVarint32(sfixed64MemoizedSerializedSize);
      }
      for (int i = 0; i < sfixed64_.size(); i++) {
        output.writeSFixed64NoTag(sfixed64_.get(i));
      }
      if (getBoolList().size() > 0) {
        output.writeRawVarint32(106);
        output.writeRawVarint32(boolMemoizedSerializedSize);
      }
      for (int i = 0; i < bool_.size(); i++) {
        output.writeBoolNoTag(bool_.get(i));
      }
      if (getDoubleList().size() > 0) {
        output.writeRawVarint32(114);
        output.writeRawVarint32(doubleMemoizedSerializedSize);
      }
      for (int i = 0; i < double_.size(); i++) {
        output.writeDoubleNoTag(double_.get(i));
      }
      if (getFloatList().size() > 0) {
        output.writeRawVarint32(122);
        output.writeRawVarint32(floatMemoizedSerializedSize);
      }
      for (int i = 0; i < float_.size(); i++) {
        output.writeFloatNoTag(float_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(16, listType_);
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(17, message_.get(i));
      }
      for (int i = 0; i < baseType_.size(); i++) {
        output.writeMessage(18, baseType_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(19, encodedType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(20, componentType_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < bytes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(bytes_.get(i));
        }
        size += dataSize;
        size += 1 * getBytesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < string_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(string_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getStringList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < i32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(i32_.get(i));
        }
        size += dataSize;
        if (!getI32List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        i32MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < i64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(i64_.get(i));
        }
        size += dataSize;
        if (!getI64List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        i64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(uint32_.get(i));
        }
        size += dataSize;
        if (!getUint32List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        uint32MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(uint64_.get(i));
        }
        size += dataSize;
        if (!getUint64List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        uint64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(sint32_.get(i));
        }
        size += dataSize;
        if (!getSint32List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        sint32MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(sint64_.get(i));
        }
        size += dataSize;
        if (!getSint64List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        sint64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFixed32List().size();
        size += dataSize;
        if (!getFixed32List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        fixed32MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getFixed64List().size();
        size += dataSize;
        if (!getFixed64List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        fixed64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getSfixed32List().size();
        size += dataSize;
        if (!getSfixed32List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        sfixed32MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getSfixed64List().size();
        size += dataSize;
        if (!getSfixed64List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        sfixed64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 1 * getBoolList().size();
        size += dataSize;
        if (!getBoolList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        boolMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleList().size();
        size += dataSize;
        if (!getDoubleList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        doubleMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatList().size();
        size += dataSize;
        if (!getFloatList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        floatMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, listType_);
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, message_.get(i));
      }
      for (int i = 0; i < baseType_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, baseType_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(19, encodedType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(20, componentType_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.BaseType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.BaseType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.BaseType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.BaseType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.BaseType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.BaseType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.BaseType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.BaseType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.BaseType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.BaseType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.BaseType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.BaseType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.maivic.comm.Maivic.BaseTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_BaseType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_BaseType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.BaseType.class, net.maivic.comm.Maivic.BaseType.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.BaseType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getBaseTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bytes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        string_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        i32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        i64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        uint32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        uint64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        sint32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        sint64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        fixed32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        sfixed32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        bool_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        double_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        float_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        listType_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
        } else {
          messageBuilder_.clear();
        }
        if (baseTypeBuilder_ == null) {
          baseType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          baseTypeBuilder_.clear();
        }
        encodedType_ = net.maivic.comm.Maivic.BaseType.ENCODED_TYPE.BYTES;
        bitField0_ = (bitField0_ & ~0x00040000);
        componentType_ = net.maivic.comm.Maivic.BaseType.ENCODED_TYPE.BYTES;
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_BaseType_descriptor;
      }

      public net.maivic.comm.Maivic.BaseType getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.BaseType.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.BaseType build() {
        net.maivic.comm.Maivic.BaseType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.BaseType buildPartial() {
        net.maivic.comm.Maivic.BaseType result = new net.maivic.comm.Maivic.BaseType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          bytes_ = java.util.Collections.unmodifiableList(bytes_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.bytes_ = bytes_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          string_ = new com.google.protobuf.UnmodifiableLazyStringList(
              string_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.string_ = string_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          i32_ = java.util.Collections.unmodifiableList(i32_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.i32_ = i32_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          i64_ = java.util.Collections.unmodifiableList(i64_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.i64_ = i64_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          uint32_ = java.util.Collections.unmodifiableList(uint32_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.uint32_ = uint32_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          uint64_ = java.util.Collections.unmodifiableList(uint64_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.uint64_ = uint64_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          sint32_ = java.util.Collections.unmodifiableList(sint32_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.sint32_ = sint32_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          sint64_ = java.util.Collections.unmodifiableList(sint64_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.sint64_ = sint64_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32_ = java.util.Collections.unmodifiableList(fixed32_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.fixed32_ = fixed32_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64_ = java.util.Collections.unmodifiableList(fixed64_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.fixed64_ = fixed64_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32_ = java.util.Collections.unmodifiableList(sfixed32_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.sfixed32_ = sfixed32_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64_ = java.util.Collections.unmodifiableList(sfixed64_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.sfixed64_ = sfixed64_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          bool_ = java.util.Collections.unmodifiableList(bool_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.bool_ = bool_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          double_ = java.util.Collections.unmodifiableList(double_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.double_ = double_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          float_ = java.util.Collections.unmodifiableList(float_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.float_ = float_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000001;
        }
        result.listType_ = listType_;
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (baseTypeBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            baseType_ = java.util.Collections.unmodifiableList(baseType_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.baseType_ = baseType_;
        } else {
          result.baseType_ = baseTypeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00000002;
        }
        result.encodedType_ = encodedType_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00000004;
        }
        result.componentType_ = componentType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.BaseType) {
          return mergeFrom((net.maivic.comm.Maivic.BaseType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.BaseType other) {
        if (other == net.maivic.comm.Maivic.BaseType.getDefaultInstance()) return this;
        if (!other.bytes_.isEmpty()) {
          if (bytes_.isEmpty()) {
            bytes_ = other.bytes_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureBytesIsMutable();
            bytes_.addAll(other.bytes_);
          }
          onChanged();
        }
        if (!other.string_.isEmpty()) {
          if (string_.isEmpty()) {
            string_ = other.string_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureStringIsMutable();
            string_.addAll(other.string_);
          }
          onChanged();
        }
        if (!other.i32_.isEmpty()) {
          if (i32_.isEmpty()) {
            i32_ = other.i32_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureI32IsMutable();
            i32_.addAll(other.i32_);
          }
          onChanged();
        }
        if (!other.i64_.isEmpty()) {
          if (i64_.isEmpty()) {
            i64_ = other.i64_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureI64IsMutable();
            i64_.addAll(other.i64_);
          }
          onChanged();
        }
        if (!other.uint32_.isEmpty()) {
          if (uint32_.isEmpty()) {
            uint32_ = other.uint32_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureUint32IsMutable();
            uint32_.addAll(other.uint32_);
          }
          onChanged();
        }
        if (!other.uint64_.isEmpty()) {
          if (uint64_.isEmpty()) {
            uint64_ = other.uint64_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureUint64IsMutable();
            uint64_.addAll(other.uint64_);
          }
          onChanged();
        }
        if (!other.sint32_.isEmpty()) {
          if (sint32_.isEmpty()) {
            sint32_ = other.sint32_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureSint32IsMutable();
            sint32_.addAll(other.sint32_);
          }
          onChanged();
        }
        if (!other.sint64_.isEmpty()) {
          if (sint64_.isEmpty()) {
            sint64_ = other.sint64_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureSint64IsMutable();
            sint64_.addAll(other.sint64_);
          }
          onChanged();
        }
        if (!other.fixed32_.isEmpty()) {
          if (fixed32_.isEmpty()) {
            fixed32_ = other.fixed32_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureFixed32IsMutable();
            fixed32_.addAll(other.fixed32_);
          }
          onChanged();
        }
        if (!other.fixed64_.isEmpty()) {
          if (fixed64_.isEmpty()) {
            fixed64_ = other.fixed64_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureFixed64IsMutable();
            fixed64_.addAll(other.fixed64_);
          }
          onChanged();
        }
        if (!other.sfixed32_.isEmpty()) {
          if (sfixed32_.isEmpty()) {
            sfixed32_ = other.sfixed32_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureSfixed32IsMutable();
            sfixed32_.addAll(other.sfixed32_);
          }
          onChanged();
        }
        if (!other.sfixed64_.isEmpty()) {
          if (sfixed64_.isEmpty()) {
            sfixed64_ = other.sfixed64_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureSfixed64IsMutable();
            sfixed64_.addAll(other.sfixed64_);
          }
          onChanged();
        }
        if (!other.bool_.isEmpty()) {
          if (bool_.isEmpty()) {
            bool_ = other.bool_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureBoolIsMutable();
            bool_.addAll(other.bool_);
          }
          onChanged();
        }
        if (!other.double_.isEmpty()) {
          if (double_.isEmpty()) {
            double_ = other.double_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureDoubleIsMutable();
            double_.addAll(other.double_);
          }
          onChanged();
        }
        if (!other.float_.isEmpty()) {
          if (float_.isEmpty()) {
            float_ = other.float_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureFloatIsMutable();
            float_.addAll(other.float_);
          }
          onChanged();
        }
        if (other.hasListType()) {
          setListType(other.getListType());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00010000);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (baseTypeBuilder_ == null) {
          if (!other.baseType_.isEmpty()) {
            if (baseType_.isEmpty()) {
              baseType_ = other.baseType_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensureBaseTypeIsMutable();
              baseType_.addAll(other.baseType_);
            }
            onChanged();
          }
        } else {
          if (!other.baseType_.isEmpty()) {
            if (baseTypeBuilder_.isEmpty()) {
              baseTypeBuilder_.dispose();
              baseTypeBuilder_ = null;
              baseType_ = other.baseType_;
              bitField0_ = (bitField0_ & ~0x00020000);
              baseTypeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBaseTypeFieldBuilder() : null;
            } else {
              baseTypeBuilder_.addAllMessages(other.baseType_);
            }
          }
        }
        if (other.hasEncodedType()) {
          setEncodedType(other.getEncodedType());
        }
        if (other.hasComponentType()) {
          setComponentType(other.getComponentType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getMessageCount(); i++) {
          if (!getMessage(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getBaseTypeCount(); i++) {
          if (!getBaseType(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.BaseType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.BaseType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated bytes bytes = 1;
      private java.util.List<com.google.protobuf.ByteString> bytes_ = java.util.Collections.emptyList();
      private void ensureBytesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          bytes_ = new java.util.ArrayList<com.google.protobuf.ByteString>(bytes_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated bytes bytes = 1;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getBytesList() {
        return java.util.Collections.unmodifiableList(bytes_);
      }
      /**
       * <code>repeated bytes bytes = 1;</code>
       */
      public int getBytesCount() {
        return bytes_.size();
      }
      /**
       * <code>repeated bytes bytes = 1;</code>
       */
      public com.google.protobuf.ByteString getBytes(int index) {
        return bytes_.get(index);
      }
      /**
       * <code>repeated bytes bytes = 1;</code>
       */
      public Builder setBytes(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesIsMutable();
        bytes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes bytes = 1;</code>
       */
      public Builder addBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesIsMutable();
        bytes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes bytes = 1;</code>
       */
      public Builder addAllBytes(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureBytesIsMutable();
        super.addAll(values, bytes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes bytes = 1;</code>
       */
      public Builder clearBytes() {
        bytes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated string string = 2;
      private com.google.protobuf.LazyStringList string_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStringIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          string_ = new com.google.protobuf.LazyStringArrayList(string_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string string = 2;</code>
       */
      public java.util.List<java.lang.String>
          getStringList() {
        return java.util.Collections.unmodifiableList(string_);
      }
      /**
       * <code>repeated string string = 2;</code>
       */
      public int getStringCount() {
        return string_.size();
      }
      /**
       * <code>repeated string string = 2;</code>
       */
      public java.lang.String getString(int index) {
        return string_.get(index);
      }
      /**
       * <code>repeated string string = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStringBytes(int index) {
        return string_.getByteString(index);
      }
      /**
       * <code>repeated string string = 2;</code>
       */
      public Builder setString(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringIsMutable();
        string_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string = 2;</code>
       */
      public Builder addString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringIsMutable();
        string_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string = 2;</code>
       */
      public Builder addAllString(
          java.lang.Iterable<java.lang.String> values) {
        ensureStringIsMutable();
        super.addAll(values, string_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string = 2;</code>
       */
      public Builder clearString() {
        string_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string = 2;</code>
       */
      public Builder addStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringIsMutable();
        string_.add(value);
        onChanged();
        return this;
      }

      // repeated int32 i32 = 3 [packed = true];
      private java.util.List<java.lang.Integer> i32_ = java.util.Collections.emptyList();
      private void ensureI32IsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          i32_ = new java.util.ArrayList<java.lang.Integer>(i32_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 i32 = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getI32List() {
        return java.util.Collections.unmodifiableList(i32_);
      }
      /**
       * <code>repeated int32 i32 = 3 [packed = true];</code>
       */
      public int getI32Count() {
        return i32_.size();
      }
      /**
       * <code>repeated int32 i32 = 3 [packed = true];</code>
       */
      public int getI32(int index) {
        return i32_.get(index);
      }
      /**
       * <code>repeated int32 i32 = 3 [packed = true];</code>
       */
      public Builder setI32(
          int index, int value) {
        ensureI32IsMutable();
        i32_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 i32 = 3 [packed = true];</code>
       */
      public Builder addI32(int value) {
        ensureI32IsMutable();
        i32_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 i32 = 3 [packed = true];</code>
       */
      public Builder addAllI32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureI32IsMutable();
        super.addAll(values, i32_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 i32 = 3 [packed = true];</code>
       */
      public Builder clearI32() {
        i32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int64 i64 = 4 [packed = true];
      private java.util.List<java.lang.Long> i64_ = java.util.Collections.emptyList();
      private void ensureI64IsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          i64_ = new java.util.ArrayList<java.lang.Long>(i64_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int64 i64 = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getI64List() {
        return java.util.Collections.unmodifiableList(i64_);
      }
      /**
       * <code>repeated int64 i64 = 4 [packed = true];</code>
       */
      public int getI64Count() {
        return i64_.size();
      }
      /**
       * <code>repeated int64 i64 = 4 [packed = true];</code>
       */
      public long getI64(int index) {
        return i64_.get(index);
      }
      /**
       * <code>repeated int64 i64 = 4 [packed = true];</code>
       */
      public Builder setI64(
          int index, long value) {
        ensureI64IsMutable();
        i64_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 i64 = 4 [packed = true];</code>
       */
      public Builder addI64(long value) {
        ensureI64IsMutable();
        i64_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 i64 = 4 [packed = true];</code>
       */
      public Builder addAllI64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureI64IsMutable();
        super.addAll(values, i64_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 i64 = 4 [packed = true];</code>
       */
      public Builder clearI64() {
        i64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated uint32 uint32 = 5 [packed = true];
      private java.util.List<java.lang.Integer> uint32_ = java.util.Collections.emptyList();
      private void ensureUint32IsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          uint32_ = new java.util.ArrayList<java.lang.Integer>(uint32_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint32 uint32 = 5 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getUint32List() {
        return java.util.Collections.unmodifiableList(uint32_);
      }
      /**
       * <code>repeated uint32 uint32 = 5 [packed = true];</code>
       */
      public int getUint32Count() {
        return uint32_.size();
      }
      /**
       * <code>repeated uint32 uint32 = 5 [packed = true];</code>
       */
      public int getUint32(int index) {
        return uint32_.get(index);
      }
      /**
       * <code>repeated uint32 uint32 = 5 [packed = true];</code>
       */
      public Builder setUint32(
          int index, int value) {
        ensureUint32IsMutable();
        uint32_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 uint32 = 5 [packed = true];</code>
       */
      public Builder addUint32(int value) {
        ensureUint32IsMutable();
        uint32_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 uint32 = 5 [packed = true];</code>
       */
      public Builder addAllUint32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUint32IsMutable();
        super.addAll(values, uint32_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 uint32 = 5 [packed = true];</code>
       */
      public Builder clearUint32() {
        uint32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated uint64 uint64 = 6 [packed = true];
      private java.util.List<java.lang.Long> uint64_ = java.util.Collections.emptyList();
      private void ensureUint64IsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          uint64_ = new java.util.ArrayList<java.lang.Long>(uint64_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated uint64 uint64 = 6 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getUint64List() {
        return java.util.Collections.unmodifiableList(uint64_);
      }
      /**
       * <code>repeated uint64 uint64 = 6 [packed = true];</code>
       */
      public int getUint64Count() {
        return uint64_.size();
      }
      /**
       * <code>repeated uint64 uint64 = 6 [packed = true];</code>
       */
      public long getUint64(int index) {
        return uint64_.get(index);
      }
      /**
       * <code>repeated uint64 uint64 = 6 [packed = true];</code>
       */
      public Builder setUint64(
          int index, long value) {
        ensureUint64IsMutable();
        uint64_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 uint64 = 6 [packed = true];</code>
       */
      public Builder addUint64(long value) {
        ensureUint64IsMutable();
        uint64_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 uint64 = 6 [packed = true];</code>
       */
      public Builder addAllUint64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUint64IsMutable();
        super.addAll(values, uint64_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 uint64 = 6 [packed = true];</code>
       */
      public Builder clearUint64() {
        uint64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated sint32 sint32 = 7 [packed = true];
      private java.util.List<java.lang.Integer> sint32_ = java.util.Collections.emptyList();
      private void ensureSint32IsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          sint32_ = new java.util.ArrayList<java.lang.Integer>(sint32_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated sint32 sint32 = 7 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getSint32List() {
        return java.util.Collections.unmodifiableList(sint32_);
      }
      /**
       * <code>repeated sint32 sint32 = 7 [packed = true];</code>
       */
      public int getSint32Count() {
        return sint32_.size();
      }
      /**
       * <code>repeated sint32 sint32 = 7 [packed = true];</code>
       */
      public int getSint32(int index) {
        return sint32_.get(index);
      }
      /**
       * <code>repeated sint32 sint32 = 7 [packed = true];</code>
       */
      public Builder setSint32(
          int index, int value) {
        ensureSint32IsMutable();
        sint32_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 sint32 = 7 [packed = true];</code>
       */
      public Builder addSint32(int value) {
        ensureSint32IsMutable();
        sint32_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 sint32 = 7 [packed = true];</code>
       */
      public Builder addAllSint32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSint32IsMutable();
        super.addAll(values, sint32_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 sint32 = 7 [packed = true];</code>
       */
      public Builder clearSint32() {
        sint32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated sint64 sint64 = 8 [packed = true];
      private java.util.List<java.lang.Long> sint64_ = java.util.Collections.emptyList();
      private void ensureSint64IsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          sint64_ = new java.util.ArrayList<java.lang.Long>(sint64_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated sint64 sint64 = 8 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getSint64List() {
        return java.util.Collections.unmodifiableList(sint64_);
      }
      /**
       * <code>repeated sint64 sint64 = 8 [packed = true];</code>
       */
      public int getSint64Count() {
        return sint64_.size();
      }
      /**
       * <code>repeated sint64 sint64 = 8 [packed = true];</code>
       */
      public long getSint64(int index) {
        return sint64_.get(index);
      }
      /**
       * <code>repeated sint64 sint64 = 8 [packed = true];</code>
       */
      public Builder setSint64(
          int index, long value) {
        ensureSint64IsMutable();
        sint64_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 sint64 = 8 [packed = true];</code>
       */
      public Builder addSint64(long value) {
        ensureSint64IsMutable();
        sint64_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 sint64 = 8 [packed = true];</code>
       */
      public Builder addAllSint64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSint64IsMutable();
        super.addAll(values, sint64_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 sint64 = 8 [packed = true];</code>
       */
      public Builder clearSint64() {
        sint64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated fixed32 fixed32 = 9 [packed = true];
      private java.util.List<java.lang.Integer> fixed32_ = java.util.Collections.emptyList();
      private void ensureFixed32IsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32_ = new java.util.ArrayList<java.lang.Integer>(fixed32_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated fixed32 fixed32 = 9 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getFixed32List() {
        return java.util.Collections.unmodifiableList(fixed32_);
      }
      /**
       * <code>repeated fixed32 fixed32 = 9 [packed = true];</code>
       */
      public int getFixed32Count() {
        return fixed32_.size();
      }
      /**
       * <code>repeated fixed32 fixed32 = 9 [packed = true];</code>
       */
      public int getFixed32(int index) {
        return fixed32_.get(index);
      }
      /**
       * <code>repeated fixed32 fixed32 = 9 [packed = true];</code>
       */
      public Builder setFixed32(
          int index, int value) {
        ensureFixed32IsMutable();
        fixed32_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 fixed32 = 9 [packed = true];</code>
       */
      public Builder addFixed32(int value) {
        ensureFixed32IsMutable();
        fixed32_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 fixed32 = 9 [packed = true];</code>
       */
      public Builder addAllFixed32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFixed32IsMutable();
        super.addAll(values, fixed32_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 fixed32 = 9 [packed = true];</code>
       */
      public Builder clearFixed32() {
        fixed32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // repeated fixed64 fixed64 = 10 [packed = true];
      private java.util.List<java.lang.Long> fixed64_ = java.util.Collections.emptyList();
      private void ensureFixed64IsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64_ = new java.util.ArrayList<java.lang.Long>(fixed64_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated fixed64 fixed64 = 10 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getFixed64List() {
        return java.util.Collections.unmodifiableList(fixed64_);
      }
      /**
       * <code>repeated fixed64 fixed64 = 10 [packed = true];</code>
       */
      public int getFixed64Count() {
        return fixed64_.size();
      }
      /**
       * <code>repeated fixed64 fixed64 = 10 [packed = true];</code>
       */
      public long getFixed64(int index) {
        return fixed64_.get(index);
      }
      /**
       * <code>repeated fixed64 fixed64 = 10 [packed = true];</code>
       */
      public Builder setFixed64(
          int index, long value) {
        ensureFixed64IsMutable();
        fixed64_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 fixed64 = 10 [packed = true];</code>
       */
      public Builder addFixed64(long value) {
        ensureFixed64IsMutable();
        fixed64_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 fixed64 = 10 [packed = true];</code>
       */
      public Builder addAllFixed64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFixed64IsMutable();
        super.addAll(values, fixed64_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 fixed64 = 10 [packed = true];</code>
       */
      public Builder clearFixed64() {
        fixed64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated sfixed32 sfixed32 = 11 [packed = true];
      private java.util.List<java.lang.Integer> sfixed32_ = java.util.Collections.emptyList();
      private void ensureSfixed32IsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32_ = new java.util.ArrayList<java.lang.Integer>(sfixed32_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated sfixed32 sfixed32 = 11 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getSfixed32List() {
        return java.util.Collections.unmodifiableList(sfixed32_);
      }
      /**
       * <code>repeated sfixed32 sfixed32 = 11 [packed = true];</code>
       */
      public int getSfixed32Count() {
        return sfixed32_.size();
      }
      /**
       * <code>repeated sfixed32 sfixed32 = 11 [packed = true];</code>
       */
      public int getSfixed32(int index) {
        return sfixed32_.get(index);
      }
      /**
       * <code>repeated sfixed32 sfixed32 = 11 [packed = true];</code>
       */
      public Builder setSfixed32(
          int index, int value) {
        ensureSfixed32IsMutable();
        sfixed32_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 sfixed32 = 11 [packed = true];</code>
       */
      public Builder addSfixed32(int value) {
        ensureSfixed32IsMutable();
        sfixed32_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 sfixed32 = 11 [packed = true];</code>
       */
      public Builder addAllSfixed32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSfixed32IsMutable();
        super.addAll(values, sfixed32_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 sfixed32 = 11 [packed = true];</code>
       */
      public Builder clearSfixed32() {
        sfixed32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated sfixed64 sfixed64 = 12 [packed = true];
      private java.util.List<java.lang.Long> sfixed64_ = java.util.Collections.emptyList();
      private void ensureSfixed64IsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64_ = new java.util.ArrayList<java.lang.Long>(sfixed64_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated sfixed64 sfixed64 = 12 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getSfixed64List() {
        return java.util.Collections.unmodifiableList(sfixed64_);
      }
      /**
       * <code>repeated sfixed64 sfixed64 = 12 [packed = true];</code>
       */
      public int getSfixed64Count() {
        return sfixed64_.size();
      }
      /**
       * <code>repeated sfixed64 sfixed64 = 12 [packed = true];</code>
       */
      public long getSfixed64(int index) {
        return sfixed64_.get(index);
      }
      /**
       * <code>repeated sfixed64 sfixed64 = 12 [packed = true];</code>
       */
      public Builder setSfixed64(
          int index, long value) {
        ensureSfixed64IsMutable();
        sfixed64_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 sfixed64 = 12 [packed = true];</code>
       */
      public Builder addSfixed64(long value) {
        ensureSfixed64IsMutable();
        sfixed64_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 sfixed64 = 12 [packed = true];</code>
       */
      public Builder addAllSfixed64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSfixed64IsMutable();
        super.addAll(values, sfixed64_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 sfixed64 = 12 [packed = true];</code>
       */
      public Builder clearSfixed64() {
        sfixed64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated bool bool = 13 [packed = true];
      private java.util.List<java.lang.Boolean> bool_ = java.util.Collections.emptyList();
      private void ensureBoolIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          bool_ = new java.util.ArrayList<java.lang.Boolean>(bool_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated bool bool = 13 [packed = true];</code>
       */
      public java.util.List<java.lang.Boolean>
          getBoolList() {
        return java.util.Collections.unmodifiableList(bool_);
      }
      /**
       * <code>repeated bool bool = 13 [packed = true];</code>
       */
      public int getBoolCount() {
        return bool_.size();
      }
      /**
       * <code>repeated bool bool = 13 [packed = true];</code>
       */
      public boolean getBool(int index) {
        return bool_.get(index);
      }
      /**
       * <code>repeated bool bool = 13 [packed = true];</code>
       */
      public Builder setBool(
          int index, boolean value) {
        ensureBoolIsMutable();
        bool_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool = 13 [packed = true];</code>
       */
      public Builder addBool(boolean value) {
        ensureBoolIsMutable();
        bool_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool = 13 [packed = true];</code>
       */
      public Builder addAllBool(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureBoolIsMutable();
        super.addAll(values, bool_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool = 13 [packed = true];</code>
       */
      public Builder clearBool() {
        bool_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated double double = 14 [packed = true];
      private java.util.List<java.lang.Double> double_ = java.util.Collections.emptyList();
      private void ensureDoubleIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          double_ = new java.util.ArrayList<java.lang.Double>(double_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated double double = 14 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getDoubleList() {
        return java.util.Collections.unmodifiableList(double_);
      }
      /**
       * <code>repeated double double = 14 [packed = true];</code>
       */
      public int getDoubleCount() {
        return double_.size();
      }
      /**
       * <code>repeated double double = 14 [packed = true];</code>
       */
      public double getDouble(int index) {
        return double_.get(index);
      }
      /**
       * <code>repeated double double = 14 [packed = true];</code>
       */
      public Builder setDouble(
          int index, double value) {
        ensureDoubleIsMutable();
        double_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double = 14 [packed = true];</code>
       */
      public Builder addDouble(double value) {
        ensureDoubleIsMutable();
        double_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double = 14 [packed = true];</code>
       */
      public Builder addAllDouble(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDoubleIsMutable();
        super.addAll(values, double_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double = 14 [packed = true];</code>
       */
      public Builder clearDouble() {
        double_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated float float = 15 [packed = true];
      private java.util.List<java.lang.Float> float_ = java.util.Collections.emptyList();
      private void ensureFloatIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          float_ = new java.util.ArrayList<java.lang.Float>(float_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated float float = 15 [packed = true];</code>
       */
      public java.util.List<java.lang.Float>
          getFloatList() {
        return java.util.Collections.unmodifiableList(float_);
      }
      /**
       * <code>repeated float float = 15 [packed = true];</code>
       */
      public int getFloatCount() {
        return float_.size();
      }
      /**
       * <code>repeated float float = 15 [packed = true];</code>
       */
      public float getFloat(int index) {
        return float_.get(index);
      }
      /**
       * <code>repeated float float = 15 [packed = true];</code>
       */
      public Builder setFloat(
          int index, float value) {
        ensureFloatIsMutable();
        float_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float = 15 [packed = true];</code>
       */
      public Builder addFloat(float value) {
        ensureFloatIsMutable();
        float_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float = 15 [packed = true];</code>
       */
      public Builder addAllFloat(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatIsMutable();
        super.addAll(values, float_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float = 15 [packed = true];</code>
       */
      public Builder clearFloat() {
        float_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // optional bool list_type = 16 [default = false];
      private boolean listType_ ;
      /**
       * <code>optional bool list_type = 16 [default = false];</code>
       */
      public boolean hasListType() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional bool list_type = 16 [default = false];</code>
       */
      public boolean getListType() {
        return listType_;
      }
      /**
       * <code>optional bool list_type = 16 [default = false];</code>
       */
      public Builder setListType(boolean value) {
        bitField0_ |= 0x00008000;
        listType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool list_type = 16 [default = false];</code>
       */
      public Builder clearListType() {
        bitField0_ = (bitField0_ & ~0x00008000);
        listType_ = false;
        onChanged();
        return this;
      }

      // repeated .net.maivic.comm.SelfDescribingMessage message = 17;
      private java.util.List<net.maivic.comm.Maivic.SelfDescribingMessage> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          message_ = new java.util.ArrayList<net.maivic.comm.Maivic.SelfDescribingMessage>(message_);
          bitField0_ |= 0x00010000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          net.maivic.comm.Maivic.SelfDescribingMessage, net.maivic.comm.Maivic.SelfDescribingMessage.Builder, net.maivic.comm.Maivic.SelfDescribingMessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public java.util.List<net.maivic.comm.Maivic.SelfDescribingMessage> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public net.maivic.comm.Maivic.SelfDescribingMessage getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public Builder setMessage(
          int index, net.maivic.comm.Maivic.SelfDescribingMessage value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public Builder setMessage(
          int index, net.maivic.comm.Maivic.SelfDescribingMessage.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public Builder addMessage(net.maivic.comm.Maivic.SelfDescribingMessage value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public Builder addMessage(
          int index, net.maivic.comm.Maivic.SelfDescribingMessage value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public Builder addMessage(
          net.maivic.comm.Maivic.SelfDescribingMessage.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public Builder addMessage(
          int index, net.maivic.comm.Maivic.SelfDescribingMessage.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends net.maivic.comm.Maivic.SelfDescribingMessage> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          super.addAll(values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public net.maivic.comm.Maivic.SelfDescribingMessage.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public net.maivic.comm.Maivic.SelfDescribingMessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public java.util.List<? extends net.maivic.comm.Maivic.SelfDescribingMessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public net.maivic.comm.Maivic.SelfDescribingMessage.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            net.maivic.comm.Maivic.SelfDescribingMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public net.maivic.comm.Maivic.SelfDescribingMessage.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, net.maivic.comm.Maivic.SelfDescribingMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .net.maivic.comm.SelfDescribingMessage message = 17;</code>
       */
      public java.util.List<net.maivic.comm.Maivic.SelfDescribingMessage.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.maivic.comm.Maivic.SelfDescribingMessage, net.maivic.comm.Maivic.SelfDescribingMessage.Builder, net.maivic.comm.Maivic.SelfDescribingMessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.maivic.comm.Maivic.SelfDescribingMessage, net.maivic.comm.Maivic.SelfDescribingMessage.Builder, net.maivic.comm.Maivic.SelfDescribingMessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00010000) == 0x00010000),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      // repeated .net.maivic.comm.BaseType base_type = 18;
      private java.util.List<net.maivic.comm.Maivic.BaseType> baseType_ =
        java.util.Collections.emptyList();
      private void ensureBaseTypeIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          baseType_ = new java.util.ArrayList<net.maivic.comm.Maivic.BaseType>(baseType_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          net.maivic.comm.Maivic.BaseType, net.maivic.comm.Maivic.BaseType.Builder, net.maivic.comm.Maivic.BaseTypeOrBuilder> baseTypeBuilder_;

      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public java.util.List<net.maivic.comm.Maivic.BaseType> getBaseTypeList() {
        if (baseTypeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(baseType_);
        } else {
          return baseTypeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public int getBaseTypeCount() {
        if (baseTypeBuilder_ == null) {
          return baseType_.size();
        } else {
          return baseTypeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public net.maivic.comm.Maivic.BaseType getBaseType(int index) {
        if (baseTypeBuilder_ == null) {
          return baseType_.get(index);
        } else {
          return baseTypeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public Builder setBaseType(
          int index, net.maivic.comm.Maivic.BaseType value) {
        if (baseTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBaseTypeIsMutable();
          baseType_.set(index, value);
          onChanged();
        } else {
          baseTypeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public Builder setBaseType(
          int index, net.maivic.comm.Maivic.BaseType.Builder builderForValue) {
        if (baseTypeBuilder_ == null) {
          ensureBaseTypeIsMutable();
          baseType_.set(index, builderForValue.build());
          onChanged();
        } else {
          baseTypeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public Builder addBaseType(net.maivic.comm.Maivic.BaseType value) {
        if (baseTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBaseTypeIsMutable();
          baseType_.add(value);
          onChanged();
        } else {
          baseTypeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public Builder addBaseType(
          int index, net.maivic.comm.Maivic.BaseType value) {
        if (baseTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBaseTypeIsMutable();
          baseType_.add(index, value);
          onChanged();
        } else {
          baseTypeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public Builder addBaseType(
          net.maivic.comm.Maivic.BaseType.Builder builderForValue) {
        if (baseTypeBuilder_ == null) {
          ensureBaseTypeIsMutable();
          baseType_.add(builderForValue.build());
          onChanged();
        } else {
          baseTypeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public Builder addBaseType(
          int index, net.maivic.comm.Maivic.BaseType.Builder builderForValue) {
        if (baseTypeBuilder_ == null) {
          ensureBaseTypeIsMutable();
          baseType_.add(index, builderForValue.build());
          onChanged();
        } else {
          baseTypeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public Builder addAllBaseType(
          java.lang.Iterable<? extends net.maivic.comm.Maivic.BaseType> values) {
        if (baseTypeBuilder_ == null) {
          ensureBaseTypeIsMutable();
          super.addAll(values, baseType_);
          onChanged();
        } else {
          baseTypeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public Builder clearBaseType() {
        if (baseTypeBuilder_ == null) {
          baseType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          baseTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public Builder removeBaseType(int index) {
        if (baseTypeBuilder_ == null) {
          ensureBaseTypeIsMutable();
          baseType_.remove(index);
          onChanged();
        } else {
          baseTypeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public net.maivic.comm.Maivic.BaseType.Builder getBaseTypeBuilder(
          int index) {
        return getBaseTypeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public net.maivic.comm.Maivic.BaseTypeOrBuilder getBaseTypeOrBuilder(
          int index) {
        if (baseTypeBuilder_ == null) {
          return baseType_.get(index);  } else {
          return baseTypeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public java.util.List<? extends net.maivic.comm.Maivic.BaseTypeOrBuilder> 
           getBaseTypeOrBuilderList() {
        if (baseTypeBuilder_ != null) {
          return baseTypeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(baseType_);
        }
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public net.maivic.comm.Maivic.BaseType.Builder addBaseTypeBuilder() {
        return getBaseTypeFieldBuilder().addBuilder(
            net.maivic.comm.Maivic.BaseType.getDefaultInstance());
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public net.maivic.comm.Maivic.BaseType.Builder addBaseTypeBuilder(
          int index) {
        return getBaseTypeFieldBuilder().addBuilder(
            index, net.maivic.comm.Maivic.BaseType.getDefaultInstance());
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType base_type = 18;</code>
       */
      public java.util.List<net.maivic.comm.Maivic.BaseType.Builder> 
           getBaseTypeBuilderList() {
        return getBaseTypeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.maivic.comm.Maivic.BaseType, net.maivic.comm.Maivic.BaseType.Builder, net.maivic.comm.Maivic.BaseTypeOrBuilder> 
          getBaseTypeFieldBuilder() {
        if (baseTypeBuilder_ == null) {
          baseTypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.maivic.comm.Maivic.BaseType, net.maivic.comm.Maivic.BaseType.Builder, net.maivic.comm.Maivic.BaseTypeOrBuilder>(
                  baseType_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          baseType_ = null;
        }
        return baseTypeBuilder_;
      }

      // optional .net.maivic.comm.BaseType.ENCODED_TYPE encoded_type = 19;
      private net.maivic.comm.Maivic.BaseType.ENCODED_TYPE encodedType_ = net.maivic.comm.Maivic.BaseType.ENCODED_TYPE.BYTES;
      /**
       * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE encoded_type = 19;</code>
       */
      public boolean hasEncodedType() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE encoded_type = 19;</code>
       */
      public net.maivic.comm.Maivic.BaseType.ENCODED_TYPE getEncodedType() {
        return encodedType_;
      }
      /**
       * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE encoded_type = 19;</code>
       */
      public Builder setEncodedType(net.maivic.comm.Maivic.BaseType.ENCODED_TYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00040000;
        encodedType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE encoded_type = 19;</code>
       */
      public Builder clearEncodedType() {
        bitField0_ = (bitField0_ & ~0x00040000);
        encodedType_ = net.maivic.comm.Maivic.BaseType.ENCODED_TYPE.BYTES;
        onChanged();
        return this;
      }

      // optional .net.maivic.comm.BaseType.ENCODED_TYPE component_type = 20;
      private net.maivic.comm.Maivic.BaseType.ENCODED_TYPE componentType_ = net.maivic.comm.Maivic.BaseType.ENCODED_TYPE.BYTES;
      /**
       * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE component_type = 20;</code>
       */
      public boolean hasComponentType() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE component_type = 20;</code>
       */
      public net.maivic.comm.Maivic.BaseType.ENCODED_TYPE getComponentType() {
        return componentType_;
      }
      /**
       * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE component_type = 20;</code>
       */
      public Builder setComponentType(net.maivic.comm.Maivic.BaseType.ENCODED_TYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00080000;
        componentType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.BaseType.ENCODED_TYPE component_type = 20;</code>
       */
      public Builder clearComponentType() {
        bitField0_ = (bitField0_ & ~0x00080000);
        componentType_ = net.maivic.comm.Maivic.BaseType.ENCODED_TYPE.BYTES;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.BaseType)
    }

    static {
      defaultInstance = new BaseType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.BaseType)
  }

  public interface FunctionCallOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string function = 1;
    /**
     * <code>required string function = 1;</code>
     */
    boolean hasFunction();
    /**
     * <code>required string function = 1;</code>
     */
    java.lang.String getFunction();
    /**
     * <code>required string function = 1;</code>
     */
    com.google.protobuf.ByteString
        getFunctionBytes();

    // repeated .net.maivic.comm.BaseType args = 2;
    /**
     * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
     */
    java.util.List<net.maivic.comm.Maivic.BaseType> 
        getArgsList();
    /**
     * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
     */
    net.maivic.comm.Maivic.BaseType getArgs(int index);
    /**
     * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
     */
    int getArgsCount();
    /**
     * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
     */
    java.util.List<? extends net.maivic.comm.Maivic.BaseTypeOrBuilder> 
        getArgsOrBuilderList();
    /**
     * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
     */
    net.maivic.comm.Maivic.BaseTypeOrBuilder getArgsOrBuilder(
        int index);

    // optional bool isMethod = 3;
    /**
     * <code>optional bool isMethod = 3;</code>
     */
    boolean hasIsMethod();
    /**
     * <code>optional bool isMethod = 3;</code>
     */
    boolean getIsMethod();

    // optional bool isSubscription = 4;
    /**
     * <code>optional bool isSubscription = 4;</code>
     */
    boolean hasIsSubscription();
    /**
     * <code>optional bool isSubscription = 4;</code>
     */
    boolean getIsSubscription();
  }
  /**
   * Protobuf type {@code net.maivic.comm.FunctionCall}
   */
  public static final class FunctionCall extends
      com.google.protobuf.GeneratedMessage
      implements FunctionCallOrBuilder {
    // Use FunctionCall.newBuilder() to construct.
    private FunctionCall(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FunctionCall(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FunctionCall defaultInstance;
    public static FunctionCall getDefaultInstance() {
      return defaultInstance;
    }

    public FunctionCall getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FunctionCall(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              function_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                args_ = new java.util.ArrayList<net.maivic.comm.Maivic.BaseType>();
                mutable_bitField0_ |= 0x00000002;
              }
              args_.add(input.readMessage(net.maivic.comm.Maivic.BaseType.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              isMethod_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              isSubscription_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          args_ = java.util.Collections.unmodifiableList(args_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_FunctionCall_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_FunctionCall_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.FunctionCall.class, net.maivic.comm.Maivic.FunctionCall.Builder.class);
    }

    public static com.google.protobuf.Parser<FunctionCall> PARSER =
        new com.google.protobuf.AbstractParser<FunctionCall>() {
      public FunctionCall parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FunctionCall(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FunctionCall> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string function = 1;
    public static final int FUNCTION_FIELD_NUMBER = 1;
    private java.lang.Object function_;
    /**
     * <code>required string function = 1;</code>
     */
    public boolean hasFunction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string function = 1;</code>
     */
    public java.lang.String getFunction() {
      java.lang.Object ref = function_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          function_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string function = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFunctionBytes() {
      java.lang.Object ref = function_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        function_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .net.maivic.comm.BaseType args = 2;
    public static final int ARGS_FIELD_NUMBER = 2;
    private java.util.List<net.maivic.comm.Maivic.BaseType> args_;
    /**
     * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
     */
    public java.util.List<net.maivic.comm.Maivic.BaseType> getArgsList() {
      return args_;
    }
    /**
     * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
     */
    public java.util.List<? extends net.maivic.comm.Maivic.BaseTypeOrBuilder> 
        getArgsOrBuilderList() {
      return args_;
    }
    /**
     * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
     */
    public int getArgsCount() {
      return args_.size();
    }
    /**
     * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
     */
    public net.maivic.comm.Maivic.BaseType getArgs(int index) {
      return args_.get(index);
    }
    /**
     * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
     */
    public net.maivic.comm.Maivic.BaseTypeOrBuilder getArgsOrBuilder(
        int index) {
      return args_.get(index);
    }

    // optional bool isMethod = 3;
    public static final int ISMETHOD_FIELD_NUMBER = 3;
    private boolean isMethod_;
    /**
     * <code>optional bool isMethod = 3;</code>
     */
    public boolean hasIsMethod() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool isMethod = 3;</code>
     */
    public boolean getIsMethod() {
      return isMethod_;
    }

    // optional bool isSubscription = 4;
    public static final int ISSUBSCRIPTION_FIELD_NUMBER = 4;
    private boolean isSubscription_;
    /**
     * <code>optional bool isSubscription = 4;</code>
     */
    public boolean hasIsSubscription() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool isSubscription = 4;</code>
     */
    public boolean getIsSubscription() {
      return isSubscription_;
    }

    private void initFields() {
      function_ = "";
      args_ = java.util.Collections.emptyList();
      isMethod_ = false;
      isSubscription_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasFunction()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getArgsCount(); i++) {
        if (!getArgs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getFunctionBytes());
      }
      for (int i = 0; i < args_.size(); i++) {
        output.writeMessage(2, args_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(3, isMethod_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(4, isSubscription_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getFunctionBytes());
      }
      for (int i = 0; i < args_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, args_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isMethod_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isSubscription_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.FunctionCall parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.FunctionCall parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.FunctionCall parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.FunctionCall parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.FunctionCall parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.FunctionCall parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.FunctionCall parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.FunctionCall parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.FunctionCall parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.FunctionCall parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.FunctionCall prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.FunctionCall}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.maivic.comm.Maivic.FunctionCallOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_FunctionCall_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_FunctionCall_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.FunctionCall.class, net.maivic.comm.Maivic.FunctionCall.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.FunctionCall.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getArgsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        function_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (argsBuilder_ == null) {
          args_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          argsBuilder_.clear();
        }
        isMethod_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        isSubscription_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_FunctionCall_descriptor;
      }

      public net.maivic.comm.Maivic.FunctionCall getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.FunctionCall.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.FunctionCall build() {
        net.maivic.comm.Maivic.FunctionCall result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.FunctionCall buildPartial() {
        net.maivic.comm.Maivic.FunctionCall result = new net.maivic.comm.Maivic.FunctionCall(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.function_ = function_;
        if (argsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            args_ = java.util.Collections.unmodifiableList(args_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.args_ = args_;
        } else {
          result.args_ = argsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isMethod_ = isMethod_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isSubscription_ = isSubscription_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.FunctionCall) {
          return mergeFrom((net.maivic.comm.Maivic.FunctionCall)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.FunctionCall other) {
        if (other == net.maivic.comm.Maivic.FunctionCall.getDefaultInstance()) return this;
        if (other.hasFunction()) {
          bitField0_ |= 0x00000001;
          function_ = other.function_;
          onChanged();
        }
        if (argsBuilder_ == null) {
          if (!other.args_.isEmpty()) {
            if (args_.isEmpty()) {
              args_ = other.args_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureArgsIsMutable();
              args_.addAll(other.args_);
            }
            onChanged();
          }
        } else {
          if (!other.args_.isEmpty()) {
            if (argsBuilder_.isEmpty()) {
              argsBuilder_.dispose();
              argsBuilder_ = null;
              args_ = other.args_;
              bitField0_ = (bitField0_ & ~0x00000002);
              argsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getArgsFieldBuilder() : null;
            } else {
              argsBuilder_.addAllMessages(other.args_);
            }
          }
        }
        if (other.hasIsMethod()) {
          setIsMethod(other.getIsMethod());
        }
        if (other.hasIsSubscription()) {
          setIsSubscription(other.getIsSubscription());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFunction()) {
          
          return false;
        }
        for (int i = 0; i < getArgsCount(); i++) {
          if (!getArgs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.FunctionCall parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.FunctionCall) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string function = 1;
      private java.lang.Object function_ = "";
      /**
       * <code>required string function = 1;</code>
       */
      public boolean hasFunction() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string function = 1;</code>
       */
      public java.lang.String getFunction() {
        java.lang.Object ref = function_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          function_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string function = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFunctionBytes() {
        java.lang.Object ref = function_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          function_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string function = 1;</code>
       */
      public Builder setFunction(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        function_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string function = 1;</code>
       */
      public Builder clearFunction() {
        bitField0_ = (bitField0_ & ~0x00000001);
        function_ = getDefaultInstance().getFunction();
        onChanged();
        return this;
      }
      /**
       * <code>required string function = 1;</code>
       */
      public Builder setFunctionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        function_ = value;
        onChanged();
        return this;
      }

      // repeated .net.maivic.comm.BaseType args = 2;
      private java.util.List<net.maivic.comm.Maivic.BaseType> args_ =
        java.util.Collections.emptyList();
      private void ensureArgsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          args_ = new java.util.ArrayList<net.maivic.comm.Maivic.BaseType>(args_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          net.maivic.comm.Maivic.BaseType, net.maivic.comm.Maivic.BaseType.Builder, net.maivic.comm.Maivic.BaseTypeOrBuilder> argsBuilder_;

      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public java.util.List<net.maivic.comm.Maivic.BaseType> getArgsList() {
        if (argsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(args_);
        } else {
          return argsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public int getArgsCount() {
        if (argsBuilder_ == null) {
          return args_.size();
        } else {
          return argsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public net.maivic.comm.Maivic.BaseType getArgs(int index) {
        if (argsBuilder_ == null) {
          return args_.get(index);
        } else {
          return argsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public Builder setArgs(
          int index, net.maivic.comm.Maivic.BaseType value) {
        if (argsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgsIsMutable();
          args_.set(index, value);
          onChanged();
        } else {
          argsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public Builder setArgs(
          int index, net.maivic.comm.Maivic.BaseType.Builder builderForValue) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.set(index, builderForValue.build());
          onChanged();
        } else {
          argsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public Builder addArgs(net.maivic.comm.Maivic.BaseType value) {
        if (argsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgsIsMutable();
          args_.add(value);
          onChanged();
        } else {
          argsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public Builder addArgs(
          int index, net.maivic.comm.Maivic.BaseType value) {
        if (argsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgsIsMutable();
          args_.add(index, value);
          onChanged();
        } else {
          argsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public Builder addArgs(
          net.maivic.comm.Maivic.BaseType.Builder builderForValue) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.add(builderForValue.build());
          onChanged();
        } else {
          argsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public Builder addArgs(
          int index, net.maivic.comm.Maivic.BaseType.Builder builderForValue) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.add(index, builderForValue.build());
          onChanged();
        } else {
          argsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public Builder addAllArgs(
          java.lang.Iterable<? extends net.maivic.comm.Maivic.BaseType> values) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          super.addAll(values, args_);
          onChanged();
        } else {
          argsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public Builder clearArgs() {
        if (argsBuilder_ == null) {
          args_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          argsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public Builder removeArgs(int index) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.remove(index);
          onChanged();
        } else {
          argsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public net.maivic.comm.Maivic.BaseType.Builder getArgsBuilder(
          int index) {
        return getArgsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public net.maivic.comm.Maivic.BaseTypeOrBuilder getArgsOrBuilder(
          int index) {
        if (argsBuilder_ == null) {
          return args_.get(index);  } else {
          return argsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public java.util.List<? extends net.maivic.comm.Maivic.BaseTypeOrBuilder> 
           getArgsOrBuilderList() {
        if (argsBuilder_ != null) {
          return argsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(args_);
        }
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public net.maivic.comm.Maivic.BaseType.Builder addArgsBuilder() {
        return getArgsFieldBuilder().addBuilder(
            net.maivic.comm.Maivic.BaseType.getDefaultInstance());
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public net.maivic.comm.Maivic.BaseType.Builder addArgsBuilder(
          int index) {
        return getArgsFieldBuilder().addBuilder(
            index, net.maivic.comm.Maivic.BaseType.getDefaultInstance());
      }
      /**
       * <code>repeated .net.maivic.comm.BaseType args = 2;</code>
       */
      public java.util.List<net.maivic.comm.Maivic.BaseType.Builder> 
           getArgsBuilderList() {
        return getArgsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.maivic.comm.Maivic.BaseType, net.maivic.comm.Maivic.BaseType.Builder, net.maivic.comm.Maivic.BaseTypeOrBuilder> 
          getArgsFieldBuilder() {
        if (argsBuilder_ == null) {
          argsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.maivic.comm.Maivic.BaseType, net.maivic.comm.Maivic.BaseType.Builder, net.maivic.comm.Maivic.BaseTypeOrBuilder>(
                  args_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          args_ = null;
        }
        return argsBuilder_;
      }

      // optional bool isMethod = 3;
      private boolean isMethod_ ;
      /**
       * <code>optional bool isMethod = 3;</code>
       */
      public boolean hasIsMethod() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool isMethod = 3;</code>
       */
      public boolean getIsMethod() {
        return isMethod_;
      }
      /**
       * <code>optional bool isMethod = 3;</code>
       */
      public Builder setIsMethod(boolean value) {
        bitField0_ |= 0x00000004;
        isMethod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isMethod = 3;</code>
       */
      public Builder clearIsMethod() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isMethod_ = false;
        onChanged();
        return this;
      }

      // optional bool isSubscription = 4;
      private boolean isSubscription_ ;
      /**
       * <code>optional bool isSubscription = 4;</code>
       */
      public boolean hasIsSubscription() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool isSubscription = 4;</code>
       */
      public boolean getIsSubscription() {
        return isSubscription_;
      }
      /**
       * <code>optional bool isSubscription = 4;</code>
       */
      public Builder setIsSubscription(boolean value) {
        bitField0_ |= 0x00000008;
        isSubscription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isSubscription = 4;</code>
       */
      public Builder clearIsSubscription() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isSubscription_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.FunctionCall)
    }

    static {
      defaultInstance = new FunctionCall(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.FunctionCall)
  }

  public interface FunctionReturnOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .net.maivic.comm.BaseType value = 1;
    /**
     * <code>optional .net.maivic.comm.BaseType value = 1;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .net.maivic.comm.BaseType value = 1;</code>
     */
    net.maivic.comm.Maivic.BaseType getValue();
    /**
     * <code>optional .net.maivic.comm.BaseType value = 1;</code>
     */
    net.maivic.comm.Maivic.BaseTypeOrBuilder getValueOrBuilder();

    // optional .net.maivic.comm.ExceptionType exception = 2;
    /**
     * <code>optional .net.maivic.comm.ExceptionType exception = 2;</code>
     */
    boolean hasException();
    /**
     * <code>optional .net.maivic.comm.ExceptionType exception = 2;</code>
     */
    net.maivic.comm.Maivic.ExceptionType getException();
    /**
     * <code>optional .net.maivic.comm.ExceptionType exception = 2;</code>
     */
    net.maivic.comm.Maivic.ExceptionTypeOrBuilder getExceptionOrBuilder();

    // optional .net.maivic.comm.FunctionProgress progress = 3;
    /**
     * <code>optional .net.maivic.comm.FunctionProgress progress = 3;</code>
     */
    boolean hasProgress();
    /**
     * <code>optional .net.maivic.comm.FunctionProgress progress = 3;</code>
     */
    net.maivic.comm.Maivic.FunctionProgress getProgress();
    /**
     * <code>optional .net.maivic.comm.FunctionProgress progress = 3;</code>
     */
    net.maivic.comm.Maivic.FunctionProgressOrBuilder getProgressOrBuilder();
  }
  /**
   * Protobuf type {@code net.maivic.comm.FunctionReturn}
   */
  public static final class FunctionReturn extends
      com.google.protobuf.GeneratedMessage
      implements FunctionReturnOrBuilder {
    // Use FunctionReturn.newBuilder() to construct.
    private FunctionReturn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FunctionReturn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FunctionReturn defaultInstance;
    public static FunctionReturn getDefaultInstance() {
      return defaultInstance;
    }

    public FunctionReturn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FunctionReturn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              net.maivic.comm.Maivic.BaseType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(net.maivic.comm.Maivic.BaseType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              net.maivic.comm.Maivic.ExceptionType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = exception_.toBuilder();
              }
              exception_ = input.readMessage(net.maivic.comm.Maivic.ExceptionType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(exception_);
                exception_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              net.maivic.comm.Maivic.FunctionProgress.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = progress_.toBuilder();
              }
              progress_ = input.readMessage(net.maivic.comm.Maivic.FunctionProgress.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(progress_);
                progress_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_FunctionReturn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_FunctionReturn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.FunctionReturn.class, net.maivic.comm.Maivic.FunctionReturn.Builder.class);
    }

    public static com.google.protobuf.Parser<FunctionReturn> PARSER =
        new com.google.protobuf.AbstractParser<FunctionReturn>() {
      public FunctionReturn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FunctionReturn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FunctionReturn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .net.maivic.comm.BaseType value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private net.maivic.comm.Maivic.BaseType value_;
    /**
     * <code>optional .net.maivic.comm.BaseType value = 1;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .net.maivic.comm.BaseType value = 1;</code>
     */
    public net.maivic.comm.Maivic.BaseType getValue() {
      return value_;
    }
    /**
     * <code>optional .net.maivic.comm.BaseType value = 1;</code>
     */
    public net.maivic.comm.Maivic.BaseTypeOrBuilder getValueOrBuilder() {
      return value_;
    }

    // optional .net.maivic.comm.ExceptionType exception = 2;
    public static final int EXCEPTION_FIELD_NUMBER = 2;
    private net.maivic.comm.Maivic.ExceptionType exception_;
    /**
     * <code>optional .net.maivic.comm.ExceptionType exception = 2;</code>
     */
    public boolean hasException() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .net.maivic.comm.ExceptionType exception = 2;</code>
     */
    public net.maivic.comm.Maivic.ExceptionType getException() {
      return exception_;
    }
    /**
     * <code>optional .net.maivic.comm.ExceptionType exception = 2;</code>
     */
    public net.maivic.comm.Maivic.ExceptionTypeOrBuilder getExceptionOrBuilder() {
      return exception_;
    }

    // optional .net.maivic.comm.FunctionProgress progress = 3;
    public static final int PROGRESS_FIELD_NUMBER = 3;
    private net.maivic.comm.Maivic.FunctionProgress progress_;
    /**
     * <code>optional .net.maivic.comm.FunctionProgress progress = 3;</code>
     */
    public boolean hasProgress() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .net.maivic.comm.FunctionProgress progress = 3;</code>
     */
    public net.maivic.comm.Maivic.FunctionProgress getProgress() {
      return progress_;
    }
    /**
     * <code>optional .net.maivic.comm.FunctionProgress progress = 3;</code>
     */
    public net.maivic.comm.Maivic.FunctionProgressOrBuilder getProgressOrBuilder() {
      return progress_;
    }

    private void initFields() {
      value_ = net.maivic.comm.Maivic.BaseType.getDefaultInstance();
      exception_ = net.maivic.comm.Maivic.ExceptionType.getDefaultInstance();
      progress_ = net.maivic.comm.Maivic.FunctionProgress.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasValue()) {
        if (!getValue().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasException()) {
        if (!getException().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasProgress()) {
        if (!getProgress().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, value_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, exception_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, progress_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, value_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, exception_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, progress_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.FunctionReturn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.FunctionReturn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.FunctionReturn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.FunctionReturn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.FunctionReturn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.FunctionReturn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.FunctionReturn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.FunctionReturn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.FunctionReturn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.FunctionReturn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.FunctionReturn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.FunctionReturn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.maivic.comm.Maivic.FunctionReturnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_FunctionReturn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_FunctionReturn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.FunctionReturn.class, net.maivic.comm.Maivic.FunctionReturn.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.FunctionReturn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
          getExceptionFieldBuilder();
          getProgressFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (valueBuilder_ == null) {
          value_ = net.maivic.comm.Maivic.BaseType.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (exceptionBuilder_ == null) {
          exception_ = net.maivic.comm.Maivic.ExceptionType.getDefaultInstance();
        } else {
          exceptionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (progressBuilder_ == null) {
          progress_ = net.maivic.comm.Maivic.FunctionProgress.getDefaultInstance();
        } else {
          progressBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_FunctionReturn_descriptor;
      }

      public net.maivic.comm.Maivic.FunctionReturn getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.FunctionReturn.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.FunctionReturn build() {
        net.maivic.comm.Maivic.FunctionReturn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.FunctionReturn buildPartial() {
        net.maivic.comm.Maivic.FunctionReturn result = new net.maivic.comm.Maivic.FunctionReturn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (exceptionBuilder_ == null) {
          result.exception_ = exception_;
        } else {
          result.exception_ = exceptionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (progressBuilder_ == null) {
          result.progress_ = progress_;
        } else {
          result.progress_ = progressBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.FunctionReturn) {
          return mergeFrom((net.maivic.comm.Maivic.FunctionReturn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.FunctionReturn other) {
        if (other == net.maivic.comm.Maivic.FunctionReturn.getDefaultInstance()) return this;
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        if (other.hasException()) {
          mergeException(other.getException());
        }
        if (other.hasProgress()) {
          mergeProgress(other.getProgress());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasValue()) {
          if (!getValue().isInitialized()) {
            
            return false;
          }
        }
        if (hasException()) {
          if (!getException().isInitialized()) {
            
            return false;
          }
        }
        if (hasProgress()) {
          if (!getProgress().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.FunctionReturn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.FunctionReturn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .net.maivic.comm.BaseType value = 1;
      private net.maivic.comm.Maivic.BaseType value_ = net.maivic.comm.Maivic.BaseType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.maivic.comm.Maivic.BaseType, net.maivic.comm.Maivic.BaseType.Builder, net.maivic.comm.Maivic.BaseTypeOrBuilder> valueBuilder_;
      /**
       * <code>optional .net.maivic.comm.BaseType value = 1;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .net.maivic.comm.BaseType value = 1;</code>
       */
      public net.maivic.comm.Maivic.BaseType getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .net.maivic.comm.BaseType value = 1;</code>
       */
      public Builder setValue(net.maivic.comm.Maivic.BaseType value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.BaseType value = 1;</code>
       */
      public Builder setValue(
          net.maivic.comm.Maivic.BaseType.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.BaseType value = 1;</code>
       */
      public Builder mergeValue(net.maivic.comm.Maivic.BaseType value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              value_ != net.maivic.comm.Maivic.BaseType.getDefaultInstance()) {
            value_ =
              net.maivic.comm.Maivic.BaseType.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.BaseType value = 1;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = net.maivic.comm.Maivic.BaseType.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.BaseType value = 1;</code>
       */
      public net.maivic.comm.Maivic.BaseType.Builder getValueBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .net.maivic.comm.BaseType value = 1;</code>
       */
      public net.maivic.comm.Maivic.BaseTypeOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .net.maivic.comm.BaseType value = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          net.maivic.comm.Maivic.BaseType, net.maivic.comm.Maivic.BaseType.Builder, net.maivic.comm.Maivic.BaseTypeOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.maivic.comm.Maivic.BaseType, net.maivic.comm.Maivic.BaseType.Builder, net.maivic.comm.Maivic.BaseTypeOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // optional .net.maivic.comm.ExceptionType exception = 2;
      private net.maivic.comm.Maivic.ExceptionType exception_ = net.maivic.comm.Maivic.ExceptionType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.maivic.comm.Maivic.ExceptionType, net.maivic.comm.Maivic.ExceptionType.Builder, net.maivic.comm.Maivic.ExceptionTypeOrBuilder> exceptionBuilder_;
      /**
       * <code>optional .net.maivic.comm.ExceptionType exception = 2;</code>
       */
      public boolean hasException() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType exception = 2;</code>
       */
      public net.maivic.comm.Maivic.ExceptionType getException() {
        if (exceptionBuilder_ == null) {
          return exception_;
        } else {
          return exceptionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType exception = 2;</code>
       */
      public Builder setException(net.maivic.comm.Maivic.ExceptionType value) {
        if (exceptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          exception_ = value;
          onChanged();
        } else {
          exceptionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType exception = 2;</code>
       */
      public Builder setException(
          net.maivic.comm.Maivic.ExceptionType.Builder builderForValue) {
        if (exceptionBuilder_ == null) {
          exception_ = builderForValue.build();
          onChanged();
        } else {
          exceptionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType exception = 2;</code>
       */
      public Builder mergeException(net.maivic.comm.Maivic.ExceptionType value) {
        if (exceptionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              exception_ != net.maivic.comm.Maivic.ExceptionType.getDefaultInstance()) {
            exception_ =
              net.maivic.comm.Maivic.ExceptionType.newBuilder(exception_).mergeFrom(value).buildPartial();
          } else {
            exception_ = value;
          }
          onChanged();
        } else {
          exceptionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType exception = 2;</code>
       */
      public Builder clearException() {
        if (exceptionBuilder_ == null) {
          exception_ = net.maivic.comm.Maivic.ExceptionType.getDefaultInstance();
          onChanged();
        } else {
          exceptionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType exception = 2;</code>
       */
      public net.maivic.comm.Maivic.ExceptionType.Builder getExceptionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getExceptionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType exception = 2;</code>
       */
      public net.maivic.comm.Maivic.ExceptionTypeOrBuilder getExceptionOrBuilder() {
        if (exceptionBuilder_ != null) {
          return exceptionBuilder_.getMessageOrBuilder();
        } else {
          return exception_;
        }
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType exception = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          net.maivic.comm.Maivic.ExceptionType, net.maivic.comm.Maivic.ExceptionType.Builder, net.maivic.comm.Maivic.ExceptionTypeOrBuilder> 
          getExceptionFieldBuilder() {
        if (exceptionBuilder_ == null) {
          exceptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.maivic.comm.Maivic.ExceptionType, net.maivic.comm.Maivic.ExceptionType.Builder, net.maivic.comm.Maivic.ExceptionTypeOrBuilder>(
                  exception_,
                  getParentForChildren(),
                  isClean());
          exception_ = null;
        }
        return exceptionBuilder_;
      }

      // optional .net.maivic.comm.FunctionProgress progress = 3;
      private net.maivic.comm.Maivic.FunctionProgress progress_ = net.maivic.comm.Maivic.FunctionProgress.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.maivic.comm.Maivic.FunctionProgress, net.maivic.comm.Maivic.FunctionProgress.Builder, net.maivic.comm.Maivic.FunctionProgressOrBuilder> progressBuilder_;
      /**
       * <code>optional .net.maivic.comm.FunctionProgress progress = 3;</code>
       */
      public boolean hasProgress() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .net.maivic.comm.FunctionProgress progress = 3;</code>
       */
      public net.maivic.comm.Maivic.FunctionProgress getProgress() {
        if (progressBuilder_ == null) {
          return progress_;
        } else {
          return progressBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .net.maivic.comm.FunctionProgress progress = 3;</code>
       */
      public Builder setProgress(net.maivic.comm.Maivic.FunctionProgress value) {
        if (progressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          progress_ = value;
          onChanged();
        } else {
          progressBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.FunctionProgress progress = 3;</code>
       */
      public Builder setProgress(
          net.maivic.comm.Maivic.FunctionProgress.Builder builderForValue) {
        if (progressBuilder_ == null) {
          progress_ = builderForValue.build();
          onChanged();
        } else {
          progressBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.FunctionProgress progress = 3;</code>
       */
      public Builder mergeProgress(net.maivic.comm.Maivic.FunctionProgress value) {
        if (progressBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              progress_ != net.maivic.comm.Maivic.FunctionProgress.getDefaultInstance()) {
            progress_ =
              net.maivic.comm.Maivic.FunctionProgress.newBuilder(progress_).mergeFrom(value).buildPartial();
          } else {
            progress_ = value;
          }
          onChanged();
        } else {
          progressBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.FunctionProgress progress = 3;</code>
       */
      public Builder clearProgress() {
        if (progressBuilder_ == null) {
          progress_ = net.maivic.comm.Maivic.FunctionProgress.getDefaultInstance();
          onChanged();
        } else {
          progressBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.FunctionProgress progress = 3;</code>
       */
      public net.maivic.comm.Maivic.FunctionProgress.Builder getProgressBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getProgressFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .net.maivic.comm.FunctionProgress progress = 3;</code>
       */
      public net.maivic.comm.Maivic.FunctionProgressOrBuilder getProgressOrBuilder() {
        if (progressBuilder_ != null) {
          return progressBuilder_.getMessageOrBuilder();
        } else {
          return progress_;
        }
      }
      /**
       * <code>optional .net.maivic.comm.FunctionProgress progress = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          net.maivic.comm.Maivic.FunctionProgress, net.maivic.comm.Maivic.FunctionProgress.Builder, net.maivic.comm.Maivic.FunctionProgressOrBuilder> 
          getProgressFieldBuilder() {
        if (progressBuilder_ == null) {
          progressBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.maivic.comm.Maivic.FunctionProgress, net.maivic.comm.Maivic.FunctionProgress.Builder, net.maivic.comm.Maivic.FunctionProgressOrBuilder>(
                  progress_,
                  getParentForChildren(),
                  isClean());
          progress_ = null;
        }
        return progressBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.FunctionReturn)
    }

    static {
      defaultInstance = new FunctionReturn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.FunctionReturn)
  }

  public interface FunctionProgressOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 progress = 1;
    /**
     * <code>required int32 progress = 1;</code>
     */
    boolean hasProgress();
    /**
     * <code>required int32 progress = 1;</code>
     */
    int getProgress();

    // optional int64 max_progress = 2;
    /**
     * <code>optional int64 max_progress = 2;</code>
     */
    boolean hasMaxProgress();
    /**
     * <code>optional int64 max_progress = 2;</code>
     */
    long getMaxProgress();
  }
  /**
   * Protobuf type {@code net.maivic.comm.FunctionProgress}
   */
  public static final class FunctionProgress extends
      com.google.protobuf.GeneratedMessage
      implements FunctionProgressOrBuilder {
    // Use FunctionProgress.newBuilder() to construct.
    private FunctionProgress(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FunctionProgress(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FunctionProgress defaultInstance;
    public static FunctionProgress getDefaultInstance() {
      return defaultInstance;
    }

    public FunctionProgress getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FunctionProgress(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              progress_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              maxProgress_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_FunctionProgress_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_FunctionProgress_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.FunctionProgress.class, net.maivic.comm.Maivic.FunctionProgress.Builder.class);
    }

    public static com.google.protobuf.Parser<FunctionProgress> PARSER =
        new com.google.protobuf.AbstractParser<FunctionProgress>() {
      public FunctionProgress parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FunctionProgress(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FunctionProgress> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 progress = 1;
    public static final int PROGRESS_FIELD_NUMBER = 1;
    private int progress_;
    /**
     * <code>required int32 progress = 1;</code>
     */
    public boolean hasProgress() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 progress = 1;</code>
     */
    public int getProgress() {
      return progress_;
    }

    // optional int64 max_progress = 2;
    public static final int MAX_PROGRESS_FIELD_NUMBER = 2;
    private long maxProgress_;
    /**
     * <code>optional int64 max_progress = 2;</code>
     */
    public boolean hasMaxProgress() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 max_progress = 2;</code>
     */
    public long getMaxProgress() {
      return maxProgress_;
    }

    private void initFields() {
      progress_ = 0;
      maxProgress_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasProgress()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, progress_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, maxProgress_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, progress_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, maxProgress_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.FunctionProgress parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.FunctionProgress parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.FunctionProgress parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.FunctionProgress parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.FunctionProgress parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.FunctionProgress parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.FunctionProgress parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.FunctionProgress parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.FunctionProgress parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.FunctionProgress parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.FunctionProgress prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.FunctionProgress}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.maivic.comm.Maivic.FunctionProgressOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_FunctionProgress_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_FunctionProgress_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.FunctionProgress.class, net.maivic.comm.Maivic.FunctionProgress.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.FunctionProgress.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        progress_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxProgress_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_FunctionProgress_descriptor;
      }

      public net.maivic.comm.Maivic.FunctionProgress getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.FunctionProgress.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.FunctionProgress build() {
        net.maivic.comm.Maivic.FunctionProgress result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.FunctionProgress buildPartial() {
        net.maivic.comm.Maivic.FunctionProgress result = new net.maivic.comm.Maivic.FunctionProgress(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.progress_ = progress_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxProgress_ = maxProgress_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.FunctionProgress) {
          return mergeFrom((net.maivic.comm.Maivic.FunctionProgress)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.FunctionProgress other) {
        if (other == net.maivic.comm.Maivic.FunctionProgress.getDefaultInstance()) return this;
        if (other.hasProgress()) {
          setProgress(other.getProgress());
        }
        if (other.hasMaxProgress()) {
          setMaxProgress(other.getMaxProgress());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasProgress()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.FunctionProgress parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.FunctionProgress) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 progress = 1;
      private int progress_ ;
      /**
       * <code>required int32 progress = 1;</code>
       */
      public boolean hasProgress() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 progress = 1;</code>
       */
      public int getProgress() {
        return progress_;
      }
      /**
       * <code>required int32 progress = 1;</code>
       */
      public Builder setProgress(int value) {
        bitField0_ |= 0x00000001;
        progress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 progress = 1;</code>
       */
      public Builder clearProgress() {
        bitField0_ = (bitField0_ & ~0x00000001);
        progress_ = 0;
        onChanged();
        return this;
      }

      // optional int64 max_progress = 2;
      private long maxProgress_ ;
      /**
       * <code>optional int64 max_progress = 2;</code>
       */
      public boolean hasMaxProgress() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 max_progress = 2;</code>
       */
      public long getMaxProgress() {
        return maxProgress_;
      }
      /**
       * <code>optional int64 max_progress = 2;</code>
       */
      public Builder setMaxProgress(long value) {
        bitField0_ |= 0x00000002;
        maxProgress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 max_progress = 2;</code>
       */
      public Builder clearMaxProgress() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxProgress_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.FunctionProgress)
    }

    static {
      defaultInstance = new FunctionProgress(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.FunctionProgress)
  }

  public interface ExceptionTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 type_id = 1;
    /**
     * <code>required int32 type_id = 1;</code>
     */
    boolean hasTypeId();
    /**
     * <code>required int32 type_id = 1;</code>
     */
    int getTypeId();

    // optional string message = 2;
    /**
     * <code>optional string message = 2;</code>
     */
    boolean hasMessage();
    /**
     * <code>optional string message = 2;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 2;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();

    // optional .net.maivic.comm.StackTrace strace = 3;
    /**
     * <code>optional .net.maivic.comm.StackTrace strace = 3;</code>
     */
    boolean hasStrace();
    /**
     * <code>optional .net.maivic.comm.StackTrace strace = 3;</code>
     */
    net.maivic.comm.Maivic.StackTrace getStrace();
    /**
     * <code>optional .net.maivic.comm.StackTrace strace = 3;</code>
     */
    net.maivic.comm.Maivic.StackTraceOrBuilder getStraceOrBuilder();

    // optional .net.maivic.comm.ExceptionType cause = 4;
    /**
     * <code>optional .net.maivic.comm.ExceptionType cause = 4;</code>
     */
    boolean hasCause();
    /**
     * <code>optional .net.maivic.comm.ExceptionType cause = 4;</code>
     */
    net.maivic.comm.Maivic.ExceptionType getCause();
    /**
     * <code>optional .net.maivic.comm.ExceptionType cause = 4;</code>
     */
    net.maivic.comm.Maivic.ExceptionTypeOrBuilder getCauseOrBuilder();
  }
  /**
   * Protobuf type {@code net.maivic.comm.ExceptionType}
   */
  public static final class ExceptionType extends
      com.google.protobuf.GeneratedMessage
      implements ExceptionTypeOrBuilder {
    // Use ExceptionType.newBuilder() to construct.
    private ExceptionType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ExceptionType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ExceptionType defaultInstance;
    public static ExceptionType getDefaultInstance() {
      return defaultInstance;
    }

    public ExceptionType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ExceptionType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              typeId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              message_ = input.readBytes();
              break;
            }
            case 26: {
              net.maivic.comm.Maivic.StackTrace.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = strace_.toBuilder();
              }
              strace_ = input.readMessage(net.maivic.comm.Maivic.StackTrace.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(strace_);
                strace_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              net.maivic.comm.Maivic.ExceptionType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = cause_.toBuilder();
              }
              cause_ = input.readMessage(net.maivic.comm.Maivic.ExceptionType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cause_);
                cause_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_ExceptionType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_ExceptionType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.ExceptionType.class, net.maivic.comm.Maivic.ExceptionType.Builder.class);
    }

    public static com.google.protobuf.Parser<ExceptionType> PARSER =
        new com.google.protobuf.AbstractParser<ExceptionType>() {
      public ExceptionType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExceptionType(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ExceptionType> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 type_id = 1;
    public static final int TYPE_ID_FIELD_NUMBER = 1;
    private int typeId_;
    /**
     * <code>required int32 type_id = 1;</code>
     */
    public boolean hasTypeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 type_id = 1;</code>
     */
    public int getTypeId() {
      return typeId_;
    }

    // optional string message = 2;
    public static final int MESSAGE_FIELD_NUMBER = 2;
    private java.lang.Object message_;
    /**
     * <code>optional string message = 2;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string message = 2;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string message = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .net.maivic.comm.StackTrace strace = 3;
    public static final int STRACE_FIELD_NUMBER = 3;
    private net.maivic.comm.Maivic.StackTrace strace_;
    /**
     * <code>optional .net.maivic.comm.StackTrace strace = 3;</code>
     */
    public boolean hasStrace() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .net.maivic.comm.StackTrace strace = 3;</code>
     */
    public net.maivic.comm.Maivic.StackTrace getStrace() {
      return strace_;
    }
    /**
     * <code>optional .net.maivic.comm.StackTrace strace = 3;</code>
     */
    public net.maivic.comm.Maivic.StackTraceOrBuilder getStraceOrBuilder() {
      return strace_;
    }

    // optional .net.maivic.comm.ExceptionType cause = 4;
    public static final int CAUSE_FIELD_NUMBER = 4;
    private net.maivic.comm.Maivic.ExceptionType cause_;
    /**
     * <code>optional .net.maivic.comm.ExceptionType cause = 4;</code>
     */
    public boolean hasCause() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .net.maivic.comm.ExceptionType cause = 4;</code>
     */
    public net.maivic.comm.Maivic.ExceptionType getCause() {
      return cause_;
    }
    /**
     * <code>optional .net.maivic.comm.ExceptionType cause = 4;</code>
     */
    public net.maivic.comm.Maivic.ExceptionTypeOrBuilder getCauseOrBuilder() {
      return cause_;
    }

    private void initFields() {
      typeId_ = 0;
      message_ = "";
      strace_ = net.maivic.comm.Maivic.StackTrace.getDefaultInstance();
      cause_ = net.maivic.comm.Maivic.ExceptionType.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTypeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasCause()) {
        if (!getCause().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, typeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMessageBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, strace_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, cause_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, typeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMessageBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, strace_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cause_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.ExceptionType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.ExceptionType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.ExceptionType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.ExceptionType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.ExceptionType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.ExceptionType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.ExceptionType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.ExceptionType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.ExceptionType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.ExceptionType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.ExceptionType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.ExceptionType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.maivic.comm.Maivic.ExceptionTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_ExceptionType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_ExceptionType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.ExceptionType.class, net.maivic.comm.Maivic.ExceptionType.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.ExceptionType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStraceFieldBuilder();
          getCauseFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        typeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (straceBuilder_ == null) {
          strace_ = net.maivic.comm.Maivic.StackTrace.getDefaultInstance();
        } else {
          straceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (causeBuilder_ == null) {
          cause_ = net.maivic.comm.Maivic.ExceptionType.getDefaultInstance();
        } else {
          causeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_ExceptionType_descriptor;
      }

      public net.maivic.comm.Maivic.ExceptionType getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.ExceptionType.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.ExceptionType build() {
        net.maivic.comm.Maivic.ExceptionType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.ExceptionType buildPartial() {
        net.maivic.comm.Maivic.ExceptionType result = new net.maivic.comm.Maivic.ExceptionType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.typeId_ = typeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.message_ = message_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (straceBuilder_ == null) {
          result.strace_ = strace_;
        } else {
          result.strace_ = straceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (causeBuilder_ == null) {
          result.cause_ = cause_;
        } else {
          result.cause_ = causeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.ExceptionType) {
          return mergeFrom((net.maivic.comm.Maivic.ExceptionType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.ExceptionType other) {
        if (other == net.maivic.comm.Maivic.ExceptionType.getDefaultInstance()) return this;
        if (other.hasTypeId()) {
          setTypeId(other.getTypeId());
        }
        if (other.hasMessage()) {
          bitField0_ |= 0x00000002;
          message_ = other.message_;
          onChanged();
        }
        if (other.hasStrace()) {
          mergeStrace(other.getStrace());
        }
        if (other.hasCause()) {
          mergeCause(other.getCause());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTypeId()) {
          
          return false;
        }
        if (hasCause()) {
          if (!getCause().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.ExceptionType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.ExceptionType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 type_id = 1;
      private int typeId_ ;
      /**
       * <code>required int32 type_id = 1;</code>
       */
      public boolean hasTypeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 type_id = 1;</code>
       */
      public int getTypeId() {
        return typeId_;
      }
      /**
       * <code>required int32 type_id = 1;</code>
       */
      public Builder setTypeId(int value) {
        bitField0_ |= 0x00000001;
        typeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type_id = 1;</code>
       */
      public Builder clearTypeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        typeId_ = 0;
        onChanged();
        return this;
      }

      // optional string message = 2;
      private java.lang.Object message_ = "";
      /**
       * <code>optional string message = 2;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        message_ = value;
        onChanged();
        return this;
      }

      // optional .net.maivic.comm.StackTrace strace = 3;
      private net.maivic.comm.Maivic.StackTrace strace_ = net.maivic.comm.Maivic.StackTrace.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.maivic.comm.Maivic.StackTrace, net.maivic.comm.Maivic.StackTrace.Builder, net.maivic.comm.Maivic.StackTraceOrBuilder> straceBuilder_;
      /**
       * <code>optional .net.maivic.comm.StackTrace strace = 3;</code>
       */
      public boolean hasStrace() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .net.maivic.comm.StackTrace strace = 3;</code>
       */
      public net.maivic.comm.Maivic.StackTrace getStrace() {
        if (straceBuilder_ == null) {
          return strace_;
        } else {
          return straceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .net.maivic.comm.StackTrace strace = 3;</code>
       */
      public Builder setStrace(net.maivic.comm.Maivic.StackTrace value) {
        if (straceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          strace_ = value;
          onChanged();
        } else {
          straceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.StackTrace strace = 3;</code>
       */
      public Builder setStrace(
          net.maivic.comm.Maivic.StackTrace.Builder builderForValue) {
        if (straceBuilder_ == null) {
          strace_ = builderForValue.build();
          onChanged();
        } else {
          straceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.StackTrace strace = 3;</code>
       */
      public Builder mergeStrace(net.maivic.comm.Maivic.StackTrace value) {
        if (straceBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              strace_ != net.maivic.comm.Maivic.StackTrace.getDefaultInstance()) {
            strace_ =
              net.maivic.comm.Maivic.StackTrace.newBuilder(strace_).mergeFrom(value).buildPartial();
          } else {
            strace_ = value;
          }
          onChanged();
        } else {
          straceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.StackTrace strace = 3;</code>
       */
      public Builder clearStrace() {
        if (straceBuilder_ == null) {
          strace_ = net.maivic.comm.Maivic.StackTrace.getDefaultInstance();
          onChanged();
        } else {
          straceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.StackTrace strace = 3;</code>
       */
      public net.maivic.comm.Maivic.StackTrace.Builder getStraceBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getStraceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .net.maivic.comm.StackTrace strace = 3;</code>
       */
      public net.maivic.comm.Maivic.StackTraceOrBuilder getStraceOrBuilder() {
        if (straceBuilder_ != null) {
          return straceBuilder_.getMessageOrBuilder();
        } else {
          return strace_;
        }
      }
      /**
       * <code>optional .net.maivic.comm.StackTrace strace = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          net.maivic.comm.Maivic.StackTrace, net.maivic.comm.Maivic.StackTrace.Builder, net.maivic.comm.Maivic.StackTraceOrBuilder> 
          getStraceFieldBuilder() {
        if (straceBuilder_ == null) {
          straceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.maivic.comm.Maivic.StackTrace, net.maivic.comm.Maivic.StackTrace.Builder, net.maivic.comm.Maivic.StackTraceOrBuilder>(
                  strace_,
                  getParentForChildren(),
                  isClean());
          strace_ = null;
        }
        return straceBuilder_;
      }

      // optional .net.maivic.comm.ExceptionType cause = 4;
      private net.maivic.comm.Maivic.ExceptionType cause_ = net.maivic.comm.Maivic.ExceptionType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.maivic.comm.Maivic.ExceptionType, net.maivic.comm.Maivic.ExceptionType.Builder, net.maivic.comm.Maivic.ExceptionTypeOrBuilder> causeBuilder_;
      /**
       * <code>optional .net.maivic.comm.ExceptionType cause = 4;</code>
       */
      public boolean hasCause() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType cause = 4;</code>
       */
      public net.maivic.comm.Maivic.ExceptionType getCause() {
        if (causeBuilder_ == null) {
          return cause_;
        } else {
          return causeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType cause = 4;</code>
       */
      public Builder setCause(net.maivic.comm.Maivic.ExceptionType value) {
        if (causeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cause_ = value;
          onChanged();
        } else {
          causeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType cause = 4;</code>
       */
      public Builder setCause(
          net.maivic.comm.Maivic.ExceptionType.Builder builderForValue) {
        if (causeBuilder_ == null) {
          cause_ = builderForValue.build();
          onChanged();
        } else {
          causeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType cause = 4;</code>
       */
      public Builder mergeCause(net.maivic.comm.Maivic.ExceptionType value) {
        if (causeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              cause_ != net.maivic.comm.Maivic.ExceptionType.getDefaultInstance()) {
            cause_ =
              net.maivic.comm.Maivic.ExceptionType.newBuilder(cause_).mergeFrom(value).buildPartial();
          } else {
            cause_ = value;
          }
          onChanged();
        } else {
          causeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType cause = 4;</code>
       */
      public Builder clearCause() {
        if (causeBuilder_ == null) {
          cause_ = net.maivic.comm.Maivic.ExceptionType.getDefaultInstance();
          onChanged();
        } else {
          causeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType cause = 4;</code>
       */
      public net.maivic.comm.Maivic.ExceptionType.Builder getCauseBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCauseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType cause = 4;</code>
       */
      public net.maivic.comm.Maivic.ExceptionTypeOrBuilder getCauseOrBuilder() {
        if (causeBuilder_ != null) {
          return causeBuilder_.getMessageOrBuilder();
        } else {
          return cause_;
        }
      }
      /**
       * <code>optional .net.maivic.comm.ExceptionType cause = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          net.maivic.comm.Maivic.ExceptionType, net.maivic.comm.Maivic.ExceptionType.Builder, net.maivic.comm.Maivic.ExceptionTypeOrBuilder> 
          getCauseFieldBuilder() {
        if (causeBuilder_ == null) {
          causeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.maivic.comm.Maivic.ExceptionType, net.maivic.comm.Maivic.ExceptionType.Builder, net.maivic.comm.Maivic.ExceptionTypeOrBuilder>(
                  cause_,
                  getParentForChildren(),
                  isClean());
          cause_ = null;
        }
        return causeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.ExceptionType)
    }

    static {
      defaultInstance = new ExceptionType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.ExceptionType)
  }

  public interface StackTraceOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated string frame = 1;
    /**
     * <code>repeated string frame = 1;</code>
     */
    java.util.List<java.lang.String>
    getFrameList();
    /**
     * <code>repeated string frame = 1;</code>
     */
    int getFrameCount();
    /**
     * <code>repeated string frame = 1;</code>
     */
    java.lang.String getFrame(int index);
    /**
     * <code>repeated string frame = 1;</code>
     */
    com.google.protobuf.ByteString
        getFrameBytes(int index);
  }
  /**
   * Protobuf type {@code net.maivic.comm.StackTrace}
   */
  public static final class StackTrace extends
      com.google.protobuf.GeneratedMessage
      implements StackTraceOrBuilder {
    // Use StackTrace.newBuilder() to construct.
    private StackTrace(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StackTrace(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StackTrace defaultInstance;
    public static StackTrace getDefaultInstance() {
      return defaultInstance;
    }

    public StackTrace getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StackTrace(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                frame_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              frame_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          frame_ = new com.google.protobuf.UnmodifiableLazyStringList(frame_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_StackTrace_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_StackTrace_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.StackTrace.class, net.maivic.comm.Maivic.StackTrace.Builder.class);
    }

    public static com.google.protobuf.Parser<StackTrace> PARSER =
        new com.google.protobuf.AbstractParser<StackTrace>() {
      public StackTrace parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StackTrace(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StackTrace> getParserForType() {
      return PARSER;
    }

    // repeated string frame = 1;
    public static final int FRAME_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList frame_;
    /**
     * <code>repeated string frame = 1;</code>
     */
    public java.util.List<java.lang.String>
        getFrameList() {
      return frame_;
    }
    /**
     * <code>repeated string frame = 1;</code>
     */
    public int getFrameCount() {
      return frame_.size();
    }
    /**
     * <code>repeated string frame = 1;</code>
     */
    public java.lang.String getFrame(int index) {
      return frame_.get(index);
    }
    /**
     * <code>repeated string frame = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFrameBytes(int index) {
      return frame_.getByteString(index);
    }

    private void initFields() {
      frame_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < frame_.size(); i++) {
        output.writeBytes(1, frame_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < frame_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(frame_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getFrameList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.StackTrace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.StackTrace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.StackTrace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.StackTrace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.StackTrace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.StackTrace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.StackTrace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.StackTrace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.StackTrace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.StackTrace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.StackTrace prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.StackTrace}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.maivic.comm.Maivic.StackTraceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_StackTrace_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_StackTrace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.StackTrace.class, net.maivic.comm.Maivic.StackTrace.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.StackTrace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        frame_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_StackTrace_descriptor;
      }

      public net.maivic.comm.Maivic.StackTrace getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.StackTrace.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.StackTrace build() {
        net.maivic.comm.Maivic.StackTrace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.StackTrace buildPartial() {
        net.maivic.comm.Maivic.StackTrace result = new net.maivic.comm.Maivic.StackTrace(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          frame_ = new com.google.protobuf.UnmodifiableLazyStringList(
              frame_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.frame_ = frame_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.StackTrace) {
          return mergeFrom((net.maivic.comm.Maivic.StackTrace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.StackTrace other) {
        if (other == net.maivic.comm.Maivic.StackTrace.getDefaultInstance()) return this;
        if (!other.frame_.isEmpty()) {
          if (frame_.isEmpty()) {
            frame_ = other.frame_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFrameIsMutable();
            frame_.addAll(other.frame_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.StackTrace parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.StackTrace) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated string frame = 1;
      private com.google.protobuf.LazyStringList frame_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureFrameIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          frame_ = new com.google.protobuf.LazyStringArrayList(frame_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string frame = 1;</code>
       */
      public java.util.List<java.lang.String>
          getFrameList() {
        return java.util.Collections.unmodifiableList(frame_);
      }
      /**
       * <code>repeated string frame = 1;</code>
       */
      public int getFrameCount() {
        return frame_.size();
      }
      /**
       * <code>repeated string frame = 1;</code>
       */
      public java.lang.String getFrame(int index) {
        return frame_.get(index);
      }
      /**
       * <code>repeated string frame = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFrameBytes(int index) {
        return frame_.getByteString(index);
      }
      /**
       * <code>repeated string frame = 1;</code>
       */
      public Builder setFrame(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFrameIsMutable();
        frame_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string frame = 1;</code>
       */
      public Builder addFrame(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFrameIsMutable();
        frame_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string frame = 1;</code>
       */
      public Builder addAllFrame(
          java.lang.Iterable<java.lang.String> values) {
        ensureFrameIsMutable();
        super.addAll(values, frame_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string frame = 1;</code>
       */
      public Builder clearFrame() {
        frame_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string frame = 1;</code>
       */
      public Builder addFrameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFrameIsMutable();
        frame_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.StackTrace)
    }

    static {
      defaultInstance = new StackTrace(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.StackTrace)
  }

  public interface EntityReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 entity_type_id = 1;
    /**
     * <code>required int32 entity_type_id = 1;</code>
     */
    boolean hasEntityTypeId();
    /**
     * <code>required int32 entity_type_id = 1;</code>
     */
    int getEntityTypeId();

    // repeated bytes entities_pk = 2;
    /**
     * <code>repeated bytes entities_pk = 2;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getEntitiesPkList();
    /**
     * <code>repeated bytes entities_pk = 2;</code>
     */
    int getEntitiesPkCount();
    /**
     * <code>repeated bytes entities_pk = 2;</code>
     */
    com.google.protobuf.ByteString getEntitiesPk(int index);

    // optional string entity_type_name = 3;
    /**
     * <code>optional string entity_type_name = 3;</code>
     */
    boolean hasEntityTypeName();
    /**
     * <code>optional string entity_type_name = 3;</code>
     */
    java.lang.String getEntityTypeName();
    /**
     * <code>optional string entity_type_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getEntityTypeNameBytes();
  }
  /**
   * Protobuf type {@code net.maivic.comm.EntityReq}
   */
  public static final class EntityReq extends
      com.google.protobuf.GeneratedMessage
      implements EntityReqOrBuilder {
    // Use EntityReq.newBuilder() to construct.
    private EntityReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EntityReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EntityReq defaultInstance;
    public static EntityReq getDefaultInstance() {
      return defaultInstance;
    }

    public EntityReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EntityReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              entityTypeId_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                entitiesPk_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000002;
              }
              entitiesPk_.add(input.readBytes());
              break;
            }
            case 26: {
              bitField0_ |= 0x00000002;
              entityTypeName_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          entitiesPk_ = java.util.Collections.unmodifiableList(entitiesPk_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_EntityReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_EntityReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.EntityReq.class, net.maivic.comm.Maivic.EntityReq.Builder.class);
    }

    public static com.google.protobuf.Parser<EntityReq> PARSER =
        new com.google.protobuf.AbstractParser<EntityReq>() {
      public EntityReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EntityReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EntityReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 entity_type_id = 1;
    public static final int ENTITY_TYPE_ID_FIELD_NUMBER = 1;
    private int entityTypeId_;
    /**
     * <code>required int32 entity_type_id = 1;</code>
     */
    public boolean hasEntityTypeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 entity_type_id = 1;</code>
     */
    public int getEntityTypeId() {
      return entityTypeId_;
    }

    // repeated bytes entities_pk = 2;
    public static final int ENTITIES_PK_FIELD_NUMBER = 2;
    private java.util.List<com.google.protobuf.ByteString> entitiesPk_;
    /**
     * <code>repeated bytes entities_pk = 2;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getEntitiesPkList() {
      return entitiesPk_;
    }
    /**
     * <code>repeated bytes entities_pk = 2;</code>
     */
    public int getEntitiesPkCount() {
      return entitiesPk_.size();
    }
    /**
     * <code>repeated bytes entities_pk = 2;</code>
     */
    public com.google.protobuf.ByteString getEntitiesPk(int index) {
      return entitiesPk_.get(index);
    }

    // optional string entity_type_name = 3;
    public static final int ENTITY_TYPE_NAME_FIELD_NUMBER = 3;
    private java.lang.Object entityTypeName_;
    /**
     * <code>optional string entity_type_name = 3;</code>
     */
    public boolean hasEntityTypeName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string entity_type_name = 3;</code>
     */
    public java.lang.String getEntityTypeName() {
      java.lang.Object ref = entityTypeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          entityTypeName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string entity_type_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getEntityTypeNameBytes() {
      java.lang.Object ref = entityTypeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        entityTypeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      entityTypeId_ = 0;
      entitiesPk_ = java.util.Collections.emptyList();
      entityTypeName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasEntityTypeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, entityTypeId_);
      }
      for (int i = 0; i < entitiesPk_.size(); i++) {
        output.writeBytes(2, entitiesPk_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, getEntityTypeNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, entityTypeId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < entitiesPk_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(entitiesPk_.get(i));
        }
        size += dataSize;
        size += 1 * getEntitiesPkList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getEntityTypeNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.EntityReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.EntityReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.EntityReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.EntityReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.EntityReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.EntityReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.EntityReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.EntityReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.EntityReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.EntityReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.EntityReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.EntityReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.maivic.comm.Maivic.EntityReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_EntityReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_EntityReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.EntityReq.class, net.maivic.comm.Maivic.EntityReq.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.EntityReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        entityTypeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        entitiesPk_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        entityTypeName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_EntityReq_descriptor;
      }

      public net.maivic.comm.Maivic.EntityReq getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.EntityReq.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.EntityReq build() {
        net.maivic.comm.Maivic.EntityReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.EntityReq buildPartial() {
        net.maivic.comm.Maivic.EntityReq result = new net.maivic.comm.Maivic.EntityReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.entityTypeId_ = entityTypeId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          entitiesPk_ = java.util.Collections.unmodifiableList(entitiesPk_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.entitiesPk_ = entitiesPk_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.entityTypeName_ = entityTypeName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.EntityReq) {
          return mergeFrom((net.maivic.comm.Maivic.EntityReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.EntityReq other) {
        if (other == net.maivic.comm.Maivic.EntityReq.getDefaultInstance()) return this;
        if (other.hasEntityTypeId()) {
          setEntityTypeId(other.getEntityTypeId());
        }
        if (!other.entitiesPk_.isEmpty()) {
          if (entitiesPk_.isEmpty()) {
            entitiesPk_ = other.entitiesPk_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureEntitiesPkIsMutable();
            entitiesPk_.addAll(other.entitiesPk_);
          }
          onChanged();
        }
        if (other.hasEntityTypeName()) {
          bitField0_ |= 0x00000004;
          entityTypeName_ = other.entityTypeName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEntityTypeId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.EntityReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.EntityReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 entity_type_id = 1;
      private int entityTypeId_ ;
      /**
       * <code>required int32 entity_type_id = 1;</code>
       */
      public boolean hasEntityTypeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 entity_type_id = 1;</code>
       */
      public int getEntityTypeId() {
        return entityTypeId_;
      }
      /**
       * <code>required int32 entity_type_id = 1;</code>
       */
      public Builder setEntityTypeId(int value) {
        bitField0_ |= 0x00000001;
        entityTypeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 entity_type_id = 1;</code>
       */
      public Builder clearEntityTypeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        entityTypeId_ = 0;
        onChanged();
        return this;
      }

      // repeated bytes entities_pk = 2;
      private java.util.List<com.google.protobuf.ByteString> entitiesPk_ = java.util.Collections.emptyList();
      private void ensureEntitiesPkIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          entitiesPk_ = new java.util.ArrayList<com.google.protobuf.ByteString>(entitiesPk_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated bytes entities_pk = 2;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getEntitiesPkList() {
        return java.util.Collections.unmodifiableList(entitiesPk_);
      }
      /**
       * <code>repeated bytes entities_pk = 2;</code>
       */
      public int getEntitiesPkCount() {
        return entitiesPk_.size();
      }
      /**
       * <code>repeated bytes entities_pk = 2;</code>
       */
      public com.google.protobuf.ByteString getEntitiesPk(int index) {
        return entitiesPk_.get(index);
      }
      /**
       * <code>repeated bytes entities_pk = 2;</code>
       */
      public Builder setEntitiesPk(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEntitiesPkIsMutable();
        entitiesPk_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes entities_pk = 2;</code>
       */
      public Builder addEntitiesPk(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEntitiesPkIsMutable();
        entitiesPk_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes entities_pk = 2;</code>
       */
      public Builder addAllEntitiesPk(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureEntitiesPkIsMutable();
        super.addAll(values, entitiesPk_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes entities_pk = 2;</code>
       */
      public Builder clearEntitiesPk() {
        entitiesPk_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional string entity_type_name = 3;
      private java.lang.Object entityTypeName_ = "";
      /**
       * <code>optional string entity_type_name = 3;</code>
       */
      public boolean hasEntityTypeName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string entity_type_name = 3;</code>
       */
      public java.lang.String getEntityTypeName() {
        java.lang.Object ref = entityTypeName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          entityTypeName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string entity_type_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getEntityTypeNameBytes() {
        java.lang.Object ref = entityTypeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          entityTypeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string entity_type_name = 3;</code>
       */
      public Builder setEntityTypeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        entityTypeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string entity_type_name = 3;</code>
       */
      public Builder clearEntityTypeName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        entityTypeName_ = getDefaultInstance().getEntityTypeName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string entity_type_name = 3;</code>
       */
      public Builder setEntityTypeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        entityTypeName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.EntityReq)
    }

    static {
      defaultInstance = new EntityReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.EntityReq)
  }

  public interface RelationRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 relation_id = 1;
    /**
     * <code>required int32 relation_id = 1;</code>
     */
    boolean hasRelationId();
    /**
     * <code>required int32 relation_id = 1;</code>
     */
    int getRelationId();

    // required bytes entity_pk = 2;
    /**
     * <code>required bytes entity_pk = 2;</code>
     */
    boolean hasEntityPk();
    /**
     * <code>required bytes entity_pk = 2;</code>
     */
    com.google.protobuf.ByteString getEntityPk();

    // optional string relation_name = 3;
    /**
     * <code>optional string relation_name = 3;</code>
     */
    boolean hasRelationName();
    /**
     * <code>optional string relation_name = 3;</code>
     */
    java.lang.String getRelationName();
    /**
     * <code>optional string relation_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getRelationNameBytes();
  }
  /**
   * Protobuf type {@code net.maivic.comm.RelationRequest}
   */
  public static final class RelationRequest extends
      com.google.protobuf.GeneratedMessage
      implements RelationRequestOrBuilder {
    // Use RelationRequest.newBuilder() to construct.
    private RelationRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RelationRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RelationRequest defaultInstance;
    public static RelationRequest getDefaultInstance() {
      return defaultInstance;
    }

    public RelationRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RelationRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              relationId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              entityPk_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              relationName_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_RelationRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_RelationRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.RelationRequest.class, net.maivic.comm.Maivic.RelationRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<RelationRequest> PARSER =
        new com.google.protobuf.AbstractParser<RelationRequest>() {
      public RelationRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RelationRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RelationRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 relation_id = 1;
    public static final int RELATION_ID_FIELD_NUMBER = 1;
    private int relationId_;
    /**
     * <code>required int32 relation_id = 1;</code>
     */
    public boolean hasRelationId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 relation_id = 1;</code>
     */
    public int getRelationId() {
      return relationId_;
    }

    // required bytes entity_pk = 2;
    public static final int ENTITY_PK_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString entityPk_;
    /**
     * <code>required bytes entity_pk = 2;</code>
     */
    public boolean hasEntityPk() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes entity_pk = 2;</code>
     */
    public com.google.protobuf.ByteString getEntityPk() {
      return entityPk_;
    }

    // optional string relation_name = 3;
    public static final int RELATION_NAME_FIELD_NUMBER = 3;
    private java.lang.Object relationName_;
    /**
     * <code>optional string relation_name = 3;</code>
     */
    public boolean hasRelationName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string relation_name = 3;</code>
     */
    public java.lang.String getRelationName() {
      java.lang.Object ref = relationName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          relationName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string relation_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getRelationNameBytes() {
      java.lang.Object ref = relationName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        relationName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      relationId_ = 0;
      entityPk_ = com.google.protobuf.ByteString.EMPTY;
      relationName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRelationId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEntityPk()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, relationId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, entityPk_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getRelationNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, relationId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, entityPk_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getRelationNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.RelationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.RelationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.RelationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.RelationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.RelationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.RelationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.RelationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.RelationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.RelationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.RelationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.RelationRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.RelationRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.maivic.comm.Maivic.RelationRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_RelationRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_RelationRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.RelationRequest.class, net.maivic.comm.Maivic.RelationRequest.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.RelationRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        relationId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        entityPk_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        relationName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_RelationRequest_descriptor;
      }

      public net.maivic.comm.Maivic.RelationRequest getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.RelationRequest.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.RelationRequest build() {
        net.maivic.comm.Maivic.RelationRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.RelationRequest buildPartial() {
        net.maivic.comm.Maivic.RelationRequest result = new net.maivic.comm.Maivic.RelationRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.relationId_ = relationId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.entityPk_ = entityPk_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.relationName_ = relationName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.RelationRequest) {
          return mergeFrom((net.maivic.comm.Maivic.RelationRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.RelationRequest other) {
        if (other == net.maivic.comm.Maivic.RelationRequest.getDefaultInstance()) return this;
        if (other.hasRelationId()) {
          setRelationId(other.getRelationId());
        }
        if (other.hasEntityPk()) {
          setEntityPk(other.getEntityPk());
        }
        if (other.hasRelationName()) {
          bitField0_ |= 0x00000004;
          relationName_ = other.relationName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRelationId()) {
          
          return false;
        }
        if (!hasEntityPk()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.RelationRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.RelationRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 relation_id = 1;
      private int relationId_ ;
      /**
       * <code>required int32 relation_id = 1;</code>
       */
      public boolean hasRelationId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 relation_id = 1;</code>
       */
      public int getRelationId() {
        return relationId_;
      }
      /**
       * <code>required int32 relation_id = 1;</code>
       */
      public Builder setRelationId(int value) {
        bitField0_ |= 0x00000001;
        relationId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 relation_id = 1;</code>
       */
      public Builder clearRelationId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        relationId_ = 0;
        onChanged();
        return this;
      }

      // required bytes entity_pk = 2;
      private com.google.protobuf.ByteString entityPk_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes entity_pk = 2;</code>
       */
      public boolean hasEntityPk() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes entity_pk = 2;</code>
       */
      public com.google.protobuf.ByteString getEntityPk() {
        return entityPk_;
      }
      /**
       * <code>required bytes entity_pk = 2;</code>
       */
      public Builder setEntityPk(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        entityPk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes entity_pk = 2;</code>
       */
      public Builder clearEntityPk() {
        bitField0_ = (bitField0_ & ~0x00000002);
        entityPk_ = getDefaultInstance().getEntityPk();
        onChanged();
        return this;
      }

      // optional string relation_name = 3;
      private java.lang.Object relationName_ = "";
      /**
       * <code>optional string relation_name = 3;</code>
       */
      public boolean hasRelationName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string relation_name = 3;</code>
       */
      public java.lang.String getRelationName() {
        java.lang.Object ref = relationName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          relationName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string relation_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getRelationNameBytes() {
        java.lang.Object ref = relationName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          relationName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string relation_name = 3;</code>
       */
      public Builder setRelationName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        relationName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string relation_name = 3;</code>
       */
      public Builder clearRelationName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        relationName_ = getDefaultInstance().getRelationName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string relation_name = 3;</code>
       */
      public Builder setRelationNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        relationName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.RelationRequest)
    }

    static {
      defaultInstance = new RelationRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.RelationRequest)
  }

  public interface EntityResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 entity_type_id = 1;
    /**
     * <code>required int32 entity_type_id = 1;</code>
     */
    boolean hasEntityTypeId();
    /**
     * <code>required int32 entity_type_id = 1;</code>
     */
    int getEntityTypeId();

    // optional int32 entity_type_name = 4;
    /**
     * <code>optional int32 entity_type_name = 4;</code>
     */
    boolean hasEntityTypeName();
    /**
     * <code>optional int32 entity_type_name = 4;</code>
     */
    int getEntityTypeName();

    // repeated bytes serialized_entities = 5;
    /**
     * <code>repeated bytes serialized_entities = 5;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getSerializedEntitiesList();
    /**
     * <code>repeated bytes serialized_entities = 5;</code>
     */
    int getSerializedEntitiesCount();
    /**
     * <code>repeated bytes serialized_entities = 5;</code>
     */
    com.google.protobuf.ByteString getSerializedEntities(int index);
  }
  /**
   * Protobuf type {@code net.maivic.comm.EntityResponse}
   */
  public static final class EntityResponse extends
      com.google.protobuf.GeneratedMessage
      implements EntityResponseOrBuilder {
    // Use EntityResponse.newBuilder() to construct.
    private EntityResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EntityResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EntityResponse defaultInstance;
    public static EntityResponse getDefaultInstance() {
      return defaultInstance;
    }

    public EntityResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EntityResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              entityTypeId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              entityTypeName_ = input.readInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                serializedEntities_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000004;
              }
              serializedEntities_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          serializedEntities_ = java.util.Collections.unmodifiableList(serializedEntities_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_EntityResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_EntityResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.EntityResponse.class, net.maivic.comm.Maivic.EntityResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<EntityResponse> PARSER =
        new com.google.protobuf.AbstractParser<EntityResponse>() {
      public EntityResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EntityResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EntityResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 entity_type_id = 1;
    public static final int ENTITY_TYPE_ID_FIELD_NUMBER = 1;
    private int entityTypeId_;
    /**
     * <code>required int32 entity_type_id = 1;</code>
     */
    public boolean hasEntityTypeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 entity_type_id = 1;</code>
     */
    public int getEntityTypeId() {
      return entityTypeId_;
    }

    // optional int32 entity_type_name = 4;
    public static final int ENTITY_TYPE_NAME_FIELD_NUMBER = 4;
    private int entityTypeName_;
    /**
     * <code>optional int32 entity_type_name = 4;</code>
     */
    public boolean hasEntityTypeName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 entity_type_name = 4;</code>
     */
    public int getEntityTypeName() {
      return entityTypeName_;
    }

    // repeated bytes serialized_entities = 5;
    public static final int SERIALIZED_ENTITIES_FIELD_NUMBER = 5;
    private java.util.List<com.google.protobuf.ByteString> serializedEntities_;
    /**
     * <code>repeated bytes serialized_entities = 5;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getSerializedEntitiesList() {
      return serializedEntities_;
    }
    /**
     * <code>repeated bytes serialized_entities = 5;</code>
     */
    public int getSerializedEntitiesCount() {
      return serializedEntities_.size();
    }
    /**
     * <code>repeated bytes serialized_entities = 5;</code>
     */
    public com.google.protobuf.ByteString getSerializedEntities(int index) {
      return serializedEntities_.get(index);
    }

    private void initFields() {
      entityTypeId_ = 0;
      entityTypeName_ = 0;
      serializedEntities_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasEntityTypeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, entityTypeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, entityTypeName_);
      }
      for (int i = 0; i < serializedEntities_.size(); i++) {
        output.writeBytes(5, serializedEntities_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, entityTypeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, entityTypeName_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < serializedEntities_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(serializedEntities_.get(i));
        }
        size += dataSize;
        size += 1 * getSerializedEntitiesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.EntityResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.EntityResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.EntityResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.EntityResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.EntityResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.EntityResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.EntityResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.EntityResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.EntityResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.EntityResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.EntityResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.EntityResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.maivic.comm.Maivic.EntityResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_EntityResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_EntityResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.EntityResponse.class, net.maivic.comm.Maivic.EntityResponse.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.EntityResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        entityTypeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        entityTypeName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        serializedEntities_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_EntityResponse_descriptor;
      }

      public net.maivic.comm.Maivic.EntityResponse getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.EntityResponse.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.EntityResponse build() {
        net.maivic.comm.Maivic.EntityResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.EntityResponse buildPartial() {
        net.maivic.comm.Maivic.EntityResponse result = new net.maivic.comm.Maivic.EntityResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.entityTypeId_ = entityTypeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.entityTypeName_ = entityTypeName_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          serializedEntities_ = java.util.Collections.unmodifiableList(serializedEntities_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.serializedEntities_ = serializedEntities_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.EntityResponse) {
          return mergeFrom((net.maivic.comm.Maivic.EntityResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.EntityResponse other) {
        if (other == net.maivic.comm.Maivic.EntityResponse.getDefaultInstance()) return this;
        if (other.hasEntityTypeId()) {
          setEntityTypeId(other.getEntityTypeId());
        }
        if (other.hasEntityTypeName()) {
          setEntityTypeName(other.getEntityTypeName());
        }
        if (!other.serializedEntities_.isEmpty()) {
          if (serializedEntities_.isEmpty()) {
            serializedEntities_ = other.serializedEntities_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSerializedEntitiesIsMutable();
            serializedEntities_.addAll(other.serializedEntities_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEntityTypeId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.EntityResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.EntityResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 entity_type_id = 1;
      private int entityTypeId_ ;
      /**
       * <code>required int32 entity_type_id = 1;</code>
       */
      public boolean hasEntityTypeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 entity_type_id = 1;</code>
       */
      public int getEntityTypeId() {
        return entityTypeId_;
      }
      /**
       * <code>required int32 entity_type_id = 1;</code>
       */
      public Builder setEntityTypeId(int value) {
        bitField0_ |= 0x00000001;
        entityTypeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 entity_type_id = 1;</code>
       */
      public Builder clearEntityTypeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        entityTypeId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 entity_type_name = 4;
      private int entityTypeName_ ;
      /**
       * <code>optional int32 entity_type_name = 4;</code>
       */
      public boolean hasEntityTypeName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 entity_type_name = 4;</code>
       */
      public int getEntityTypeName() {
        return entityTypeName_;
      }
      /**
       * <code>optional int32 entity_type_name = 4;</code>
       */
      public Builder setEntityTypeName(int value) {
        bitField0_ |= 0x00000002;
        entityTypeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 entity_type_name = 4;</code>
       */
      public Builder clearEntityTypeName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        entityTypeName_ = 0;
        onChanged();
        return this;
      }

      // repeated bytes serialized_entities = 5;
      private java.util.List<com.google.protobuf.ByteString> serializedEntities_ = java.util.Collections.emptyList();
      private void ensureSerializedEntitiesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          serializedEntities_ = new java.util.ArrayList<com.google.protobuf.ByteString>(serializedEntities_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated bytes serialized_entities = 5;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getSerializedEntitiesList() {
        return java.util.Collections.unmodifiableList(serializedEntities_);
      }
      /**
       * <code>repeated bytes serialized_entities = 5;</code>
       */
      public int getSerializedEntitiesCount() {
        return serializedEntities_.size();
      }
      /**
       * <code>repeated bytes serialized_entities = 5;</code>
       */
      public com.google.protobuf.ByteString getSerializedEntities(int index) {
        return serializedEntities_.get(index);
      }
      /**
       * <code>repeated bytes serialized_entities = 5;</code>
       */
      public Builder setSerializedEntities(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSerializedEntitiesIsMutable();
        serializedEntities_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes serialized_entities = 5;</code>
       */
      public Builder addSerializedEntities(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSerializedEntitiesIsMutable();
        serializedEntities_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes serialized_entities = 5;</code>
       */
      public Builder addAllSerializedEntities(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureSerializedEntitiesIsMutable();
        super.addAll(values, serializedEntities_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes serialized_entities = 5;</code>
       */
      public Builder clearSerializedEntities() {
        serializedEntities_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.EntityResponse)
    }

    static {
      defaultInstance = new EntityResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.EntityResponse)
  }

  public interface IdentityOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required bytes uuid = 1;
    /**
     * <code>required bytes uuid = 1;</code>
     */
    boolean hasUuid();
    /**
     * <code>required bytes uuid = 1;</code>
     */
    com.google.protobuf.ByteString getUuid();
  }
  /**
   * Protobuf type {@code net.maivic.comm.Identity}
   */
  public static final class Identity extends
      com.google.protobuf.GeneratedMessage
      implements IdentityOrBuilder {
    // Use Identity.newBuilder() to construct.
    private Identity(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Identity(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Identity defaultInstance;
    public static Identity getDefaultInstance() {
      return defaultInstance;
    }

    public Identity getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Identity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              uuid_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_Identity_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_Identity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.Identity.class, net.maivic.comm.Maivic.Identity.Builder.class);
    }

    public static com.google.protobuf.Parser<Identity> PARSER =
        new com.google.protobuf.AbstractParser<Identity>() {
      public Identity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Identity(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Identity> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bytes uuid = 1;
    public static final int UUID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString uuid_;
    /**
     * <code>required bytes uuid = 1;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes uuid = 1;</code>
     */
    public com.google.protobuf.ByteString getUuid() {
      return uuid_;
    }

    private void initFields() {
      uuid_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, uuid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, uuid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.Identity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.Identity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.Identity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.Identity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.Identity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.Identity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.Identity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.Identity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.Identity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.Identity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.Identity prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.Identity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.maivic.comm.Maivic.IdentityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_Identity_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_Identity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.Identity.class, net.maivic.comm.Maivic.Identity.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.Identity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uuid_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_Identity_descriptor;
      }

      public net.maivic.comm.Maivic.Identity getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.Identity.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.Identity build() {
        net.maivic.comm.Maivic.Identity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.Identity buildPartial() {
        net.maivic.comm.Maivic.Identity result = new net.maivic.comm.Maivic.Identity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.Identity) {
          return mergeFrom((net.maivic.comm.Maivic.Identity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.Identity other) {
        if (other == net.maivic.comm.Maivic.Identity.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          setUuid(other.getUuid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.Identity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.Identity) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bytes uuid = 1;
      private com.google.protobuf.ByteString uuid_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes uuid = 1;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes uuid = 1;</code>
       */
      public com.google.protobuf.ByteString getUuid() {
        return uuid_;
      }
      /**
       * <code>required bytes uuid = 1;</code>
       */
      public Builder setUuid(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes uuid = 1;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.Identity)
    }

    static {
      defaultInstance = new Identity(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.Identity)
  }

  public interface AuthenticationRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 auth_service_id = 1;
    /**
     * <code>required int32 auth_service_id = 1;</code>
     */
    boolean hasAuthServiceId();
    /**
     * <code>required int32 auth_service_id = 1;</code>
     */
    int getAuthServiceId();
  }
  /**
   * Protobuf type {@code net.maivic.comm.AuthenticationRequest}
   */
  public static final class AuthenticationRequest extends
      com.google.protobuf.GeneratedMessage
      implements AuthenticationRequestOrBuilder {
    // Use AuthenticationRequest.newBuilder() to construct.
    private AuthenticationRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AuthenticationRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AuthenticationRequest defaultInstance;
    public static AuthenticationRequest getDefaultInstance() {
      return defaultInstance;
    }

    public AuthenticationRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AuthenticationRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              authServiceId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_AuthenticationRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_AuthenticationRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.AuthenticationRequest.class, net.maivic.comm.Maivic.AuthenticationRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<AuthenticationRequest> PARSER =
        new com.google.protobuf.AbstractParser<AuthenticationRequest>() {
      public AuthenticationRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AuthenticationRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AuthenticationRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 auth_service_id = 1;
    public static final int AUTH_SERVICE_ID_FIELD_NUMBER = 1;
    private int authServiceId_;
    /**
     * <code>required int32 auth_service_id = 1;</code>
     */
    public boolean hasAuthServiceId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 auth_service_id = 1;</code>
     */
    public int getAuthServiceId() {
      return authServiceId_;
    }

    private void initFields() {
      authServiceId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAuthServiceId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, authServiceId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, authServiceId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.AuthenticationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.AuthenticationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.AuthenticationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.AuthenticationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.AuthenticationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.AuthenticationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.AuthenticationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.AuthenticationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.AuthenticationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.AuthenticationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.AuthenticationRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.AuthenticationRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.maivic.comm.Maivic.AuthenticationRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_AuthenticationRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_AuthenticationRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.AuthenticationRequest.class, net.maivic.comm.Maivic.AuthenticationRequest.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.AuthenticationRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        authServiceId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_AuthenticationRequest_descriptor;
      }

      public net.maivic.comm.Maivic.AuthenticationRequest getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.AuthenticationRequest.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.AuthenticationRequest build() {
        net.maivic.comm.Maivic.AuthenticationRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.AuthenticationRequest buildPartial() {
        net.maivic.comm.Maivic.AuthenticationRequest result = new net.maivic.comm.Maivic.AuthenticationRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.authServiceId_ = authServiceId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.AuthenticationRequest) {
          return mergeFrom((net.maivic.comm.Maivic.AuthenticationRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.AuthenticationRequest other) {
        if (other == net.maivic.comm.Maivic.AuthenticationRequest.getDefaultInstance()) return this;
        if (other.hasAuthServiceId()) {
          setAuthServiceId(other.getAuthServiceId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAuthServiceId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.AuthenticationRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.AuthenticationRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 auth_service_id = 1;
      private int authServiceId_ ;
      /**
       * <code>required int32 auth_service_id = 1;</code>
       */
      public boolean hasAuthServiceId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 auth_service_id = 1;</code>
       */
      public int getAuthServiceId() {
        return authServiceId_;
      }
      /**
       * <code>required int32 auth_service_id = 1;</code>
       */
      public Builder setAuthServiceId(int value) {
        bitField0_ |= 0x00000001;
        authServiceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 auth_service_id = 1;</code>
       */
      public Builder clearAuthServiceId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        authServiceId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.AuthenticationRequest)
    }

    static {
      defaultInstance = new AuthenticationRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.AuthenticationRequest)
  }

  public interface NameSpaceUpdateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .net.maivic.comm.NameSpaceUpdate.Operation op = 1;
    /**
     * <code>required .net.maivic.comm.NameSpaceUpdate.Operation op = 1;</code>
     */
    boolean hasOp();
    /**
     * <code>required .net.maivic.comm.NameSpaceUpdate.Operation op = 1;</code>
     */
    net.maivic.comm.Maivic.NameSpaceUpdate.Operation getOp();

    // repeated int64 ids = 2 [packed = true];
    /**
     * <code>repeated int64 ids = 2 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getIdsList();
    /**
     * <code>repeated int64 ids = 2 [packed = true];</code>
     */
    int getIdsCount();
    /**
     * <code>repeated int64 ids = 2 [packed = true];</code>
     */
    long getIds(int index);

    // repeated bytes values = 3;
    /**
     * <code>repeated bytes values = 3;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getValuesList();
    /**
     * <code>repeated bytes values = 3;</code>
     */
    int getValuesCount();
    /**
     * <code>repeated bytes values = 3;</code>
     */
    com.google.protobuf.ByteString getValues(int index);

    // repeated int64 skipped_ids = 4;
    /**
     * <code>repeated int64 skipped_ids = 4;</code>
     */
    java.util.List<java.lang.Long> getSkippedIdsList();
    /**
     * <code>repeated int64 skipped_ids = 4;</code>
     */
    int getSkippedIdsCount();
    /**
     * <code>repeated int64 skipped_ids = 4;</code>
     */
    long getSkippedIds(int index);

    // optional bytes domain_hash_after_op = 5;
    /**
     * <code>optional bytes domain_hash_after_op = 5;</code>
     */
    boolean hasDomainHashAfterOp();
    /**
     * <code>optional bytes domain_hash_after_op = 5;</code>
     */
    com.google.protobuf.ByteString getDomainHashAfterOp();

    // optional bytes table_hash_after_op = 6;
    /**
     * <code>optional bytes table_hash_after_op = 6;</code>
     */
    boolean hasTableHashAfterOp();
    /**
     * <code>optional bytes table_hash_after_op = 6;</code>
     */
    com.google.protobuf.ByteString getTableHashAfterOp();

    // optional int64 domain = 7 [default = 0];
    /**
     * <code>optional int64 domain = 7 [default = 0];</code>
     */
    boolean hasDomain();
    /**
     * <code>optional int64 domain = 7 [default = 0];</code>
     */
    long getDomain();
  }
  /**
   * Protobuf type {@code net.maivic.comm.NameSpaceUpdate}
   */
  public static final class NameSpaceUpdate extends
      com.google.protobuf.GeneratedMessage
      implements NameSpaceUpdateOrBuilder {
    // Use NameSpaceUpdate.newBuilder() to construct.
    private NameSpaceUpdate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NameSpaceUpdate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NameSpaceUpdate defaultInstance;
    public static NameSpaceUpdate getDefaultInstance() {
      return defaultInstance;
    }

    public NameSpaceUpdate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NameSpaceUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              net.maivic.comm.Maivic.NameSpaceUpdate.Operation value = net.maivic.comm.Maivic.NameSpaceUpdate.Operation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                op_ = value;
              }
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                ids_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              ids_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                ids_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                ids_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                values_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000004;
              }
              values_.add(input.readBytes());
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                skippedIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              skippedIds_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                skippedIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                skippedIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              bitField0_ |= 0x00000002;
              domainHashAfterOp_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000004;
              tableHashAfterOp_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              domain_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          ids_ = java.util.Collections.unmodifiableList(ids_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          values_ = java.util.Collections.unmodifiableList(values_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          skippedIds_ = java.util.Collections.unmodifiableList(skippedIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_NameSpaceUpdate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.maivic.comm.Maivic.internal_static_net_maivic_comm_NameSpaceUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.maivic.comm.Maivic.NameSpaceUpdate.class, net.maivic.comm.Maivic.NameSpaceUpdate.Builder.class);
    }

    public static com.google.protobuf.Parser<NameSpaceUpdate> PARSER =
        new com.google.protobuf.AbstractParser<NameSpaceUpdate>() {
      public NameSpaceUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NameSpaceUpdate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NameSpaceUpdate> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code net.maivic.comm.NameSpaceUpdate.Operation}
     */
    public enum Operation
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>READ = 1;</code>
       */
      READ(0, 1),
      /**
       * <code>WRITE = 2;</code>
       */
      WRITE(1, 2),
      /**
       * <code>READ_ALL_EXCEPT = 5;</code>
       */
      READ_ALL_EXCEPT(2, 5),
      /**
       * <code>RESET_DOMAIN = 6;</code>
       */
      RESET_DOMAIN(3, 6),
      ;

      /**
       * <code>READ = 1;</code>
       */
      public static final int READ_VALUE = 1;
      /**
       * <code>WRITE = 2;</code>
       */
      public static final int WRITE_VALUE = 2;
      /**
       * <code>READ_ALL_EXCEPT = 5;</code>
       */
      public static final int READ_ALL_EXCEPT_VALUE = 5;
      /**
       * <code>RESET_DOMAIN = 6;</code>
       */
      public static final int RESET_DOMAIN_VALUE = 6;


      public final int getNumber() { return value; }

      public static Operation valueOf(int value) {
        switch (value) {
          case 1: return READ;
          case 2: return WRITE;
          case 5: return READ_ALL_EXCEPT;
          case 6: return RESET_DOMAIN;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Operation>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Operation>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Operation>() {
              public Operation findValueByNumber(int number) {
                return Operation.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.NameSpaceUpdate.getDescriptor().getEnumTypes().get(0);
      }

      private static final Operation[] VALUES = values();

      public static Operation valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Operation(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:net.maivic.comm.NameSpaceUpdate.Operation)
    }

    private int bitField0_;
    // required .net.maivic.comm.NameSpaceUpdate.Operation op = 1;
    public static final int OP_FIELD_NUMBER = 1;
    private net.maivic.comm.Maivic.NameSpaceUpdate.Operation op_;
    /**
     * <code>required .net.maivic.comm.NameSpaceUpdate.Operation op = 1;</code>
     */
    public boolean hasOp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .net.maivic.comm.NameSpaceUpdate.Operation op = 1;</code>
     */
    public net.maivic.comm.Maivic.NameSpaceUpdate.Operation getOp() {
      return op_;
    }

    // repeated int64 ids = 2 [packed = true];
    public static final int IDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> ids_;
    /**
     * <code>repeated int64 ids = 2 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getIdsList() {
      return ids_;
    }
    /**
     * <code>repeated int64 ids = 2 [packed = true];</code>
     */
    public int getIdsCount() {
      return ids_.size();
    }
    /**
     * <code>repeated int64 ids = 2 [packed = true];</code>
     */
    public long getIds(int index) {
      return ids_.get(index);
    }
    private int idsMemoizedSerializedSize = -1;

    // repeated bytes values = 3;
    public static final int VALUES_FIELD_NUMBER = 3;
    private java.util.List<com.google.protobuf.ByteString> values_;
    /**
     * <code>repeated bytes values = 3;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getValuesList() {
      return values_;
    }
    /**
     * <code>repeated bytes values = 3;</code>
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated bytes values = 3;</code>
     */
    public com.google.protobuf.ByteString getValues(int index) {
      return values_.get(index);
    }

    // repeated int64 skipped_ids = 4;
    public static final int SKIPPED_IDS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> skippedIds_;
    /**
     * <code>repeated int64 skipped_ids = 4;</code>
     */
    public java.util.List<java.lang.Long>
        getSkippedIdsList() {
      return skippedIds_;
    }
    /**
     * <code>repeated int64 skipped_ids = 4;</code>
     */
    public int getSkippedIdsCount() {
      return skippedIds_.size();
    }
    /**
     * <code>repeated int64 skipped_ids = 4;</code>
     */
    public long getSkippedIds(int index) {
      return skippedIds_.get(index);
    }

    // optional bytes domain_hash_after_op = 5;
    public static final int DOMAIN_HASH_AFTER_OP_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString domainHashAfterOp_;
    /**
     * <code>optional bytes domain_hash_after_op = 5;</code>
     */
    public boolean hasDomainHashAfterOp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes domain_hash_after_op = 5;</code>
     */
    public com.google.protobuf.ByteString getDomainHashAfterOp() {
      return domainHashAfterOp_;
    }

    // optional bytes table_hash_after_op = 6;
    public static final int TABLE_HASH_AFTER_OP_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString tableHashAfterOp_;
    /**
     * <code>optional bytes table_hash_after_op = 6;</code>
     */
    public boolean hasTableHashAfterOp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes table_hash_after_op = 6;</code>
     */
    public com.google.protobuf.ByteString getTableHashAfterOp() {
      return tableHashAfterOp_;
    }

    // optional int64 domain = 7 [default = 0];
    public static final int DOMAIN_FIELD_NUMBER = 7;
    private long domain_;
    /**
     * <code>optional int64 domain = 7 [default = 0];</code>
     */
    public boolean hasDomain() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 domain = 7 [default = 0];</code>
     */
    public long getDomain() {
      return domain_;
    }

    private void initFields() {
      op_ = net.maivic.comm.Maivic.NameSpaceUpdate.Operation.READ;
      ids_ = java.util.Collections.emptyList();
      values_ = java.util.Collections.emptyList();
      skippedIds_ = java.util.Collections.emptyList();
      domainHashAfterOp_ = com.google.protobuf.ByteString.EMPTY;
      tableHashAfterOp_ = com.google.protobuf.ByteString.EMPTY;
      domain_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasOp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, op_.getNumber());
      }
      if (getIdsList().size() > 0) {
        output.writeRawVarint32(18);
        output.writeRawVarint32(idsMemoizedSerializedSize);
      }
      for (int i = 0; i < ids_.size(); i++) {
        output.writeInt64NoTag(ids_.get(i));
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeBytes(3, values_.get(i));
      }
      for (int i = 0; i < skippedIds_.size(); i++) {
        output.writeInt64(4, skippedIds_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(5, domainHashAfterOp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(6, tableHashAfterOp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(7, domain_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, op_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ids_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(ids_.get(i));
        }
        size += dataSize;
        if (!getIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        idsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < values_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(values_.get(i));
        }
        size += dataSize;
        size += 1 * getValuesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < skippedIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(skippedIds_.get(i));
        }
        size += dataSize;
        size += 1 * getSkippedIdsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, domainHashAfterOp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, tableHashAfterOp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, domain_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.maivic.comm.Maivic.NameSpaceUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.NameSpaceUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.NameSpaceUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.maivic.comm.Maivic.NameSpaceUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.NameSpaceUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.NameSpaceUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.NameSpaceUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.maivic.comm.Maivic.NameSpaceUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.maivic.comm.Maivic.NameSpaceUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.maivic.comm.Maivic.NameSpaceUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.maivic.comm.Maivic.NameSpaceUpdate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.maivic.comm.NameSpaceUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.maivic.comm.Maivic.NameSpaceUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_NameSpaceUpdate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_NameSpaceUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.maivic.comm.Maivic.NameSpaceUpdate.class, net.maivic.comm.Maivic.NameSpaceUpdate.Builder.class);
      }

      // Construct using net.maivic.comm.Maivic.NameSpaceUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        op_ = net.maivic.comm.Maivic.NameSpaceUpdate.Operation.READ;
        bitField0_ = (bitField0_ & ~0x00000001);
        ids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        values_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        skippedIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        domainHashAfterOp_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        tableHashAfterOp_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        domain_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.maivic.comm.Maivic.internal_static_net_maivic_comm_NameSpaceUpdate_descriptor;
      }

      public net.maivic.comm.Maivic.NameSpaceUpdate getDefaultInstanceForType() {
        return net.maivic.comm.Maivic.NameSpaceUpdate.getDefaultInstance();
      }

      public net.maivic.comm.Maivic.NameSpaceUpdate build() {
        net.maivic.comm.Maivic.NameSpaceUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.maivic.comm.Maivic.NameSpaceUpdate buildPartial() {
        net.maivic.comm.Maivic.NameSpaceUpdate result = new net.maivic.comm.Maivic.NameSpaceUpdate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.op_ = op_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          ids_ = java.util.Collections.unmodifiableList(ids_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.ids_ = ids_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          values_ = java.util.Collections.unmodifiableList(values_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.values_ = values_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          skippedIds_ = java.util.Collections.unmodifiableList(skippedIds_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.skippedIds_ = skippedIds_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000002;
        }
        result.domainHashAfterOp_ = domainHashAfterOp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tableHashAfterOp_ = tableHashAfterOp_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.domain_ = domain_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.maivic.comm.Maivic.NameSpaceUpdate) {
          return mergeFrom((net.maivic.comm.Maivic.NameSpaceUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.maivic.comm.Maivic.NameSpaceUpdate other) {
        if (other == net.maivic.comm.Maivic.NameSpaceUpdate.getDefaultInstance()) return this;
        if (other.hasOp()) {
          setOp(other.getOp());
        }
        if (!other.ids_.isEmpty()) {
          if (ids_.isEmpty()) {
            ids_ = other.ids_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureIdsIsMutable();
            ids_.addAll(other.ids_);
          }
          onChanged();
        }
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        if (!other.skippedIds_.isEmpty()) {
          if (skippedIds_.isEmpty()) {
            skippedIds_ = other.skippedIds_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSkippedIdsIsMutable();
            skippedIds_.addAll(other.skippedIds_);
          }
          onChanged();
        }
        if (other.hasDomainHashAfterOp()) {
          setDomainHashAfterOp(other.getDomainHashAfterOp());
        }
        if (other.hasTableHashAfterOp()) {
          setTableHashAfterOp(other.getTableHashAfterOp());
        }
        if (other.hasDomain()) {
          setDomain(other.getDomain());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasOp()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.maivic.comm.Maivic.NameSpaceUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.maivic.comm.Maivic.NameSpaceUpdate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .net.maivic.comm.NameSpaceUpdate.Operation op = 1;
      private net.maivic.comm.Maivic.NameSpaceUpdate.Operation op_ = net.maivic.comm.Maivic.NameSpaceUpdate.Operation.READ;
      /**
       * <code>required .net.maivic.comm.NameSpaceUpdate.Operation op = 1;</code>
       */
      public boolean hasOp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .net.maivic.comm.NameSpaceUpdate.Operation op = 1;</code>
       */
      public net.maivic.comm.Maivic.NameSpaceUpdate.Operation getOp() {
        return op_;
      }
      /**
       * <code>required .net.maivic.comm.NameSpaceUpdate.Operation op = 1;</code>
       */
      public Builder setOp(net.maivic.comm.Maivic.NameSpaceUpdate.Operation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        op_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .net.maivic.comm.NameSpaceUpdate.Operation op = 1;</code>
       */
      public Builder clearOp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        op_ = net.maivic.comm.Maivic.NameSpaceUpdate.Operation.READ;
        onChanged();
        return this;
      }

      // repeated int64 ids = 2 [packed = true];
      private java.util.List<java.lang.Long> ids_ = java.util.Collections.emptyList();
      private void ensureIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          ids_ = new java.util.ArrayList<java.lang.Long>(ids_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 ids = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getIdsList() {
        return java.util.Collections.unmodifiableList(ids_);
      }
      /**
       * <code>repeated int64 ids = 2 [packed = true];</code>
       */
      public int getIdsCount() {
        return ids_.size();
      }
      /**
       * <code>repeated int64 ids = 2 [packed = true];</code>
       */
      public long getIds(int index) {
        return ids_.get(index);
      }
      /**
       * <code>repeated int64 ids = 2 [packed = true];</code>
       */
      public Builder setIds(
          int index, long value) {
        ensureIdsIsMutable();
        ids_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 ids = 2 [packed = true];</code>
       */
      public Builder addIds(long value) {
        ensureIdsIsMutable();
        ids_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 ids = 2 [packed = true];</code>
       */
      public Builder addAllIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureIdsIsMutable();
        super.addAll(values, ids_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 ids = 2 [packed = true];</code>
       */
      public Builder clearIds() {
        ids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated bytes values = 3;
      private java.util.List<com.google.protobuf.ByteString> values_ = java.util.Collections.emptyList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          values_ = new java.util.ArrayList<com.google.protobuf.ByteString>(values_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated bytes values = 3;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getValuesList() {
        return java.util.Collections.unmodifiableList(values_);
      }
      /**
       * <code>repeated bytes values = 3;</code>
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated bytes values = 3;</code>
       */
      public com.google.protobuf.ByteString getValues(int index) {
        return values_.get(index);
      }
      /**
       * <code>repeated bytes values = 3;</code>
       */
      public Builder setValues(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValuesIsMutable();
        values_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes values = 3;</code>
       */
      public Builder addValues(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValuesIsMutable();
        values_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes values = 3;</code>
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureValuesIsMutable();
        super.addAll(values, values_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes values = 3;</code>
       */
      public Builder clearValues() {
        values_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int64 skipped_ids = 4;
      private java.util.List<java.lang.Long> skippedIds_ = java.util.Collections.emptyList();
      private void ensureSkippedIdsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          skippedIds_ = new java.util.ArrayList<java.lang.Long>(skippedIds_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int64 skipped_ids = 4;</code>
       */
      public java.util.List<java.lang.Long>
          getSkippedIdsList() {
        return java.util.Collections.unmodifiableList(skippedIds_);
      }
      /**
       * <code>repeated int64 skipped_ids = 4;</code>
       */
      public int getSkippedIdsCount() {
        return skippedIds_.size();
      }
      /**
       * <code>repeated int64 skipped_ids = 4;</code>
       */
      public long getSkippedIds(int index) {
        return skippedIds_.get(index);
      }
      /**
       * <code>repeated int64 skipped_ids = 4;</code>
       */
      public Builder setSkippedIds(
          int index, long value) {
        ensureSkippedIdsIsMutable();
        skippedIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 skipped_ids = 4;</code>
       */
      public Builder addSkippedIds(long value) {
        ensureSkippedIdsIsMutable();
        skippedIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 skipped_ids = 4;</code>
       */
      public Builder addAllSkippedIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSkippedIdsIsMutable();
        super.addAll(values, skippedIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 skipped_ids = 4;</code>
       */
      public Builder clearSkippedIds() {
        skippedIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional bytes domain_hash_after_op = 5;
      private com.google.protobuf.ByteString domainHashAfterOp_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes domain_hash_after_op = 5;</code>
       */
      public boolean hasDomainHashAfterOp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes domain_hash_after_op = 5;</code>
       */
      public com.google.protobuf.ByteString getDomainHashAfterOp() {
        return domainHashAfterOp_;
      }
      /**
       * <code>optional bytes domain_hash_after_op = 5;</code>
       */
      public Builder setDomainHashAfterOp(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        domainHashAfterOp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes domain_hash_after_op = 5;</code>
       */
      public Builder clearDomainHashAfterOp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        domainHashAfterOp_ = getDefaultInstance().getDomainHashAfterOp();
        onChanged();
        return this;
      }

      // optional bytes table_hash_after_op = 6;
      private com.google.protobuf.ByteString tableHashAfterOp_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes table_hash_after_op = 6;</code>
       */
      public boolean hasTableHashAfterOp() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bytes table_hash_after_op = 6;</code>
       */
      public com.google.protobuf.ByteString getTableHashAfterOp() {
        return tableHashAfterOp_;
      }
      /**
       * <code>optional bytes table_hash_after_op = 6;</code>
       */
      public Builder setTableHashAfterOp(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        tableHashAfterOp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes table_hash_after_op = 6;</code>
       */
      public Builder clearTableHashAfterOp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tableHashAfterOp_ = getDefaultInstance().getTableHashAfterOp();
        onChanged();
        return this;
      }

      // optional int64 domain = 7 [default = 0];
      private long domain_ ;
      /**
       * <code>optional int64 domain = 7 [default = 0];</code>
       */
      public boolean hasDomain() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 domain = 7 [default = 0];</code>
       */
      public long getDomain() {
        return domain_;
      }
      /**
       * <code>optional int64 domain = 7 [default = 0];</code>
       */
      public Builder setDomain(long value) {
        bitField0_ |= 0x00000040;
        domain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 domain = 7 [default = 0];</code>
       */
      public Builder clearDomain() {
        bitField0_ = (bitField0_ & ~0x00000040);
        domain_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.maivic.comm.NameSpaceUpdate)
    }

    static {
      defaultInstance = new NameSpaceUpdate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.maivic.comm.NameSpaceUpdate)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_ThreadControl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_ThreadControl_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_MessageContainer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_MessageContainer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_MaivicServices_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_MaivicServices_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_SelfDescribingMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_SelfDescribingMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_BaseType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_BaseType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_FunctionCall_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_FunctionCall_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_FunctionReturn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_FunctionReturn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_FunctionProgress_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_FunctionProgress_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_ExceptionType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_ExceptionType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_StackTrace_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_StackTrace_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_EntityReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_EntityReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_RelationRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_RelationRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_EntityResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_EntityResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_Identity_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_Identity_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_AuthenticationRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_AuthenticationRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_maivic_comm_NameSpaceUpdate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_maivic_comm_NameSpaceUpdate_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014maivic.proto\022\017net.maivic.comm\"\355\001\n\rThre" +
      "adControl\022\021\n\tthread_id\030\001 \002(\005\022D\n\toperatio" +
      "n\030\002 \002(\0162(.net.maivic.comm.ThreadControl." +
      "Operation:\007DEFAULT\022\030\n\rin_thread_seq\030\003 \001(" +
      "\005:\0010\"i\n\tOperation\022\r\n\tCLOSE_REQ\020\001\022\r\n\tCLOS" +
      "E_ACK\020\002\022\017\n\013FORCE_CLOSE\020\003\022\t\n\005PAUSE\020\004\022\n\n\006R" +
      "ESUME\020\005\022\010\n\004OPEN\020\006\022\014\n\007DEFAULT\020\377\001\"\275\001\n\020Mess" +
      "ageContainer\022\022\n\nservice_id\030\001 \002(\005\022\017\n\007cont" +
      "ent\030\002 \002(\014\0221\n\016identity_token\030\003 \001(\0132\031.net." +
      "maivic.comm.Identity\022\022\n\nauth_token\030\004 \001(\003",
      "\0226\n\016thread_control\030\005 \001(\0132\036.net.maivic.co" +
      "mm.ThreadControl*\005\010\006\020\200\002\"C\n\016MaivicService" +
      "s\022\023\n\013service_ids\030\001 \003(\005\022\025\n\rservice_names\030" +
      "\002 \003(\t*\005\010\003\020\200\002\";\n\025SelfDescribingMessage\022\021\n" +
      "\ttype_name\030\001 \002(\t\022\017\n\007content\030\002 \002(\014\"\272\006\n\010Ba" +
      "seType\022\r\n\005bytes\030\001 \003(\014\022\016\n\006string\030\002 \003(\t\022\017\n" +
      "\003i32\030\003 \003(\005B\002\020\001\022\017\n\003i64\030\004 \003(\003B\002\020\001\022\022\n\006uint3" +
      "2\030\005 \003(\rB\002\020\001\022\022\n\006uint64\030\006 \003(\004B\002\020\001\022\022\n\006sint3" +
      "2\030\007 \003(\021B\002\020\001\022\022\n\006sint64\030\010 \003(\022B\002\020\001\022\023\n\007fixed" +
      "32\030\t \003(\007B\002\020\001\022\023\n\007fixed64\030\n \003(\006B\002\020\001\022\024\n\010sfi",
      "xed32\030\013 \003(\017B\002\020\001\022\024\n\010sfixed64\030\014 \003(\020B\002\020\001\022\020\n" +
      "\004bool\030\r \003(\010B\002\020\001\022\022\n\006double\030\016 \003(\001B\002\020\001\022\021\n\005f" +
      "loat\030\017 \003(\002B\002\020\001\022\030\n\tlist_type\030\020 \001(\010:\005false" +
      "\0227\n\007message\030\021 \003(\0132&.net.maivic.comm.Self" +
      "DescribingMessage\022,\n\tbase_type\030\022 \003(\0132\031.n" +
      "et.maivic.comm.BaseType\022<\n\014encoded_type\030" +
      "\023 \001(\0162&.net.maivic.comm.BaseType.ENCODED" +
      "_TYPE\022>\n\016component_type\030\024 \001(\0162&.net.maiv" +
      "ic.comm.BaseType.ENCODED_TYPE\"\216\002\n\014ENCODE" +
      "D_TYPE\022\t\n\005BYTES\020\001\022\n\n\006STRING\020\002\022\t\n\005INT32\020\003",
      "\022\t\n\005INT64\020\004\022\n\n\006UINT32\020\005\022\n\n\006UINT64\020\006\022\n\n\006S" +
      "INT32\020\007\022\n\n\006SINT64\020\010\022\013\n\007FIXED32\020\t\022\013\n\007FIXE" +
      "D64\020\n\022\014\n\010SFIXED32\020\013\022\014\n\010SFIXED64\020\014\022\010\n\004BOO" +
      "L\020\r\022\n\n\006DOUBLE\020\016\022\t\n\005FLOAT\020\017\022\r\n\tLIST_TYPE\020" +
      "\020\022\013\n\007UNKNOWN\020\021\022\013\n\007MESSAGE\020\022\022\027\n\023COMPONENT" +
      "_BASE_TYPE\020\023\022\010\n\004NONE\020\024\"s\n\014FunctionCall\022\020" +
      "\n\010function\030\001 \002(\t\022\'\n\004args\030\002 \003(\0132\031.net.mai" +
      "vic.comm.BaseType\022\020\n\010isMethod\030\003 \001(\010\022\026\n\016i" +
      "sSubscription\030\004 \001(\010\"\242\001\n\016FunctionReturn\022(" +
      "\n\005value\030\001 \001(\0132\031.net.maivic.comm.BaseType",
      "\0221\n\texception\030\002 \001(\0132\036.net.maivic.comm.Ex" +
      "ceptionType\0223\n\010progress\030\003 \001(\0132!.net.maiv" +
      "ic.comm.FunctionProgress\":\n\020FunctionProg" +
      "ress\022\020\n\010progress\030\001 \002(\005\022\024\n\014max_progress\030\002" +
      " \001(\003\"\215\001\n\rExceptionType\022\017\n\007type_id\030\001 \002(\005\022" +
      "\017\n\007message\030\002 \001(\t\022+\n\006strace\030\003 \001(\0132\033.net.m" +
      "aivic.comm.StackTrace\022-\n\005cause\030\004 \001(\0132\036.n" +
      "et.maivic.comm.ExceptionType\"\033\n\nStackTra" +
      "ce\022\r\n\005frame\030\001 \003(\t\"R\n\tEntityReq\022\026\n\016entity" +
      "_type_id\030\001 \002(\005\022\023\n\013entities_pk\030\002 \003(\014\022\030\n\020e",
      "ntity_type_name\030\003 \001(\t\"P\n\017RelationRequest" +
      "\022\023\n\013relation_id\030\001 \002(\005\022\021\n\tentity_pk\030\002 \002(\014" +
      "\022\025\n\rrelation_name\030\003 \001(\t\"_\n\016EntityRespons" +
      "e\022\026\n\016entity_type_id\030\001 \002(\005\022\030\n\020entity_type" +
      "_name\030\004 \001(\005\022\033\n\023serialized_entities\030\005 \003(\014" +
      "\"\030\n\010Identity\022\014\n\004uuid\030\001 \002(\014\"0\n\025Authentica" +
      "tionRequest\022\027\n\017auth_service_id\030\001 \002(\005\"\226\002\n" +
      "\017NameSpaceUpdate\0226\n\002op\030\001 \002(\0162*.net.maivi" +
      "c.comm.NameSpaceUpdate.Operation\022\017\n\003ids\030" +
      "\002 \003(\003B\002\020\001\022\016\n\006values\030\003 \003(\014\022\023\n\013skipped_ids",
      "\030\004 \003(\003\022\034\n\024domain_hash_after_op\030\005 \001(\014\022\033\n\023" +
      "table_hash_after_op\030\006 \001(\014\022\021\n\006domain\030\007 \001(" +
      "\003:\0010\"G\n\tOperation\022\010\n\004READ\020\001\022\t\n\005WRITE\020\002\022\023" +
      "\n\017READ_ALL_EXCEPT\020\005\022\020\n\014RESET_DOMAIN\020\006*=\n" +
      "\tNamespace\022\013\n\007MESSAGE\020\001\022\n\n\006ENTITY\020\002\022\013\n\007S" +
      "ERVICE\020\003\022\n\n\006THREAD\020\004"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_net_maivic_comm_ThreadControl_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_net_maivic_comm_ThreadControl_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_ThreadControl_descriptor,
              new java.lang.String[] { "ThreadId", "Operation", "InThreadSeq", });
          internal_static_net_maivic_comm_MessageContainer_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_net_maivic_comm_MessageContainer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_MessageContainer_descriptor,
              new java.lang.String[] { "ServiceId", "Content", "IdentityToken", "AuthToken", "ThreadControl", });
          internal_static_net_maivic_comm_MaivicServices_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_net_maivic_comm_MaivicServices_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_MaivicServices_descriptor,
              new java.lang.String[] { "ServiceIds", "ServiceNames", });
          internal_static_net_maivic_comm_SelfDescribingMessage_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_net_maivic_comm_SelfDescribingMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_SelfDescribingMessage_descriptor,
              new java.lang.String[] { "TypeName", "Content", });
          internal_static_net_maivic_comm_BaseType_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_net_maivic_comm_BaseType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_BaseType_descriptor,
              new java.lang.String[] { "Bytes", "String", "I32", "I64", "Uint32", "Uint64", "Sint32", "Sint64", "Fixed32", "Fixed64", "Sfixed32", "Sfixed64", "Bool", "Double", "Float", "ListType", "Message", "BaseType", "EncodedType", "ComponentType", });
          internal_static_net_maivic_comm_FunctionCall_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_net_maivic_comm_FunctionCall_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_FunctionCall_descriptor,
              new java.lang.String[] { "Function", "Args", "IsMethod", "IsSubscription", });
          internal_static_net_maivic_comm_FunctionReturn_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_net_maivic_comm_FunctionReturn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_FunctionReturn_descriptor,
              new java.lang.String[] { "Value", "Exception", "Progress", });
          internal_static_net_maivic_comm_FunctionProgress_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_net_maivic_comm_FunctionProgress_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_FunctionProgress_descriptor,
              new java.lang.String[] { "Progress", "MaxProgress", });
          internal_static_net_maivic_comm_ExceptionType_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_net_maivic_comm_ExceptionType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_ExceptionType_descriptor,
              new java.lang.String[] { "TypeId", "Message", "Strace", "Cause", });
          internal_static_net_maivic_comm_StackTrace_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_net_maivic_comm_StackTrace_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_StackTrace_descriptor,
              new java.lang.String[] { "Frame", });
          internal_static_net_maivic_comm_EntityReq_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_net_maivic_comm_EntityReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_EntityReq_descriptor,
              new java.lang.String[] { "EntityTypeId", "EntitiesPk", "EntityTypeName", });
          internal_static_net_maivic_comm_RelationRequest_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_net_maivic_comm_RelationRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_RelationRequest_descriptor,
              new java.lang.String[] { "RelationId", "EntityPk", "RelationName", });
          internal_static_net_maivic_comm_EntityResponse_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_net_maivic_comm_EntityResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_EntityResponse_descriptor,
              new java.lang.String[] { "EntityTypeId", "EntityTypeName", "SerializedEntities", });
          internal_static_net_maivic_comm_Identity_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_net_maivic_comm_Identity_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_Identity_descriptor,
              new java.lang.String[] { "Uuid", });
          internal_static_net_maivic_comm_AuthenticationRequest_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_net_maivic_comm_AuthenticationRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_AuthenticationRequest_descriptor,
              new java.lang.String[] { "AuthServiceId", });
          internal_static_net_maivic_comm_NameSpaceUpdate_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_net_maivic_comm_NameSpaceUpdate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_maivic_comm_NameSpaceUpdate_descriptor,
              new java.lang.String[] { "Op", "Ids", "Values", "SkippedIds", "DomainHashAfterOp", "TableHashAfterOp", "Domain", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
