syntax = "proto2";
package  net.maivic.comm;

message ThreadControl{
	enum Operation {
		CLOSE_REQ =1;
		CLOSE_ACK=2;
		FORCE_CLOSE=3;
		PAUSE = 4;
		RESUME = 5;
		OPEN=6;
		DEFAULT=255;
	};
	required int32 thread_id =1;
	required Operation operation = 2 [default=DEFAULT];
	optional int32 in_thread_seq =3 [default=0];
};
message MessageContainer {
	required int32 service_id =1;
	required bytes content =2;
	optional Identity identity_token = 3;
	optional int64 auth_token =4;
	optional ThreadControl thread_control=5;
	extensions  6 to 255;
};

message MaivicServices {
	repeated int32 service_ids = 1;
	repeated string service_names =2;
	extensions 3 to 255;
};
enum Namespace {
	MESSAGE = 1;
	ENTITY = 2;
	SERVICE = 3;
	THREAD = 4;
}
message BaseType {
	repeated bytes bytes = 1 ;
	repeated string string =2 ;
	repeated int32 i32 = 3 [packed = true ];
	repeated int64 i64 = 4 [packed = true ];
	repeated uint32 uint32=5 [packed = true ];
	repeated uint64 uint64 = 6 [packed = true ];
	repeated sint32 sint32 = 7 [packed = true ];
	repeated sint64 sint64 = 8 [packed = true ];
	repeated fixed32 fixed32 = 9 [packed = true ];
	repeated fixed64 fixed64 = 10 [packed = true ];
	repeated sfixed32 sfixed32 = 11 [packed = true ];
	repeated sfixed64 sfixed64 = 12 [packed = true ];
	repeated bool bool = 13 [packed = true ];
	repeated double double = 14 [packed=true];
	repeated float float = 15 [packed=true];
	optional bool list_type = 16 [default  =false];
	repeated BaseType containedObject = 17;
	enum ENCODED_TYPE {
		BYTES = 1;
		STRING = 2;
		INT32 = 3;
		INT64 = 4;
		UINT32 = 5;
		UINT64 = 6;
		SINT32 = 7;
		SINT64 = 8;
		FIXED32 = 9;
		FIXED64 = 10;
		SFIXED32 = 11;
		SFIXED64 = 12;
		BOOL = 13;
		DOUBLE=14;
		FLOAT = 15;
		LIST_TYPE=16;
		UNKNOWN=17;
		CONTAINED_OBJECT=18;
		NONE=19;

	};
	optional ENCODED_TYPE encoded_type = 18;
	optional ENCODED_TYPE component_type = 19;
};
message FunctionCall {
	required int32 function = 1;
	repeated BaseType args = 2;
	optional bool isMethod = 3;
}
message FunctionReturn {
	optional BaseType value = 1;
	optional ExceptionType exception = 2;
	optional FunctionProgress progress = 3;
}
message FunctionProgress{
	required int32 progress=1;
	optional int64 max_progress=2;
}
message ExceptionType {
	required int32 type_id = 1;
	optional string message = 2;
	optional StackTrace strace = 3;
	optional ExceptionType cause = 4;
}
message StackTrace {
	repeated string frame = 1;
}
message EntityReq{
	required int32 entity_type_id=1;
	repeated bytes entities_pk=2;
	optional string entity_type_name = 3;
}
message RelationRequest{
	required int32 relation_id =1;
	required bytes entity_pk=2;
	optional string relation_name =3;
}
message EntityResponse{
	required int32 entity_type_id =1;
	optional int32 entity_type_name=4;
	repeated bytes serialized_entities=5;
}

message Identity {
	required int64 uuid =1;
}
message AuthenticationRequest {
	required int32 auth_service_id =1;
}
